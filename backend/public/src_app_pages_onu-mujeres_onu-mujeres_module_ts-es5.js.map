{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASiDA;;;;;;;;AADjCA;;AACIA;;AACAA;;AACAA;;AAUAA;;AACIA;;AAAQA;AAAAA;;AAAA;;AAAA,kCAAe,IAAf;AAAmB,WAAnB;;AAElBA;;AACFA;;AACQA;;AAEJA;;;;;;;;AApBKA;;AAEaA;;AAAAA;;;;;;AAuCEA;;AACIA;;AACAA;;AAAsBA;;AAAGA;;AAAsBA;;AAAIA;;AAEvDA;;;;;;AAF6BA;;AAAAA;;;;;;AAKzBA;;AAAoDA;;AAACA;;;;;;AACrDA;;AACIA;;AAAGA;;AAAOA;;AAAqBA;;AAAQA;;AAAmBA;;AAC9DA;;;;;;AADcA;;AAAAA;;AAA6BA;;AAAAA;;;;;;AAI3CA;;AAAqDA;;AAAoBA;;;;;;AAApBA;;AAAAA;;;;;;AAGrDA;;AACIA;;AACJA;;;;;;;;AADWA;;AAAAA,+FAAuB,aAAvB,EAAuBC,yCAAvB;;;;;;AAEXD;;AACIA;;AACJA;;;;;;;;AADcA;;AAAAA,+FAAuB,aAAvB,EAAuBE,yCAAvB;;;;;;AAEdF;;AACIA;;AACJA;;;;;;;;AADWA;;AAAAA,+FAAuB,aAAvB,EAAuBG,yCAAvB;;;;;;AAiBKH;;;;;;AAAAA;;;;;;;;AAGJA;;AAA4HA;AAAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAC3GI,qCAC3DC,QAD2D,CAC3DC,gBAD2D,CAD2G;AAE/I,WAF+I;;AAA5HN;;;;;;;;;;AAElBA,mGAA2B,aAA3B,EAA2BO,mDAA3B;;;;;;;;AAlBcP;;AAAUA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAYNA;;AAIAA;;AAGJA;;;;;;;;AARhBA;;AAK4BA;;AAAAA,+FAAsB,UAAtB,EAAsBQ,IAAtB;;;;;;AAUZR;;AAGIA;;AACAA;;AAAGA;;AAAoBA;;AAAIA;;AAC/BA;;;;;;AADOA;;AAAAA;;;;;;AATXA;;AAKIA;;AAMJA;;;;;;;;AANUA;;AAAAA;;;;;;AA5BdA;;AACIA;;AACIA;;AAoBJA;;AACAA;;AAYJA;;;;;;;;;;AAlCoCA;;AAAAA,+FAAuB,aAAvB,EAAuBS,yCAAvB;;AAUjET;;AAAAA,oGACK,cADL,EACKS,iBADL;;AAYuCT;;AAAAA;;;;;;;;AAaVA;;AACIA;;AACIA;;AAAUA;AAAAA;;AAAA;;AAAA;;AAAA,uEAKhC,CALgC,EAK/BU,yBAL+B;AAK/B,WAL+B;;AAQNV;;AACJA;;AACAA;;AAAUA;AAAAA;;AAAA;;AAAA;;AAAA,uEAKhC,CALgC,EAK/BW,yBAL+B;AAK/B,WAL+B;;AAQNX;;AACJA;;AACJA;;AACJA;;;;;;;;AAtBoCA;;AAAAA,+FAAuB,aAAvB,EAAuBY,yCAAvB;;;;;;AA8BxBZ;;;;;;AAAAA;;;;;;;;AAEJA;;AAA6HA;AAAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBACxGa,qCAC3DR,QAD2D,CAC3DS,gBAD2D,CADwG;AAE5I,WAF4I;;AAA7Hd;;;;;;;;;;AAEdA,mGAA2B,aAA3B,EAA2Be,mDAA3B;;;;;;AAVUf;;AAKIA;;AAGAA;;AAGJA;;;;;;;;;;;;AAX6BA,wHAA4C,aAA5C,EAA4CgB,kEAA5C;;AAQjBhB;;AAAAA,+FAAsB,UAAtB,EAAsBiB,IAAtB;;;;;;AAThBjB;;AACIA;;AAaJA;;;;;;;;AAX/BA;;AAAAA,oGACK,cADL,EACKkB,iBADL;;;;;;AAY+BlB;;AACIA;;AACAA;;AACJA;;;;;;;;;;AAFgEA;;AAAAA,yFAA4B,aAA5B,EAA4BmB,yCAA5B;;;;;;AAGhEnB;;AACIA;;AACIA;;AACJA;;AACAA;;AACIA;;AAA8BA;;AAAEA;;AAChCA;;AAA8BA;;AAAEA;;AAChCA;;AAA8BA;;AAAEA;;AAChCA;;AAA8BA;;AAAEA;;AAChCA;;AAA8BA;;AAAEA;;AACpCA;;AACAA;;AACIA;;AACJA;;AACJA;;;;;;;;AAZQA;;AAAAA;;AAE4DA;;AAAAA,+FAAuB,aAAvB,EAAuBoB,yCAAvB;;AAQ5DpB;;AAAAA;;;;;;AAGRA;;AACIA;;AACIA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAIA;;AAAiBA;;AACzBA;;AACJA;;AACJA;;;;;;AAPQA;;AAAAA;;AAIQA;;AAAAA;;;;;;AAYhBA;;AACIA;;AAAYA;;AAAGA;;AAAoBA;;AAAKA;;AAC5CA;;;;;;AADmBA;;AAAAA;;;;;;AAEnBA;;AACIA;;AACJA;;;;;;AAZJA;;AAKIA;;AAEAA;;AAGAA;;AAGJA;;;;;;;;AAN4BA;;AAAAA;;AAGAA;;AAAAA;;;;;;AA7IhCA;;AACIA;;AAKAA;;AAEIA;;AACAA;;AAGJA;;AACAA;;AACIA;;AACJA;;AACAA;;AACIA;;AAGAA;;AAGAA;;AAGAA;;AAoCAA;;AAwBAA;;AAeAA;;AAIAA;;AAeAA;;AAUJA;;AACAA;;AAcAA;;AACJA;;;;;;;;;;AAjJUA;;AAAAA;;AAOyBA;;AAAAA;;AACrBA;;AAAAA;;AAKCA;;AAAAA;;AAENA;;AAAAA;;AACkBA;;AAAAA;;AAGAA;;AAAAA;;AAGAA;;AAAAA;;AAGAA;;AAAAA;;AAoCAA;;AAAAA;;AAwBAA;;AAAAA;;AAeAA;;AAAAA;;AAI2DA;;AAAAA;;AAevDA;;AAAAA;;AAWrBA;;AAAAA;;;;;;AA1IdA;;AAOIA;;AAuJJA;;;;;;AAvJUA;;AAAAA;;;;;;;;AA6JNA;;AAAmFA;AAAAA;;AAAA;;AAAA,kDAAwB,CAAxB;AAAyB,WAAzB;;AACjGA;;AACFA;;;;;;;;AAEoBA;;AAAgDA;AAAAA;;AAAA;;AAAA,kDAAwB,CAAxB;AAAyB,WAAzB;;AAChEA;;AACFA;;;;;;AAtLFA;;AAEIA;;AACIA;;AAEIA;;AACIA;;AAAMA;;AAAoBA;;AAAQA;;AACtCA;;AACAA;;AACIA;;AACJA;;AACAA;;AACAA;;AAgKAA;;AAIIA;;AAGAA;;AAOJA;;AACJA;;AACJA;;AACJA;;;;;;;;AA3LSA;;AAAAA;;AACKA;;AAAAA;;AAGQA;;AAAAA;;AAA4BA;;AAAAA;;AAGlCA;;AAAAA;;AAI0BA;;AAAAA,wIAEpD,cAFoD,EAEpDqB,gBAFoD;;AAmKHrB;;AAAAA,qGAAwB,UAAxB,EAAwBsB,GAAxB;;;;UCjL1CC;AAgBX,sCACUC,eADV,EAEUC,cAFV,EAGUC,GAHV,EAISC,cAJT,EAKUC,GALV,EAMUC,OANV,EAOYC,WAPZ,EAO4C;AAAA;;AAAA;;AANlC;AACA;AACA;AACD;AACC;AACA;AACE;AAtBL,0BAA2B,IAAIC,KAAJ,EAA3B;AAEA,uBAA0B,IAAIA,KAAJ,EAA1B;AAGA,yBAAmB,KAAnB;AAEP,uBAAQ,KAAR;;AAiBEF,iBAAO,CAACG,MAAR,CAAeC,OAAf,CAAuB,UAACC,KAAD,EAAU;AAC/B,gBAAIA,KAAK,YAAYC,4DAArB,EAAsC,CACrC;;AACD,gBAAID,KAAK,YAAYC,0DAArB,EAAoC;AAClC,mBAAI,CAACC,aAAL;AACD,aAL8B,CAM/B;AACA;AACA;AACA;;AACD,WAVD;;AAWA,eAAKC,IAAL,GAAY,KAAKX,GAAL,CAASY,KAAT,CAAe,EAAf,CAAZ;AAGA,eAAKC,WAAL,GAAmB,KAAKf,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CACjB,aADiB,CAAnB;AAGA,eAAKC,aAAL,GAAqB,KAAKnB,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CACnB,eADmB,CAArB;AAIA,eAAKE,IAAL,GAAY,KAAKpB,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CAA2C,MAA3C,CAAZ;AACA,eAAKG,UAAL,GAAkB,KAAKrB,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CAA2C,YAA3C,CAAlB;AACA,eAAKI,UAAL,CAAgB,KAAKF,IAArB,EAA2B,KAAKC,UAAhC,EAzB0C,CA0B1C;;AAEA,cAAI,KAAKA,UAAL,IAAmB,GAAvB,EAA4B;AAC1B,iBAAKE,SAAL,CAAe,KAAKH,IAApB;AACD;;AAED,eAAKnB,cAAL,CAAoBuB,aAApB,CAAkC,KAAKT,WAAvC,EAAoDU,SAApD,CAA8D;AAC5DC,gBAAI,EAAE,cAACC,IAAD,EAAS;AACb,mBAAI,CAACC,QAAL,GAAgBD,IAAhB;AACD;AAH2D,WAA9D;AAKD;;;;iBAED,oBAAWP,IAAX,EAAiBC,UAAjB,EAA2B;AAAA;;AACzB,iBAAKQ,OAAL,GAAe,IAAf;;AACA,iBAAK5B,cAAL,CAAoB6B,gBAApB,CAAqCV,IAArC,EAA2CC,UAA3C,EAAuDI,SAAvD,CAAiE;AAC/DC,kBAAI,EAAE,cAACK,OAAD,EAAqB;;;AACzB,sBAAI,CAACA,OAAL,GAAeA,OAAf;AAEA,sBAAI,CAAClB,IAAL,GAAY,MAAI,CAACX,GAAL,CAASY,KAAT,CAAe,EAAf,CAAZ;;AACA,sBAAI,CAACiB,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,UAACC,QAAD,EAAuB;AAChD;AAGA,0BAAQA,QAAQ,CAACC,IAAjB;AACE,yBAAK,GAAL;AACED,8BAAQ,CAACE,OAAT,CAAiBH,GAAjB,CAAqB,UAACI,MAAD,EAASC,CAAT,EAAc;AACjC,8BAAI,CAACzB,IAAL,CAAU0B,UAAV,CACEL,QAAQ,CAACM,KAAT,GAAiB,GAAjB,GAAuBH,MAAM,CAACI,KADhC,EAEE,IAAIC,uDAAJ,CAAgBR,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAT,GAAe,GAAf,GAAmBH,MAAM,CAACO,OAA1C,CAAhB,EAAoE,EAApE,CAFF;;AAIA,4BAAIP,MAAM,CAACQ,IAAP,KAAgB,MAAhB,IAA0BR,MAAM,CAACQ,IAAP,KAAgB,MAA9C,EAAsD;AACpD,gCAAI,CAAChC,IAAL,CAAU0B,UAAV,CACEL,QAAQ,CAACM,KAAT,GAAiB,OADnB,EAEE,IAAIE,uDAAJ,CAAiBR,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAT,GAAiB,OAAjC,IAA2C,GAA5D,EAAiE,EAAjE,CAFF;AAID;AACF,uBAXD;AAaA;;AACF,yBAAK,GAAL;AACE,4BAAI,CAAC3B,IAAL,CAAU0B,UAAV,CACEL,QAAQ,CAACM,KADX,EAEE,IAAIE,uDAAJ,CACER,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAzB,IAAgC,EADlC,EAEEN,QAAQ,CAACY,UAFX,CAFF;;AAQAZ,8BAAQ,CAACE,OAAT,CAAiBH,GAAjB,CAAqB,UAACI,MAAD,EAAW;AAC9B,4BAAIA,MAAM,CAACQ,IAAP,KAAgB,MAAhB,IAA0BR,MAAM,CAACQ,IAAP,KAAgB,MAA9C,EAAsD;AACpD,gCAAI,CAAChC,IAAL,CAAU0B,UAAV,CACEL,QAAQ,CAACM,KAAT,GAAiB,OADnB,EAEE,IAAIE,uDAAJ,CAAiBR,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAT,GAAiB,OAAjC,IAA2C,GAA5D,EAAiE,EAAjE,CAFF;AAID;AAEF,uBARD;AAWA;;AACF,yBAAK,GAAL;AACE,0BAAIO,IAAJ;;AACA,0BAAKb,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAzB,MAAoC,EAAzC,EAA4C;AACxCO,4BAAI,GAAG,IAAIC,IAAJ,CAASd,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAzB,CAAT,CAAP;AAEF,uBAHF,MAGM;AACHO,4BAAI,GAAG,IAAIC,IAAJ,EAAP;AAEF;;AACD,4BAAI,CAACnC,IAAL,CAAU0B,UAAV,CACEL,QAAQ,CAACM,KADX,EAEE,IAAIE,uDAAJ,CACEK,IADF,EAEEb,QAAQ,CAACY,UAFX,CAFF;;AAQA;;AACF,yBAAK,KAAL;AACE;;AACF;AACE,4BAAI,CAACjC,IAAL,CAAU0B,UAAV,CACEL,QAAQ,CAACM,KADX,EAEE,IAAIE,uDAAJ,CACER,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAzB,CADF,EAEEN,QAAQ,CAACY,UAFX,CAFF;;AAQA;AAlEJ;AAoED,iBAxED;;AAyEA,sBAAI,CAACjB,OAAL,GAAe,KAAf;;AAGA,sBAAI,CAACoB,WAAL;;AAEA,oBAAG5B,UAAU,IAAE,GAAf,EAAmB;AACjB,sBAAI6B,IAAI,GAAG,sDAAmB;AAC5BC,yBAAK,EAAE,IAAIH,IAAJ,CAAS,MAAI,CAACjB,OAAL,CAAaqB,MAAb,CAAoBC,UAA7B,CADqB;AAE3BC,uBAAG,EAAE,MAAI,CAAChD,WAAL,CAAiBiD,KAAjB;AAFsB,mBAAnB,CAAX;;AAIA,sBAAI,MAAI,CAAC1C,IAAL,CAAUK,GAAV,CAAc,MAAd,CAAJ,EAA0B;AAC3B;AACG,wBAAG,MAAI,CAACL,IAAL,CAAUK,GAAV,CAAc,MAAd,EAAsBuB,KAAtB,IAA+B,EAAlC,EAAqC;AACnC,kCAAI,CAAC5B,IAAL,CAAUK,GAAV,CAAc,MAAd,OAAqB,IAArB,IAAqBsC,aAArB,GAAqB,MAArB,GAAqBA,GAAE3E,QAAF,CACnB,sDAAgBqE,IAAhB,CADmB,CAArB;AAGD,qBAJD,MAIK,CAEJ;AACF;AAGF,iBAnGwB,CAqGzB;;;AACD,sBAAI,CAACnB,OAAL,CAAaC,SAAb,CAAuBC,GAAvB,CAA2B,UAACC,QAAD,EAAuB;AAEjD,sBAAIA,QAAQ,CAACuB,UAAT,CAAoBC,MAApB,GAA2B,CAA/B,EAAiC;AAE7B,0BAAI,CAACC,eAAL,CAAqB,MAAI,CAAC9C,IAA1B,EAAgCqB,QAAhC,EAA0CA,QAAQ,CAACS,MAAT,CAAgBT,QAAQ,CAACM,KAAzB,CAA1C,EAA2E,MAAI,CAACT,OAAhF;AAEH;AAEJ,iBARE;AASA;AAhH8D,aAAjE;AAkHD;;;iBAED,yBAAgBlB,IAAhB,EAAiCqB,QAAjC,EAAqDO,KAArD,EAA4DT,SAA5D,EAAqE;AACnE,gBAAI4B,MAAM,GAAG,IAAb;AAEA1B,oBAAQ,CAACuB,UAAT,CAAoBhD,OAApB,CAA4B,UAACoD,SAAD,EAAc;AACxC,kBAAIC,MAAM,GAAGD,SAAS,CAACpB,KAAV,CAAgBsB,KAAhB,CAAsB,GAAtB,CAAb;;AACA,kBAAID,MAAM,CAACE,QAAP,CAAgBvB,KAAK,GAAG,EAAxB,CAAJ,EAAiC;AAC/B;AACA5B,oBAAI,CAACK,GAAL,CAAS2C,SAAS,CAAC3B,QAAV,CAAmBM,KAA5B,EAAmCyB,aAAnC,CAAiD,IAAjD;AACApD,oBAAI,CAACK,GAAL,CAAS2C,SAAS,CAAC3B,QAAV,CAAmBM,KAA5B,EAAmC0B,sBAAnC,GAH+B,CAIjC;;AACA,oBAAGlC,SAAS,CAACA,SAAb,EAAuB;AACrBA,2BAAS,CAACA,SAAV,CAAoB6B,SAAS,CAACM,cAA9B,EAA8CC,IAA9C,GAAqD,KAArD;AACD,iBAFD,MAEK;AACHpC,2BAAS,CAAC6B,SAAS,CAACM,cAAX,CAAT,CAAoCC,IAApC,GAA2C,KAA3C;AAED;AACA,eAXD,MAWO;AACLvD,oBAAI,CAACK,GAAL,CAAS2C,SAAS,CAAC3B,QAAV,CAAmBM,KAA5B,EAAmCyB,aAAnC,CAAiDvB,+DAAjD;AACA7B,oBAAI,CAACK,GAAL,CAAS2C,SAAS,CAAC3B,QAAV,CAAmBM,KAA5B,EAAmC0B,sBAAnC;AACArD,oBAAI,CAACK,GAAL,CAAS2C,SAAS,CAAC3B,QAAV,CAAmBM,KAA5B,EAAmC6B,MAAnC,GAHK,CAIT;;AACI,oBAAGrC,SAAS,CAACA,SAAb,EAAuB;AACrBA,2BAAS,CAACA,SAAV,CAAoB6B,SAAS,CAACM,cAA9B,EAA8CC,IAA9C,GAAqD,IAArD;AACD,iBAFD,MAEK;AACHpC,2BAAS,CAAC6B,SAAS,CAACM,cAAX,CAAT,CAAoCC,IAApC,GAA2C,IAA3C;AAED;AACF;AACF,aAzBD;AA0BD;;;iBAED,kBAASvD,IAAT,EAA0ByB,CAA1B,EAA2B;AAAA;;AACzB,gBAAIzB,IAAI,CAACyD,KAAT,EAAgB;AACd;AACA,kBAAMC,QAAQ,GAAG,KAAKtE,cAAL,CAAoBuE,UAApB,CAA+B3D,IAAI,CAAC4B,KAApC,CAAjB;;AACA8B,sBAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAK1D,WAApC;AACAwD,sBAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,KAAKtD,aAAtC;AACAoD,sBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAAKpD,UAAnC;AACAkD,sBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKrD,IAA7B;AAEA,mBAAKS,OAAL,GAAe,IAAf;;AACA,mBAAK5B,cAAL,CAAoByE,iBAApB,CAAsCH,QAAtC,EAAgD9C,SAAhD,CAA0D;AACxDC,oBAAI,EAAE,cAAChB,KAAD,EAAU;AACd,sBAAIA,KAAK,CAACyB,IAAN,KAAewC,wEAAnB,EAA2C;AACzC,0BAAI,CAAC1E,cAAL,CAAoB2E,SAApB,CACE,WADF,EAEE,SAFF,EAGE,mCAHF;;AAKA,0BAAI,CAAC/C,OAAL,GAAe,KAAf;AACA,0BAAI,CAACgD,SAAL,GAAiBnE,KAAK,CAACoE,IAAN,CAAWC,EAA5B;;AAEA,wBAAIzC,CAAC,IAAI,GAAT,EAAc;AACZ,4BAAI,CAACjC,OAAL,CAAa2E,QAAb,CAAsB,CAAC,kBAAD,CAAtB;AACD,qBAFD,MAEK;AAED,4BAAI,CAAC3E,OAAL,CAAa2E,QAAb,CAAsB,CACpB,UADoB,EAEpBC,QAAQ,CAAC,MAAI,CAAC5D,UAAN,CAAR,GAA4B,CAFR,EAGpB,MAAI,CAACN,WAHe,EAIpB,MAAI,CAACK,IAJe,CAAtB;AAOH;AAEF;AACF,iBAzBuD;AA0BxD8D,qBAAK,EAAE,eAACA,MAAD,EAAU;AACf,wBAAI,CAACjF,cAAL,CAAoB2E,SAApB,CAA8B,WAA9B,EAA2C,QAA3C,EAAqDM,MAArD;;AACA,wBAAI,CAACrD,OAAL,GAAe,KAAf;AACD;AA7BuD,eAA1D,EATc,CAyCd;;AACD,aA1CD,MA0CO;AACL,mBAAKsD,qBAAL,CAA2BtE,IAA3B,EADK,CAC6B;;AAClC,mBAAKZ,cAAL,CAAoB2E,SAApB,CACE,MADF,EAEE,SAFF,EAGE,wCAHF;AAKD;AACF;;;iBAED,wBAAe/D,IAAf,EAA8B;AAAA;;AAE1B;AACA,gBAAM0D,QAAQ,GAAG,KAAKtE,cAAL,CAAoBuE,UAApB,CAA+B3D,IAAI,CAAC4B,KAApC,CAAjB;;AACA8B,oBAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAK1D,WAApC;AACAwD,oBAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,KAAKtD,aAAtC;AACAoD,oBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,KAAKpD,UAAnC;AACAkD,oBAAQ,CAACE,MAAT,CAAgB,MAAhB,EAAwB,KAAKrD,IAA7B;AAEA,iBAAKS,OAAL,GAAe,IAAf;;AACA,iBAAK5B,cAAL,CAAoByE,iBAApB,CAAsCH,QAAtC,EAAgD9C,SAAhD,CAA0D;AACxDC,kBAAI,EAAE,cAAChB,KAAD,EAAU;AACd,oBAAIA,KAAK,CAACyB,IAAN,KAAewC,wEAAnB,EAA2C;AACzC,wBAAI,CAAC1E,cAAL,CAAoB2E,SAApB,CACE,WADF,EAEE,SAFF,EAGE,mCAHF;;AAKA,wBAAI,CAAC/C,OAAL,GAAe,KAAf;AACA,wBAAI,CAACgD,SAAL,GAAiBnE,KAAK,CAACoE,IAAN,CAAWC,EAA5B;AAID;AACF,eAduD;AAexDG,mBAAK,EAAE,eAACA,OAAD,EAAU;AACf,sBAAI,CAACjF,cAAL,CAAoB2E,SAApB,CAA8B,WAA9B,EAA2C,QAA3C,EAAqDM,OAArD;;AACA,sBAAI,CAACrD,OAAL,GAAe,KAAf;AACD;AAlBuD,aAA1D,EAV0B,CA+B1B;;AAEH;;;iBACD,+BAAsBuD,SAAtB,EAA0C;AAAA;;AACxC;AACAC,kBAAM,CAACC,IAAP,CAAYF,SAAS,CAACG,QAAtB,EAAgC9E,OAAhC,CAAwC,UAAC+E,KAAD,EAAU;AAChD;AACA,kBAAMC,OAAO,GAAGL,SAAS,CAAClE,GAAV,CAAcsE,KAAd,CAAhB,CAFgD,CAEV;;AACtC,kBAAIC,OAAO,YAAY/C,uDAAvB,EAAoC;AAClC;AACA+C,uBAAO,CAACC,aAAR,CAAsB;AAAEC,0BAAQ,EAAE;AAAZ,iBAAtB;AACD,eAHD,MAGO,IAAIF,OAAO,YAAY/C,qDAAvB,EAAkC;AACvC;AACA,sBAAI,CAACyC,qBAAL,CAA2BM,OAA3B,EAFuC,CAEF;;AACtC;AACF,aAVD;AAWD;;;iBAID,uBAAW;AACT,iBAAKrF,GAAL,CAASwF,QAAT,CAAkB,CAAlB,EAAqB,CAArB,EADS,CAGT;;AACD;;;iBAED,oBAAQ,CAEP;;;iBACD,mBAAUxE,IAAV,EAAc;AAAA;;AACZ,iBAAKS,OAAL,GAAe,IAAf;;AACA,iBAAK5B,cAAL,CAAoBsB,SAApB,CAA8BH,IAA9B,EAAoCK,SAApC,CAA8C;AAC5CC,kBAAI,EAAE,cAAC0B,MAAD,EAAmB;AACvB,sBAAI,CAACA,MAAL,GAAcA,MAAd;AACA,sBAAI,CAACvB,OAAL,GAAe,KAAf;AACD;AAJ2C,aAA9C;AAMD;;;iBACD,yBAAa;AACX,iBAAKd,WAAL,GAAmB,KAAKf,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CACjB,aADiB,CAAnB;AAGA,iBAAKC,aAAL,GAAqB,KAAKnB,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CACnB,eADmB,CAArB;AAIA,iBAAKE,IAAL,GAAY,KAAKpB,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CAA2C,MAA3C,CAAZ;AACA,iBAAKG,UAAL,GAAkB,KAAKrB,eAAL,CAAqBgB,QAArB,CAA8BC,QAA9B,CAAuCC,GAAvC,CAA2C,YAA3C,CAAlB;AACA,iBAAKI,UAAL,CAAgB,KAAKF,IAArB,EAA2B,KAAKC,UAAhC;AAGD;;;iBAED,mBAAUwE,KAAV,EAAiBC,IAAjB,EAAqB;AACnB,6BAAUD,KAAV,cAAmBC,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC,OAAzB;AACD;;;;;;;yBA9VUhG,sBAAmBvB;AAAA;;;cAAnBuB;AAAmBiG;AAAAC;AAAA;;;;;;;;;;;;;;;AD5BhCzH;;AACIA;;AACIA;;AAAiBA;;AAGjBA;;AACAA;;AACIA;;AACIA;;AAqBAA;;AA8LJA;;AAEJA;;AACAA;;AACJA;;AACJA;;AAGAA;;AAASA;AAAA,qBAAS0H,4BAAT;AAA6B,aAA7B;;AAEL1H;;AACAA;;AAEIA;;AAEJA;;AACJA;;;;AA1O0CA;;AAAAA;;AAOKA;;AAAAA;;AAqBzBA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UEtBT2H;AAEX;AAAA;AAAiB;;;;iBAEjB,oBAAQ,CACP;;;;;;;yBALUA;AAAgB;;;cAAhBA;AAAgBH;AAAAI;AAAAC;AAAAC;AAAAC;AAAA;ACP7BC;;AACIA;;AACIA;;AACIA;;AACJA;;AACAA;;AACIA;;AACIA;;AACIA;;AAAwCA;;AAAuBA;;AACnEA;;AAEJA;;AACAA;;AAEIA;;AACIA;;AAAwBA;;AAA+DA;;AAEvFA;;AAAwBA;;AAA2DA;;AACvFA;;AACJA;;AAMJA;;AACJA;;AACJA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpBA,UAAMC,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,EADR;AAEEC,iBAAS,EAAEC,uEAFb;AAGEC,gBAAQ,EAAE,CACR;AACEH,cAAI,EAAE,MADR;AAEEC,mBAAS,EAAEG,yFAFb;AAGEC,mBAAS,EAAE;AAHb,SADQ,EAMR;AACEL,cAAI,EAAE,SADR;AAEEC,mBAAS,EAAEK,wEAFb;AAGED,mBAAS,EAAE;AAHb,SANQ,EAWR;AACEL,cAAI,EAAE,gCADR;AAEEC,mBAAS,EAAEM;AAFb,SAXQ,EAeR;AACEP,cAAI,EAAE,+CADR;AAEEC,mBAAS,EAAEM;AAFb,SAfQ,EAmBR;AACEP,cAAI,EAAE,6BADR;AAEEC,mBAAS,EAAEO;AAFb,SAnBQ;AAHZ,OADqB,CAAvB;;UAmCaC;;;;;yBAAAA;AAAuB;;;cAAvBA;;;kBAHF,CAACC,mEAAsBX,MAAtB,CAAD,GACCW;;;;4HAECD,0BAAuB;AAAAE;AAAAC,oBAFxBF,yDAEwB;AAAA;AAFZ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC3BXG;AAEX,sCACUC,aADV,EAEUC,WAFV,EAGUC,KAHV,EAIUC,EAJV,EAI2B;AAAA;;AAHjB;AACA;AACA;AACA;AAGV,sBAAOC,2DAAP;AAA4B,0BAA0B,IAAIC,yCAAJ,EAA1B,CAHD,CACvB;AACD;;;;iBAGH,oBAAQ,CACP;;;;;;;yBAZUN,sBAAmBO;AAAA;;;cAAnBP;AAAmBvB;AAAAI;AAAAC;AAAAC;AAAAC;AAAA;ACbhCuB;;AACIA;;AACAA;;AACJA;;;;AAFaA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UC6CAC;;;;;yBAAAA;AAAgB;;;cAAhBA;;;kBA1BF,CACPC,yDADO,EAEPC,yDAFO,EAGPA,2DAHO,EAIPA,yDAJO,EAKPA,0DALO,EAMPA,0DANO,EAOPA,6DAPO,EAQPA,+DARO,EASPA,yDATO,EAUPC,+DAVO,EAWPD,2DAXO,EAYPA,4DAZO,EAaPA,0DAbO,EAcPE,6EAA6B;AAC3BC,gBAAM,EAAE,gBADmB;AAE3BC,sBAAY,EAAE;AAAEC,uCAA2B,EAAE,IAA/B;AAAqCC,wCAA4B,EAAE;AAAnE,WAFa;AAG3BC,uBAAa,EAAE;AAAEF,uCAA2B,EAAE,IAA/B;AAAqCC,wCAA4B,EAAE;AAAnE;AAHY,SAA7B,CAdO,EAoBPE,gEApBO,EAqBPR,4DArBO,EAsBPS,gFAtBO,EAsBiBD,wDAtBjB;;;;4HA0BEV,mBAAgB;AAAAY,yBA3BZC,uEA2BY,EA3BSC,iFA2BT,EA3B8BC,2EA2B9B,EA3BiDC,yFA2BjD,EA3BwEC,4FA2BxE,EA3BgGC,wEA2BhG;AA3BgH5B,oBAEzIW,yDAFyI,EAGzIC,yDAHyI,EAIzIA,2DAJyI,EAKzIA,yDALyI,EAMzIA,0DANyI,EAOzIA,0DAPyI,EAQzIA,6DARyI,EASzIA,+DATyI,EAUzIA,yDAVyI,EAWzIC,+DAXyI,EAYzID,2DAZyI,EAazIA,4DAbyI,EAczIA,0DAdyI,EAc5HE,mEAd4H,EAqBzIM,gEArByI,EAsBzIR,4DAtByI,EAuBzIS,gFAvByI,EAuBjHD,wDAvBiH;AA2BhH;AAJU;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCjC1BS;AAKX;AAAA;;AAGA,wBAAS,IAAIlG,IAAJ,EAAT;AADK;;;;iBAGL,oBAAQ,CAGP;;;;;;;yBAbUkG;AAAiB;;;cAAjBA;AAAiBlD;AAAAmD;AAAA/F;AAAA;AAAAgD;AAAAC;AAAAC;AAAAC;AAAA;ACT9BC;;AACIA;;AAAwBA;;AAAwBA;;AAChDA;;AAAOA;;AAIPA;;AAAkMA;;AAA0DA;;AAAQA;;AACpQA;;AAA0MA;;AAAkEA;;AAAIA;;AACtEA;;AAAMA;;AAGzLA;;AAAMA;;AAG4NA;;AAEzPA;;AAAMA;;AAC8EA;;AAAMA;;AAC9FA;;AAEAA;;AACIA;;AACIA;;AAAGA;;AAA0BA;;AAC7BA;;AAAGA;;AAA0BA;;AACjCA;;AACAA;;AACIA;;AAAGA;;AAA8CA;;AACjDA;;AAAGA;;AAAoCA;;AAC3CA;;AACJA;;AACAA;;AACIA;;AACIA;;AAAGA;;AAAYA;;AACfA;;AAAGA;;;;AAAuCA;;AAC9CA;;AAEJA;;;;AAbWA;;AAAAA;;AAIAA;;AAAAA;;AAMAA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACbKhI;;AAA6CA;AAAAA;;AAAA;;AAAA,kCAAgB,IAAhB;AAAoB,WAApB;;AACnDA;;AACFA;;;;;;AAfIA;;AACIA;;AACIA;;AACJA;;AACAA;;AACAA;;AACIA;;AAKJA;;AACAA;;AACAA;;AAGJA;;;;;;AAHsBA;;AAAAA;;;;;;AAOeA;;;;;;AA8BbA;;AAAoDA;;AAACA;;;;;;AAoBzCA;;;;;;AAAAA;;;;;;;;AAGJA;;AAA+JA;AAAAA;;AAAA;;AAAA;;AAAA;;AAAA;;AAAA,mBAAS4K,6CAA4BvK,QAA5B,CAA4BwK,gBAA5B,CAAT;AAA4D,WAA5D;;AAA/J7K;;;;;;AAA6NA;;;;;;;;AAC7NA;;AAAmEA;AAAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAiEA;;;;;;AANxIA;;AACIA;;AAIAA;;AACAA;;AAA8IA;;AAElJA;;;;;;;;;;AARgGA;;AAKpFA;;AAAAA,qIAAwD,UAAxD,EAAwD8K,IAAxD;;AACE9K;;AAAAA;;AAAoIA;;AAAAA;;;;;;;;AAhB1JA;;AACIA;;AACIA;;AACAA;;AAA8GA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA9GA;;AACAA;;AAASA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuDA;;AAChEA;;AAAyBA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqCA;;AAASA;;AAC3EA;;AAEAA;;AAEIA;;AASJA;;AACJA;;;;;;;;AAZoBA;;AAAAA;;AAE6BA;;AAAAA,oGAAqB,cAArB,EAAqB+K,iBAArB;;;;;;AAkB7C/K;;AAEuCA;;AAAiBA;;;;;;AAAjBA;;AAAAA;;;;;;;;AAT3CA;;AACIA;;AACIA;;AACAA;;AAA8GA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA9GA;;AACAA;;AAASA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAuDA;;AAChEA;;AAAyBA;AAAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAqCA;;AAASA;;AAC3EA;;AACAA;;AAGJA;;;;;;;;AAHgDA;;AAAAA,oGAC/C,cAD+C,EAC/CgL,iBAD+C;;;;;;AAIhDhL;;AACIA;;AACIA;;AAAqBA;;AAAGA;;AACxBA;;AAAqBA;;AAAGA;;AAC5BA;;AACJA;;;;;;;;AAhDRA;;AACIA;;AACIA;;AACIA;;AACAA;;AAAGA;;AAAOA;;AAAqBA;;AAAUA;;AACzCA;;AAASA;AAAA;;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAA0DA;;AACnEA;;AACJA;;AACJA;;AAEAA;;AACIA;;AAqBAA;;AAWAA;;AAMJA;;AACAA;;AACJA;;;;;;AAhDuCA;;AAAAA;;AACjBA;;AAAAA;;AAE4EA;;AAAAA;;AAIzFA;;AAAAA;;AACKA;;AAAAA;;AAqBAA;;AAAAA;;AAWAA;;AAAAA;;;;;;;;AArDtBA;;AACIA;;AACIA;;;;AACAA;;AACIA;;AAAMA;;AAAmBA;;AAAQA;;AACrCA;;AACAA;;AACIA;;AACJA;;AACAA;;AACAA;;AAoDAA;;AACIA;;AAAiBA;AAAAA;;AAAA;;AAAA;AAAA;;AAA0CA;;AAAQA;;AACnEA;;AAAiBA;AAAAA;;AAAA;;AAAA;AAAA;;AAAsCA;;AAASA;;AACpEA;;AACJA;;AACJA;;;;;;;;;AAnESA;;AACCA;;AAAAA;;AACFA;;AAAAA;;AAEUA;;AAAAA;;AAA2BA;;AAAAA;;AAGjCA;;AAAAA;;AAGsBA;;AAAAA,oGAAsB,cAAtB,EAAsBiL,gBAAtB;;;;;;;;AA7BtCjL;;AACIA;;AACIA;;AACAA;;AAEAA;;AAEAA;;AAAgBA;AAAAA;;AAAA;;AAAA;AAAA;;AACZA;;AAAwBA;;AAAGA;;AAC3BA;;AAAyBA;;AAAGA;;AAChCA;;AAEAA;;AACIA;;AAAiBA;AAAAA;;AAAA;;AAAA;AAAA;;AAA0CA;;AAAQA;;AACnEA;;AAAiBA;AAAAA;;AAAA;;AAAA;AAAA;;AAC3BA;;AACFA;;AACQA;;AACJA;;AACAA;;AAoEJA;;;;;;;;AAtFaA;;AAAAA;;AAMWA;;AAAAA;;AAO2CA;;AAAAA;;AAKCA;;AAAAA,+FAAa,cAAb,EAAaqB,gBAAb;;;;UC9BnE6J;AAQV,wCACSzJ,cADT,EAESC,GAFT,EAGQC,cAHR,EAISC,GAJT,EAImC;AAAA;;AAAA;;AAH1B;AACA;AACD;AACC;AAVH,0BAA2B,IAAIG,KAAJ,EAA3B;AACA,uBAA0B,IAAIA,KAAJ,EAA1B;AACA,yBAAoB,KAApB;AACP,uBAAQ,KAAR;AAEO,8BAAyB,KAAzB;;AAUL,eAAKN,cAAL,CAAoB0J,cAApB,GAAqClI,SAArC,CAA+C;AAC7CC,gBAAI,EAAE,cAACkI,QAAD,EAAa;AAClB,oBAAI,CAACA,QAAL,GAAgBA,QAAhB;AACAA,sBAAQ,CAAC3H,GAAT,CAAa,UAACF,OAAD,EAAY;AACxB,oBAAMlB,IAAI,GAAGX,GAAG,CAACY,KAAJ,CAAU,EAAV,CAAb;;AACCiB,uBAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAsB,kBAAQ,EAAG;AAEhCpB,sBAAI,CAAC0B,UAAL,CAAiBL,QAAQ,CAAC6C,EAAT,GAAY,EAA7B,EAAiC,IAAI8E,uDAAJ,CAAgB3H,QAAQ,CAACW,IAAzB,EAA+BgH,+DAA/B,CAAjC;AACA3H,0BAAQ,CAACE,OAAT,CAAiBH,GAAjB,CAAqB,UAACI,MAAD,EAAW;AAC9B,wBAAGA,MAAM,CAACQ,IAAP,KAAc,MAAd,IAAuBR,MAAM,CAACQ,IAAP,KAAc,MAAxC,EAA+C;AAC7ChC,0BAAI,CAAC0B,UAAL,CAAiBL,QAAQ,CAAC6C,EAAT,GAAY,OAA7B,EAAsC,IAAI8E,uDAAJ,CAAgB,EAAhB,EAAoBA,+DAApB,CAAtC;AACD;AACF,mBAJD;AAKD,iBARA;;AASD,sBAAI,CAACC,KAAL,CAAWC,IAAX,CAAgBlJ,IAAhB;AAGA,eAdD;AAeAmJ,qBAAO,CAACC,GAAR,CAAY,MAAI,CAACH,KAAjB;AAGC;AArB2C,WAA/C;AAuBD;;;;iBAED,mBAAUI,CAAV,EAAqB;AACnB,gBAAMC,GAAG,GAAW;AAACC,yBAAW,EAAEF,CAAC,CAACnF,EAAhB;AAAmBlC,kBAAI,EAAEqH,CAAC,CAACG;AAA3B,aAApB;;AAEA,iBAAKpK,cAAL,CAAoBqK,SAApB,CAA8BH,GAA9B,EAAmC1I,SAAnC,CAA6C;AAC3CC,kBAAI,EAAE,cAACyI,GAAD,EAAQ;AACZ,oBAAGA,GAAH,EAAO;AACLD,mBAAC,CAAC9H,OAAF,CAAU2H,IAAV,CAAeI,GAAf;AACAD,mBAAC,CAACG,MAAF,GAAW,EAAX;AACAH,mBAAC,CAACK,YAAF,GAAiB,KAAjB;AACD;AAEF;AAR0C,aAA7C;AAUD;;;iBAED,wBAAeL,CAAf,EAA2BrE,KAA3B,EAAgC;AAAA;;AAE9BqE,aAAC,CAACrH,IAAF,GAAS,KAAKiH,KAAL,CAAWjE,KAAX,EAAkB3E,GAAlB,CAAsBgJ,CAAC,CAACnF,EAAF,GAAK,EAA3B,EAA+BtC,KAAxC;;AACA,iBAAKxC,cAAL,CAAoBuK,cAApB,CAAmCN,CAAnC,EAAsCzI,SAAtC,CAAgD;AAC9CC,kBAAI,EAAE,cAACwI,CAAD,EAAM;AACV,oBAAGA,CAAH,EAAK;AACH,wBAAI,CAACjK,cAAL,CAAoB2E,SAApB,CAA8B,OAA9B,EAAsC,SAAtC,EAAgD,2BAAhD;AACD;AAEF;AAN6C,aAAhD;AAQD;;;iBAED,sBAAauF,GAAb,EAA0BjI,QAA1B,EAAoC2D,KAApC,EAAyC;AAAA;;AACvC,iBAAK5F,cAAL,CAAoBwK,YAApB,CAAiCN,GAAjC,EAAsC1I,SAAtC,CAAgD;AAC9CC,kBAAI,EAAE,cAACyI,GAAD,EAAQ;AACV,oBAAGA,GAAH,EAAO;AACL,wBAAI,CAAClK,cAAL,CAAoB2E,SAApB,CAA8B,OAA9B,EAAsC,SAAtC,EAAgD,yBAAhD;;AACA1C,0BAAQ,CAACE,OAAT,CAAiBsI,MAAjB,CAAwB7E,KAAxB,EAA8B,CAA9B;AACD;AACH;AAN4C,aAAhD;AAUD;;;iBAED,yBAAgB3D,QAAhB,EAAwB;AACtBA,oBAAQ,CAACqI,YAAT,GAAwB,CAACrI,QAAQ,CAACqI,YAAlC;AACD;;;iBAED,uBAAcI,EAAd,EAAkBT,CAAlB,EAAmB;AACjBA,aAAC,CAACG,MAAF,GAAWM,EAAE,CAACC,MAAH,CAAUnI,KAArB;AACD;;;iBAED,oBAAQ,CACP;AACA;;;iBAGD,uBAAW;AACT,iBAAKrC,GAAL,CAASwF,QAAT,CAAkB,CAAlB,EAAoB,CAApB;AAGD;;;iBAED,mBAAUC,KAAV,EAAiBC,IAAjB,EAAqB;AACnB,6BAAUD,KAAV,cAAmBC,IAAI,SAAJ,QAAI,WAAJ,GAAI,MAAJ,OAAI,CAAEC,OAAzB;AACD;;;;;;;yBAxGU2D,wBAAqBlL;AAAA;;;cAArBkL;AAAqB1D;AAAAC;AAAA;;;;;;;;;;;;;;;ADdlCzH;;AACIA;;AACIA;;AACIA;;AAEJA;;AACAA;;AACIA;;AAkBAA;;AAwFJA;;AACAA;;AACJA;;AACJA;;;;AA7GkBA;;AAAAA;;AAkBuCA;;AAAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AEA7BqM;;AAEIA;;AACIA;;AAA6BA;;AAAaA;;AAC9CA;;AACJA;;;;;;AAFqCA;;AAAAA;;;;UCdpDC;AAiBX,yCACUC,MADV,EAEU9K,cAFV,EAGUC,GAHV,EAIUG,OAJV,EAMeD,GANf,EAMyC;AAAA;;AAL/B;AACA;AACA;AACA;AAEK;AAtBL,uBAAQ,IAAIyK,uDAAJ,EAAR;AAYV,uBAAiB,KAAjB;AAcA,wBAAS,IAAI7H,IAAJ,EAAT;AAFE,eAAKG,KAAL,CAAW6H,IAAX,CAAgB,KAAhB;AACA;;;;iBAGF,oBAAQ;AAAA;;AACN,iBAAKnK,IAAL,GAAY,KAAKX,GAAL,CAASY,KAAT,CAAe,EAAf,CAAZ;AACA,iBAAKD,IAAL,CAAU0B,UAAV,CAAsB,eAAtB,EAAuC,IAAI0I,uDAAJ,CAAgB,EAAhB,EAAoBA,+DAApB,CAAvC;AACA,iBAAKpK,IAAL,CAAU0B,UAAV,CAAsB,KAAtB,EAA6B,IAAI0I,uDAAJ,CAAgB,EAAhB,EAAmBA,+DAAnB,CAA7B;AACA,iBAAKpK,IAAL,CAAU0B,UAAV,CAAsB,YAAtB,EAAoC,IAAI0I,uDAAJ,CAAgB,KAAKC,MAArB,EAA6BD,+DAA7B,CAApC;AACA,iBAAKlK,WAAL,GAAmB,KAAKgK,MAAL,CAAY/J,QAAZ,CAAqBC,QAArB,CAA8BC,GAA9B,CAAkC,aAAlC,CAAnB;AACA,iBAAKC,aAAL,GAAqB,KAAK4J,MAAL,CAAY/J,QAAZ,CAAqBC,QAArB,CAA8BC,GAA9B,CAAkC,eAAlC,CAArB;;AAEA,iBAAKjB,cAAL,CAAoBuB,aAApB,CAAmC,KAAKT,WAAxC,EACCU,SADD,CACW;AACTC,kBAAI,EAAE,cAACC,IAAD,EAAS;AACb,uBAAI,CAACC,QAAL,GAAgBD,IAAhB;AACD;AAHQ,aADX;AAOD;;;iBAED,oBAAQ;AAAA;;AACN,gBAAG,KAAKd,IAAL,CAAUyD,KAAb,EAAmB;AACjB;AACA,kBAAMC,QAAQ,GAAG,KAAKtE,cAAL,CAAoBuE,UAApB,CAA+B,KAAK3D,IAAL,CAAU4B,KAAzC,CAAjB;;AACA8B,sBAAQ,CAACE,MAAT,CAAgB,aAAhB,EAA+B,KAAK1D,WAAL,GAAiB,EAAhD;AACAwD,sBAAQ,CAACE,MAAT,CAAgB,eAAhB,EAAiC,KAAKtD,aAAL,GAAmB,EAApD;AACAoD,sBAAQ,CAACE,MAAT,CAAgB,YAAhB,EAA8B,GAA9B;AACA,mBAAK5C,OAAL,GAAe,IAAf;;AACA,mBAAK5B,cAAL,CAAoBkL,iBAApB,CAAsC5G,QAAtC,EACC9C,SADD,CACW;AACTC,oBAAI,EAAG,mBAAK,EAAG;AAEX,sBAAKhB,KAAK,CAACyB,IAAN,KAAeiJ,wEAApB,EAA4C;AAC1C,wBAAG1K,KAAK,CAACoE,IAAN,CAAW3C,IAAX,IAAmB,CAAnB,IAAwBzB,KAAK,CAACoE,IAAN,CAAW3C,IAAX,IAAoB,CAA/C,EAAiD;AAC/C,6BAAI,CAAClC,cAAL,CAAoB2E,SAApB,CAA8B,WAA9B,EAA2C,SAA3C,EAAsD,0BAAtD;;AACA,6BAAI,CAACxB,MAAL,GAAc1C,KAAK,CAACoE,IAAN,CAAW1B,MAAzB;;AACA,6BAAI,CAACD,KAAL,CAAW6H,IAAX,CAAgB,IAAhB;;AACA,6BAAI,CAAC3K,OAAL,CAAa2E,QAAb,CAAsB,CAAC,UAAD,EAAY,CAAZ,EAAc,OAAI,CAAC7D,aAAnB,EAAiC,OAAI,CAACJ,WAAtC,EAAkD,OAAI,CAACqC,MAAL,CAAYhC,IAA9D,CAAtB;AACD;;AAED,2BAAI,CAACS,OAAL,GAAe,KAAf,CAR0C,CAS1C;AACA;AACA;AACA;AACA;;AAIJ,2BAAI,CAACqD,KAAL,GAAa,IAAb;;AACA,wBAAGxE,KAAK,CAACoE,IAAN,CAAW3C,IAAX,IAAmB,CAAtB,EAAwB;AACtB,6BAAI,CAACkJ,OAAL,GAAe,mEAAf;AAAiG;;AACnG,wBAAG3K,KAAK,CAACoE,IAAN,CAAW3C,IAAX,IAAmB,CAAtB,EAAwB;AACtB,6BAAI,CAACkJ,OAAL,GAAe,+EAAf;AAED;;AACD,wBAAG3K,KAAK,CAACoE,IAAN,CAAW3C,IAAX,IAAmB,CAAtB,EAAwB;AACtB,6BAAI,CAACkJ,OAAL,GAAe,yDAAf;AACD;AAGE;AAIJ,iBApCQ;AAqCTnG,qBAAK,EAAG,sBAAK,EAAG;AACd,yBAAI,CAACjF,cAAL,CAAoB2E,SAApB,CAA8B,WAA9B,EAA2C,QAA3C,EAAqDM,OAArD;;AACA,yBAAI,CAACrD,OAAL,GAAe,KAAf;AACA,yBAAI,CAACqD,KAAL,GAAa,IAAb;AACA,yBAAI,CAACmG,OAAL,GAAcnG,OAAK,CAACmG,OAApB;AACD;AA1CQ,eADX,EAPiB,CAqDnB;;AAEC,aAvDD,MAuDK,CACH;AACA;AACD;AACF;;;iBAED,uBAAW;AACT,iBAAKjL,GAAL,CAASwF,QAAT,CAAkB,CAAlB,EAAoB,CAApB;AAGD;;;;;;;yBAhHUkF,yBAAsBD;AAAA;;;cAAtBC;AAAsB9E;AAAAsF;AAAAnI;AAAA;AAAAiD;AAAAC;AAAAC;AAAAC;AAAA;ADdnCsE;;AACIA;;AAAiBA;;AAAqBA;;AACtCA;;AACIA;;AACIA;;AACIA;;AACIA;;AACJA;;AACAA;;AACAA;;AACIA;;AAAsBA;;AAAGA;;AAAkBA;;AAAKA;;AAKpDA;;AACAA;;AAEAA;;AACIA;;AACIA;;AACIA;;AAEJA;;AACAA;;AACIA;;AAOAA;;AAEIA;;AAEAA;;AACIA;;AACIA;;AAA+CA;;AAAyBA;;AACxEA;;AACJA;;AACAA;;AACIA;;AAA8CA;;AAAgCA;;AAC9EA;;AACJA;;AACJA;;AAEAA;;AAGIA;;AACIA;;AAAiBA;AAAA,qBAAS3E,cAAT;AAAmB,aAAnB;;AACvB2E;;AAEFA;;AAGIA;;AACJA;;AACJA;;AAGJA;;AACAA;;AACIA;;AAA+BA;;;;AAA+DA;;AAClGA;;AAEJA;;AAGJA;;AACJA;;AACJA;;AACJA;;AACJA;;;;AAhE6CA;;AAAAA;;AAQRA;;AAAAA;;AAOUA;;AAAAA;;AA0B+BA;;AAAAA;;AAanBA;;AAAAA;;;;;;;;;","names":["_angular_core__WEBPACK_IMPORTED_MODULE_2__","ctx_r18","ctx_r19","ctx_r20","ctx_r42","setValue","option_r36","ctx_r40","_r38","ctx_r21","ctx_r55","ctx_r58","ctx_r22","ctx_r68","option_r62","ctx_r66","ctx_r61","_r64","ctx_r23","ctx_r24","ctx_r25","ctx_r1","_r9","FormularioComponent","_Activatedroute","_surveyService","_fb","_accessChecker","_ly","_router","dateService","Array","events","forEach","event","_angular_router__WEBPACK_IMPORTED_MODULE_3__","updateSession","form","group","pollster_id","snapshot","paramMap","get","population_id","uuid","section_id","getSession","getSurvey","getSingleUser","subscribe","next","user","pollster","loading","getSingleSection","section","questions","map","question","type","options","option","i","addControl","label","value","_angular_forms__WEBPACK_IMPORTED_MODULE_4__","answer","subcode","text","validators","date","Date","scrollToTop","time","start","survey","created_at","end","today","_a","conditions","length","eval_conditions","result","condition","values","split","includes","setValidators","updateValueAndValidity","question_index","show","enable","valid","formData","toFormData","append","addOrUpdateSurvey","_angular_common_http__WEBPACK_IMPORTED_MODULE_7__","showToast","survey_id","body","id","navigate","parseInt","error","validateAllFormFields","formGroup","Object","keys","controls","field","control","markAsTouched","onlySelf","scrollTo","index","item","trackId","selectors","viewQuery","ctx","GraciasComponent","decls","vars","consts","template","_angular_core__WEBPACK_IMPORTED_MODULE_0__","routes","path","component","_onu_mujeres_component__WEBPACK_IMPORTED_MODULE_2__","children","_survey_editor_survey_editor_component__WEBPACK_IMPORTED_MODULE_3__","pathMatch","_gracias_gracias_component__WEBPACK_IMPORTED_MODULE_1__","_formulario_formulario_component__WEBPACK_IMPORTED_MODULE_0__","_survey_gateway_survey_gateway_component__WEBPACK_IMPORTED_MODULE_4__","OnuMujeresRoutingModule","_angular_router__WEBPACK_IMPORTED_MODULE_6__","imports","exports","OnuMujeresComponent","accessChecker","menuService","route","ls","_modules_pages_menu__WEBPACK_IMPORTED_MODULE_0__","rxjs__WEBPACK_IMPORTED_MODULE_4__","_angular_core__WEBPACK_IMPORTED_MODULE_5__","OnuMujeresModule","_angular_common__WEBPACK_IMPORTED_MODULE_9__","_nebular_theme__WEBPACK_IMPORTED_MODULE_10__","app_theme_theme_module__WEBPACK_IMPORTED_MODULE_3__","_nebular_date_fns__WEBPACK_IMPORTED_MODULE_11__","format","parseOptions","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","formatOptions","_angular_forms__WEBPACK_IMPORTED_MODULE_12__","_onu_mujeres_routing_module__WEBPACK_IMPORTED_MODULE_0__","declarations","_onu_mujeres_component__WEBPACK_IMPORTED_MODULE_1__","_formulario_formulario_component__WEBPACK_IMPORTED_MODULE_2__","_seccion1_seccion1_component__WEBPACK_IMPORTED_MODULE_4__","_survey_editor_survey_editor_component__WEBPACK_IMPORTED_MODULE_5__","_survey_gateway_survey_gateway_component__WEBPACK_IMPORTED_MODULE_6__","_gracias_gracias_component__WEBPACK_IMPORTED_MODULE_7__","Seccion1Component","inputs","ctx_r26","option_r19","_r21","ctx_r15","ctx_r16","ctx_r8","SurveyEditorComponent","getAllSections","sections","_angular_forms__WEBPACK_IMPORTED_MODULE_3__","forms","push","console","log","q","opt","question_id","newOpt","addOption","addingOption","updateQuestion","deleteOption","splice","$e","target","_angular_core__WEBPACK_IMPORTED_MODULE_1__","SurveyGatewayComponent","_route","emit","_angular_forms__WEBPACK_IMPORTED_MODULE_2__","myDate","createOrGetSurvey","_angular_common_http__WEBPACK_IMPORTED_MODULE_3__","message","outputs"],"sources":["webpack:///src/app/pages/onu-mujeres/formulario/formulario.component.html","webpack:///src/app/pages/onu-mujeres/formulario/formulario.component.ts","webpack:///src/app/pages/onu-mujeres/gracias/gracias.component.ts","webpack:///src/app/pages/onu-mujeres/gracias/gracias.component.html","webpack:///src/app/pages/onu-mujeres/onu-mujeres-routing.module.ts","webpack:///src/app/pages/onu-mujeres/onu-mujeres.component.ts","webpack:///src/app/pages/onu-mujeres/onu-mujeres.component.html","webpack:///src/app/pages/onu-mujeres/onu-mujeres.module.ts","webpack:///src/app/pages/onu-mujeres/seccion1/seccion1.component.ts","webpack:///src/app/pages/onu-mujeres/seccion1/seccion1.component.html","webpack:///src/app/pages/onu-mujeres/survey-editor/survey-editor.component.html","webpack:///src/app/pages/onu-mujeres/survey-editor/survey-editor.component.ts","webpack:///src/app/pages/onu-mujeres/survey-gateway/survey-gateway.component.html","webpack:///src/app/pages/onu-mujeres/survey-gateway/survey-gateway.component.ts"],"sourcesContent":["<div class=\"col-md-8 offset-md-2\">\r\n    <nb-card class=\"shadow\" status=\"info\" [nbSpinner]=\"loading\" nbSpinnerStatus=\"info\" nbSpinnerSize=\"large\" nbSpinnerMessage=\"Actualizando\">\r\n        <nb-card-header> ENCUESTA ONU MUJERES\r\n\r\n\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div class=\"p-3\">\r\n                <div [label]=\"CONSENTIMIENTO\" *ngIf=\"section_id == '1' && !start\">\r\n                    <ng-template #CONSENTIMIENTO>Consentimiento</ng-template>\r\n                    <ngx-seccion1 [survey]=\"survey\"></ngx-seccion1>\r\n                    <div>\r\n                        <!--  <form>\r\n                            <label class=\"label col-form-label\" for=\"consent\">Consentimiento informado firma *</label>\r\n                            <nb-radio-group [(ngModel)]=\"consent\" name=\"consent\" status=\"success\">\r\n                                <nb-radio value=\"true\"> Sí </nb-radio>\r\n                                <nb-radio value=\"false\"> No </nb-radio>\r\n                            </nb-radio-group>\r\n                        </form>-->\r\n                    </div>\r\n\r\n                    <div class=\"text-center\">\r\n                        <button (click)=\"start=true\" nbButton>\r\n              <!--[disabled]=\"!consent\"-->\r\n              Continuar\r\n            </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div *ngIf=\"start || (section_id != '1' && !start)\" #stepper>\r\n\r\n                    <div label=\"Sección {{ section?.code }}\">\r\n                        <form [formGroup]=\"form\" async>\r\n\r\n                            <h4>\r\n                                <span>{{ section?.code }}.</span> {{ section?.text }}\r\n                            </h4>\r\n                            <p class=\"lorem\">\r\n                                {{ section?.desc }}\r\n                            </p>\r\n                            <br />\r\n                            <ng-container *ngFor=\"\r\n                      let question of section?.questions;\r\n                      let j = index;\r\n                      trackBy: trackByFn\r\n                    \">\r\n\r\n\r\n                                <div *ngIf=\"question?.show\">\r\n                                    <div *ngIf=\"question.pre_title\">\r\n                                        <br />\r\n                                        <h6 class=\"text-info\"><b>{{question.pre_title}}</b></h6>\r\n\r\n                                    </div>\r\n                                    <div class=\"question-text row\">\r\n\r\n                                        <span class=\"text-danger\" *ngIf=\"question.required\">*</span>\r\n                                        <div *ngIf=\"question.type !== 'INS'\">\r\n                                            <b><span> {{ question.label }} </span> {{ question.text }}</b>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span *ngIf=\"question.type!=='INS'\" class=\"caption\"> {{ question.desc }} </span>\r\n                                    </div>\r\n                                    <div [ngSwitch]=\"question.type\">\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'T'\">\r\n                                            <input [name]=\"question.label\" type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\" />\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'TL'\">\r\n                                            <textarea [name]=\"question.label\" type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\"></textarea>\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'N'\">\r\n                                            <input [name]=\"question.label\" type=\"number\" shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\" />\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'U'\">\r\n                                            <nb-radio-group status=\"danger\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\r\n                                                <nb-radio (click)=\"\r\n                                eval_conditions(\r\n                                  form,\r\n                                  question,\r\n                                  option.value,\r\n                                  section.questions\r\n                                )\r\n                              \" *ngFor=\"\r\n                                let option of question.options;\r\n                                let j = index;\r\n                                trackBy: trackByFn\r\n                              \" value=\"{{ option.value }}\">\r\n                                                    <ng-template #elseBlock>\r\n                                                        {{ option.text }}\r\n                                                    </ng-template>\r\n\r\n                                                    <input *ngIf=\"option.isOther; else elseBlock\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"danger\" nbInput (click)=\"\r\n                                  form.get(question.label).setValue(option.value)\r\n                                \" [placeholder]=\"option.text\" [formControl]=\"form.controls[question.label + '_OTRO']\" />\r\n                                                </nb-radio>\r\n                                            </nb-radio-group>\r\n                                            <div *ngIf=\"\r\n                              form.get(question.label + '_OTRO')?.invalid &&\r\n                              (form.get(question.label + '_OTRO')?.dirty ||\r\n                                form.get(question.label + '_OTRO')?.touched)\r\n                            \" class=\"alert text-danger label\">\r\n                                                <div *ngIf=\"\r\n                                form.get(question.label + '_OTRO').errors.required\r\n                              \">\r\n                                                    La Opción OTRO es Obligatoria para la pregunta\r\n                                                    <b>{{ question.label }}</b>.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'S'\">\r\n                                            <nb-radio-group status=\"danger\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\r\n                                                <nb-radio (click)=\"\r\n                                eval_conditions(\r\n                                  form,\r\n                                  question,\r\n                                  1,\r\n                                  section.questions\r\n                                )\r\n                              \" value=\"1\">\r\n                                                    Sí\r\n                                                </nb-radio>\r\n                                                <nb-radio (click)=\"\r\n                                eval_conditions(\r\n                                  form,\r\n                                  question,\r\n                                  2,\r\n                                  section.questions\r\n                                )\r\n                              \" value=\"2\">\r\n                                                    No\r\n                                                </nb-radio>\r\n                                            </nb-radio-group>\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'M'\">\r\n                                            <nb-checkbox status=\"danger\" [name]=\"question.label + '_' + option.value\" class=\"m-2 row\" [formControl]=\"form.controls[question.label + '_' + option.value]\" *ngFor=\"\r\n                              let option of question.options;\r\n                              let j = index;\r\n                              trackBy: trackByFn\r\n                            \" value=\"option.value\">\r\n                                                <ng-template #elseBlock2>\r\n                                                    {{ option.text }}\r\n                                                </ng-template>\r\n                                                <input *ngIf=\"option.isOther; else elseBlock2\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"danger\" nbInput (click)=\"\r\n                                  form.get(question.label).setValue(option.value)\r\n                                \" [placeholder]=\"option.text\" [formControl]=\"form.controls[question.label + '_OTRO']\" />\r\n                                            </nb-checkbox>\r\n\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'D'\">\r\n                                            <input nbInput status=\"danger\" placeholder=\"dd - MM - yyyy\" [nbDatepicker]=\"formcontrol\" [formControl]=\"form.controls[question.label]\" />\r\n                                            <nb-datepicker format=\"dd - MM - yyyy\" #formcontrol></nb-datepicker>\r\n                                        </div>\r\n                                        <div class=\"pt-2 d-flex flex-row justify-content-between align-items-center\" *ngSwitchCase=\"'E'\">\r\n                                            <div>\r\n                                                {{ question.start }}\r\n                                            </div>\r\n                                            <nb-radio-group class=\"d-flex flex-row justify-content-between\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\r\n                                                <nb-radio class=\"\" value=\"1\"> 1 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"2\"> 2 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"3\"> 3 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"4\"> 4 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"5\"> 5 </nb-radio>\r\n                                            </nb-radio-group>\r\n                                            <div>\r\n                                                {{ question.end }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <nb-card class=\"mt-3\" *ngSwitchCase=\"'INS'\" accent=\"primary\" status=\"info\">\r\n                                            <nb-card-header>\r\n                                                {{question.text}}\r\n                                            </nb-card-header>\r\n                                            <nb-card-body>\r\n                                                <div class=\"caption p-2\">\r\n                                                    <b> {{question.desc}}</b>\r\n                                                </div>\r\n                                            </nb-card-body>\r\n                                        </nb-card>\r\n                                    </div>\r\n                                    <div *ngIf=\"\r\n                                      form.get(question.label)?.invalid &&\r\n                                      (form.get(question.label)?.dirty ||\r\n                                        form.get(question.label)?.touched)\r\n                                    \" class=\"alert text-danger label\">\r\n                                        <span class=\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\"></span>\r\n\r\n                                        <div class=\"error-msg\" *ngIf=\"form.get(question.label).errors.required\">\r\n                                            La Pregunta <b>{{ question.label }}</b> es obligatoria.\r\n                                        </div>\r\n                                        <div class=\"error-msg\" *ngIf=\"form.get(question.label).errors.email\">\r\n                                            Debe ingresar un Mail Valido\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </ng-container>\r\n\r\n                            <div class=\"text-center\">\r\n                                <!-- <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>\r\n                      Anterior\r\n                    </button>-->\r\n                                <button status=\"info\" *ngIf=\"section_id != '6';else finish\" type=\"submit\" nbButton (click)=\"onSubmit(form, 1)\">\r\n                  Siguiente\r\n                </button>\r\n                                <ng-template #finish>\r\n                                    <button status=\"success\" type=\"submit\" nbButton (click)=\"onSubmit(form, 6)\">\r\n                    Finalizar\r\n                  </button>\r\n                                </ng-template>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </nb-card-body>\r\n        <nb-card-footer> </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n\r\n\r\n<nb-card (click)=\"onSubmitUpdate(form)\" id=\"fixedbutton\">\r\n\r\n    <nb-badge text=\"?\" status=\"danger\" position=\"top left\"></nb-badge>\r\n    <button nbTooltip=\"Si no has terminado y deseas guardar tu progreso, haz clic aquí\" nbTooltipStatus=\"primary\" nbButton>\r\n\r\n        <nb-icon icon=\"save-outline\">\r\n        </nb-icon>\r\n    </button>\r\n</nb-card>\r\n","import { HttpEventType } from \"@angular/common/http\";\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport {\r\n  ActivatedRoute,\r\n  NavigationEnd,\r\n  NavigationStart,\r\n  Router,\r\n} from \"@angular/router\";\r\nimport { Question } from \"@core/data/remote/schemas/question\";\r\nimport { Section } from \"@core/data/remote/schemas/section\";\r\nimport { Survey } from \"@core/data/remote/schemas/survey\";\r\nimport { User } from \"@core/data/remote/schemas/users\";\r\nimport { SurveyService } from \"@core/data/remote/services/survey.service\";\r\nimport { NbAccessChecker } from \"@nebular/security\";\r\nimport { NbDateService, NbLayoutScrollService, NbStepperComponent } from \"@nebular/theme\";\r\nimport { format, formatDuration, intervalToDuration, parse, parseISO, toDate,  } from 'date-fns'\r\n\r\n@Component({\r\n  selector: \"ngx-formulario\",\r\n  templateUrl: \"./formulario.component.html\",\r\n  styleUrls: [\"./formulario.component.scss\"],\r\n})\r\nexport class FormularioComponent implements OnInit{\r\n  public sections: Array<Section> = new Array<Section>();\r\n  public section: Section;\r\n  public forms: Array<FormGroup> = new Array<FormGroup>();\r\n  public form: FormGroup;\r\n\r\n  public loading: boolean = false;\r\n  public pollster_id: any;\r\n  start = false;\r\n  consent;\r\n  pollster: User;\r\n  survey_id: any;\r\n  uuid: string;\r\n  section_id: string;\r\n  survey: Survey;\r\n  population_id: any;\r\n  constructor(\r\n    private _Activatedroute: ActivatedRoute,\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder,\r\n    public _accessChecker: NbAccessChecker,\r\n    private _ly: NbLayoutScrollService,\r\n    private _router: Router,\r\n    protected dateService: NbDateService<Date>\r\n  ) {\r\n    _router.events.forEach((event) => {\r\n      if (event instanceof NavigationStart) {\r\n      }\r\n      if (event instanceof NavigationEnd) {\r\n        this.updateSession();\r\n      }\r\n      // NavigationEnd\r\n      // NavigationCancel\r\n      // NavigationError\r\n      // RoutesRecognized\r\n    });\r\n    this.form = this._fb.group({});\r\n\r\n\r\n    this.pollster_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"pollster_id\"\r\n    );\r\n    this.population_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"population_id\"\r\n    );\r\n\r\n    this.uuid = this._Activatedroute.snapshot.paramMap.get(\"uuid\");\r\n    this.section_id = this._Activatedroute.snapshot.paramMap.get(\"section_id\");\r\n    this.getSession(this.uuid, this.section_id);\r\n    //Get pollster Name:\r\n\r\n    if (this.section_id == \"1\") {\r\n      this.getSurvey(this.uuid);\r\n    }\r\n\r\n    this._surveyService.getSingleUser(this.pollster_id).subscribe({\r\n      next: (user) => {\r\n        this.pollster = user;\r\n      },\r\n    });\r\n  }\r\n\r\n  getSession(uuid, section_id) {\r\n    this.loading = true;\r\n    this._surveyService.getSingleSection(uuid, section_id).subscribe({\r\n      next: (section: Section) => {\r\n        this.section = section;\r\n\r\n        this.form = this._fb.group({});\r\n        this.section.questions.map((question: Question) => {\r\n          //Set Validators:\r\n\r\n\r\n          switch (question.type) {\r\n            case \"M\":\r\n              question.options.map((option, i) => {\r\n                this.form.addControl(\r\n                  question.label + \"_\" + option.value,\r\n                  new FormControl(question.answer[question.label+\"_\"+option.subcode], [])\r\n                );\r\n                if (option.text === \"Otro\" || option.text === \"Otra\") {\r\n                  this.form.addControl(\r\n                    question.label + \"_OTRO\",\r\n                    new FormControl( question.answer[question.label + \"_OTRO\"]+ \" \", [])\r\n                  );\r\n                }\r\n              });\r\n\r\n              break;\r\n            case \"U\":\r\n              this.form.addControl(\r\n                question.label,\r\n                new FormControl(\r\n                  question.answer[question.label]+\"\",\r\n                  question.validators\r\n                )\r\n              );\r\n\r\n              question.options.map((option) => {\r\n                if (option.text === \"Otro\" || option.text === \"Otra\") {\r\n                  this.form.addControl(\r\n                    question.label + \"_OTRO\",\r\n                    new FormControl( question.answer[question.label + \"_OTRO\"]+ \" \", [])\r\n                  );\r\n                }\r\n\r\n              });\r\n\r\n\r\n              break;\r\n            case \"D\":\r\n              let date;\r\n              if(  question.answer[question.label] !== \"\"){\r\n                  date = new Date(question.answer[question.label]);\r\n\r\n               }else{\r\n                 date = new Date();\r\n\r\n              }\r\n              this.form.addControl(\r\n                question.label,\r\n                new FormControl(\r\n                  date,\r\n                  question.validators\r\n                )\r\n              );\r\n\r\n              break;\r\n            case \"INS\":\r\n              break;\r\n            default:\r\n              this.form.addControl(\r\n                question.label,\r\n                new FormControl(\r\n                  question.answer[question.label],\r\n                  question.validators\r\n                )\r\n              );\r\n\r\n              break;\r\n          }\r\n        });\r\n        this.loading = false;\r\n\r\n\r\n        this.scrollToTop();\r\n\r\n        if(section_id==\"6\"){\r\n          let time = intervalToDuration({\r\n            start: new Date(this.section.survey.created_at),\r\n             end: this.dateService.today()\r\n          })\r\n          if( this.form.get(\"F_10\")){\r\n         //   this.form.get(\"F_10\").disable();\r\n            if(this.form.get(\"F_10\").value == \"\"){\r\n              this.form.get(\"F_10\")?.setValue(\r\n                formatDuration( time )\r\n                 )\r\n            }else{\r\n\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n\r\n        //update conditions\r\n       this.section.questions.map((question: Question) => {\r\n\r\n        if( question.conditions.length>0){\r\n\r\n            this.eval_conditions(this.form, question, question.answer[question.label], this.section) ;\r\n\r\n        }\r\n\r\n    });\r\n      },\r\n    });\r\n  }\r\n\r\n  eval_conditions(form: FormGroup, question: Question, value, questions) {\r\n    let result = true;\r\n\r\n    question.conditions.forEach((condition) => {\r\n      let values = condition.value.split(\",\");\r\n      if (values.includes(value + \"\")) {\r\n        //set visibiliti to conditioned question\r\n        form.get(condition.question.label).setValidators(null);\r\n        form.get(condition.question.label).updateValueAndValidity();\r\n      //  form.get(condition.question.label).disable();\r\n      if(questions.questions){\r\n        questions.questions[condition.question_index].show = false;\r\n      }else{\r\n        questions[condition.question_index].show = false;\r\n\r\n      }\r\n      } else {\r\n        form.get(condition.question.label).setValidators(Validators.required);\r\n        form.get(condition.question.label).updateValueAndValidity();\r\n        form.get(condition.question.label).enable();\r\n    //    questions[condition.question_index].show = true;\r\n        if(questions.questions){\r\n          questions.questions[condition.question_index].show = true;\r\n        }else{\r\n          questions[condition.question_index].show = true;\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(form: FormGroup, i) {\r\n    if (form.valid) {\r\n      //submit session\r\n      const formData = this._surveyService.toFormData(form.value);\r\n      formData.append(\"pollster_id\", this.pollster_id);\r\n      formData.append(\"population_id\", this.population_id);\r\n      formData.append(\"section_id\", this.section_id);\r\n      formData.append(\"uuid\", this.uuid);\r\n\r\n      this.loading = true;\r\n      this._surveyService.addOrUpdateSurvey(formData).subscribe({\r\n        next: (event) => {\r\n          if (event.type === HttpEventType.Response) {\r\n            this._surveyService.showToast(\r\n              \"top rigth\",\r\n              \"success\",\r\n              \"Sección Actualizada correctamente\"\r\n            );\r\n            this.loading = false;\r\n            this.survey_id = event.body.id;\r\n\r\n            if (i == \"6\") {\r\n              this._router.navigate([\"encuesta/gracias\"]);\r\n            }else{\r\n\r\n                this._router.navigate([\r\n                  \"encuesta\",\r\n                  parseInt(this.section_id) + 1,\r\n                  this.pollster_id,\r\n                  this.uuid,\r\n                ]);\r\n\r\n            }\r\n\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this._surveyService.showToast(\"top rigth\", \"danger\", error);\r\n          this.loading = false;\r\n        },\r\n      });\r\n\r\n      //  this.stepper.next();\r\n    } else {\r\n      this.validateAllFormFields(form); //{7}\r\n      this._surveyService.showToast(\r\n        \"left\",\r\n        \"warning\",\r\n        \"Favor revisar preguntas sin responder.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmitUpdate(form: FormGroup) {\r\n\r\n      //submit session\r\n      const formData = this._surveyService.toFormData(form.value);\r\n      formData.append(\"pollster_id\", this.pollster_id);\r\n      formData.append(\"population_id\", this.population_id);\r\n      formData.append(\"section_id\", this.section_id);\r\n      formData.append(\"uuid\", this.uuid);\r\n\r\n      this.loading = true;\r\n      this._surveyService.addOrUpdateSurvey(formData).subscribe({\r\n        next: (event) => {\r\n          if (event.type === HttpEventType.Response) {\r\n            this._surveyService.showToast(\r\n              \"top rigth\",\r\n              \"success\",\r\n              \"Sección Actualizada correctamente\"\r\n            );\r\n            this.loading = false;\r\n            this.survey_id = event.body.id;\r\n\r\n\r\n\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this._surveyService.showToast(\"top rigth\", \"danger\", error);\r\n          this.loading = false;\r\n        },\r\n      });\r\n\r\n      //  this.stepper.next();\r\n\r\n  }\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    //{1}\r\n    Object.keys(formGroup.controls).forEach((field) => {\r\n      //{2}\r\n      const control = formGroup.get(field); //{3}\r\n      if (control instanceof FormControl) {\r\n        //{4}\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        //{5}\r\n        this.validateAllFormFields(control); //{6}\r\n      }\r\n    });\r\n  }\r\n\r\n  @ViewChild(\"stepper\") stepper: NbStepperComponent;\r\n\r\n  scrollToTop() {\r\n    this._ly.scrollTo(0, 0);\r\n\r\n    //\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  getSurvey(uuid) {\r\n    this.loading = true;\r\n    this._surveyService.getSurvey(uuid).subscribe({\r\n      next: (survey: Survey) => {\r\n        this.survey = survey;\r\n        this.loading = false;\r\n      },\r\n    });\r\n  }\r\n  updateSession() {\r\n    this.pollster_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"pollster_id\"\r\n    );\r\n    this.population_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"population_id\"\r\n    );\r\n\r\n    this.uuid = this._Activatedroute.snapshot.paramMap.get(\"uuid\");\r\n    this.section_id = this._Activatedroute.snapshot.paramMap.get(\"section_id\");\r\n    this.getSession(this.uuid, this.section_id);\r\n\r\n\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return `${index}-${item?.trackId}`;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-gracias',\r\n  templateUrl: './gracias.component.html',\r\n  styleUrls: ['./gracias.component.scss']\r\n})\r\nexport class GraciasComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-8 offset-md-2\">\r\n    <nb-card size=\"medium\" accent=\"info\" status=\"info\">\r\n        <nb-card-header>\r\n            Gracias\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div class=\"d-flex align-items-center justify-content-center\">\r\n                <div style=\"height: 100%;\" class=\"d-flex align-items-center justify-content-center\">\r\n                    <h2 class=\"color-success align-middle\"> Gracias por participar!</h2>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n\r\n                <div class=\"hero-logo d-flex justify-content-between align-self-end\">\r\n                    <a class=\"col\" href=\"#\"><img src=\"assets/img/logo-prm.jpg\" width=\"100%\" alt=\"logo-obs\"></a>\r\n\r\n                    <a class=\"col\" href=\"#\"><img src=\"assets/img/logo.jpg\" width=\"100%\" alt=\"logo-obs\"></a>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormularioComponent } from './formulario/formulario.component';\r\nimport { GraciasComponent } from './gracias/gracias.component';\r\nimport { OnuMujeresComponent } from './onu-mujeres.component';\r\nimport { SurveyEditorComponent } from './survey-editor/survey-editor.component';\r\nimport { SurveyGatewayComponent } from './survey-gateway/survey-gateway.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OnuMujeresComponent,\r\n    children: [\r\n      {\r\n        path: 'edit',\r\n        component: SurveyEditorComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'gracias',\r\n        component: GraciasComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: ':section_id/:pollster_id/:uuid',\r\n        component: FormularioComponent,\r\n      },\r\n      {\r\n        path: ':section_id/:population_id/:pollster_id/:uuid',\r\n        component: FormularioComponent,\r\n      },\r\n      {\r\n        path: ':population_id/:pollster_id',\r\n        component: SurveyGatewayComponent,\r\n      },\r\n    ]\r\n  },\r\n\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OnuMujeresRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LayoutService } from '@core/utils';\r\nimport { MenuService } from '@core/utils/menu.service';\r\nimport { MENU_ITEMS } from '@modules/pages-menu';\r\nimport { NbAccessChecker } from '@nebular/security';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngx-onu-mujeres',\r\n  templateUrl: './onu-mujeres.component.html',\r\n  styleUrls: ['./onu-mujeres.component.scss']\r\n})\r\nexport class OnuMujeresComponent implements OnInit {\r\n\r\n  constructor(  \r\n    private accessChecker: NbAccessChecker,\r\n    private menuService: MenuService, \r\n    private route: ActivatedRoute,\r\n    private ls: LayoutService,) {    \r\n      // menuService.setMenuItemVisibility(this.menu);\r\n    }\r\n  menu = MENU_ITEMS;  private destroy$: Subject<void> = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ngx-one-column-no-header-layout >\r\n    <nb-menu [items]=\"menu\"></nb-menu>\r\n    <router-outlet></router-outlet>\r\n</ngx-one-column-no-header-layout>\r\n\r\n ","import {   NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OnuMujeresRoutingModule } from './onu-mujeres-routing.module';\r\nimport { OnuMujeresComponent } from './onu-mujeres.component';\r\nimport { FormularioComponent } from './formulario/formulario.component';\r\nimport { ThemeModule } from 'app/@theme/theme.module';\r\nimport {  NbBadgeModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDatepickerModule, NbIconModule, NbInputModule, NbLayoutModule, NbMenuModule, NbRadioModule, NbSpinnerModule, NbTooltipModule } from '@nebular/theme';\r\nimport { Seccion1Component } from './seccion1/seccion1.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SurveyEditorComponent } from './survey-editor/survey-editor.component';\r\nimport { SurveyGatewayComponent } from './survey-gateway/survey-gateway.component';\r\nimport { GraciasComponent } from './gracias/gracias.component';\r\nimport { NbDateFnsDateModule } from '@nebular/date-fns';\r\nimport { eo } from 'date-fns/locale';\r\n\r\n\r\n@NgModule({\r\n  declarations: [OnuMujeresComponent, FormularioComponent, Seccion1Component, SurveyEditorComponent, SurveyGatewayComponent, GraciasComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    NbMenuModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbRadioModule,\r\n    NbCheckboxModule,\r\n    NbDatepickerModule,\r\n    NbIconModule,\r\n    ThemeModule,\r\n    NbButtonModule,\r\n    NbTooltipModule,\r\n    NbBadgeModule,\r\n    NbDateFnsDateModule.forChild({\r\n      format: 'dd - MM - yyyy' ,\r\n      parseOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\r\n      formatOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\r\n\r\n    }),\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    OnuMujeresRoutingModule,FormsModule\r\n  ],\r\n\r\n})\r\nexport class OnuMujeresModule { }\r\n"," import { Component, Input, OnInit } from '@angular/core';\r\nimport { Survey } from '@core/data/remote/schemas/survey';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-seccion1',\r\n  templateUrl: './seccion1.component.html',\r\n  styleUrls: ['./seccion1.component.scss']\r\n})\r\nexport class Seccion1Component implements OnInit {\r\n  @Input() survey? : Survey;\r\n\r\n\r\n\r\n  constructor(\r\n\r\n  ) { }\r\n  myDate = new Date();\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"text-justify p-2\">\r\n    <h5 class=\"text-center\">CONSENTIMIENTO INFORMADO</h5>\r\n    <br /> Con mi firma autorizo el tratamiento de la información suministrada de acuerdo y para los fines del proyecto “Acciones para la protección e inclusión para las mujeres en el contexto de los flujos migratorios mixtos procedentes de Venezuela\r\n    en la costa caribe colombiana” - PA001448COL. Para ello la Universidad del Norte y la ONU-Mujeres (ONU) han diseñado el siguiente instrumento para recolectar información del personal participante en el estudio, este documento contiene preguntas personales,\r\n    sociales, económicas, y con su diligenciamiento usted manifiesta que conoce, autoriza y acepta el uso y tratamiento que dará la Universidad y la ONU a esta información para los fines del proyecto antes indicado, y de acuerdo con sus políticas de protección\r\n    de datos personales, las cuales pueden ser consultadas en los siguientes links:\r\n    <a href=\"https://www.google.com/url?q=http://www.uninorte.edu.co/politica-de-privacidad-de-datos&amp;sa=D&amp;source=editors&amp;ust=1616000621212000&amp;usg=AFQjCNE_pg0hGYzZtQOmvumhv1qtCdU9Zw\">http://www.uninorte.edu.co/politica-de-privacidad-de-datos</a>    y\r\n    <a href=\"https://www.google.com/url?q=https://unsceb.org/personal-data-protection-and-privacy-principles&amp;sa=D&amp;source=editors&amp;ust=1616000621212000&amp;usg=AFQjCNFsW0gNPKHJ08GQWgt2faS6jDLp8A\">https://unsceb.org/personal-data-protection-and-privacy-principles</a>.\r\n    Como titular de la información a suministrar declaro que la misma es totalmente actual, exacta y veraz. Asimismo, reconozco que soy el único responsable de la información falsa, inexacta que suministre.<br />Fui informado que mis derechos como titular\r\n    de los datos suministrados, son los previstos en la Constitución y la Ley 1581 de 2012, y especialmente acceder en forma gratuita a los datos proporcionados, solicitar actualización y rectificación de su información, solicitar prueba de la autorización\r\n    otorgada, revocatoria de la autorización y/o solicitar la supresión del dato (salvo cuando por disposición legal o contractual sea obligatorio conservar la información), presentar ante la Superintendencia de Industria y Comercio quejas por infracciones\r\n    a la normativa vigente.<br />Así mismo, he sido informado sobre el carácter facultativo que tiene el suministro de información sensible o datos de las niñas, niños y adolescentes. Se entiende por datos sensibles aquellos que afectan la intimidad del\r\n    Titular o cuyo uso indebido puede generar su discriminación, tales como aquellos que revelen el origen racial o étnico, la orientación política, las convicciones religiosas o filosóficas, la pertenencia a sindicatos, organizaciones sociales, de derechos\r\n    humanos o que promueva intereses de cualquier partido político o que garanticen los derechos y garantías de partidos políticos de oposición así como los datos relativos a la salud, a la vida sexual y los datos biométricos; y que podré ejercitar, en\r\n    cualquier momento, mis derechos derivados o relacionados con la protección de datos personales (habeas data) a través de los medios y procedimientos indicados en la políticas de protección de datos personales de la Universidad del Norte y de la ONU.<br\r\n    />\r\n    <br />Aclaro que he leído y entendido cada aparte de este documento, y que la suscribo de forma libre y voluntaria una vez leída en su totalidad y que me presento voluntariamente para participar en este estudio. He entendido la información que se\r\n    expone en este consentimiento y me han respondido las dudas e inquietudes surgidas. <br /><br />\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <p>Nombre de la participante:</p>\r\n        <b>{{survey?.surveyed?.name}}</b>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <p>Documento de identificación de la participante</p>\r\n        <b>{{survey?.surveyed?.identification}}</b>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-3\">\r\n    <div class=\"col-md-6\">\r\n        <p>Fecha y Hora</p>\r\n        <b>{{survey?.created_at |  date:'medium'}}</b>\r\n    </div>\r\n\r\n</div>\r\n","<div class=\"col-md-8 offset-md-2\">\r\n    <nb-card accent=\"info\" status=\"info\">\r\n        <nb-card-header>\r\n            ENCUESTA ONU MUJERES\r\n\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div *ngIf=\"!start\">\r\n                <h4 class=\"text-center\">\r\n                    ENCUESTA DE VOCACIÓN PRODUCTIVA, COMERCIAL Y DE OPORTUNIDADES DE EMPLEO EN MUJERES MIGRANTES Y COMUNIDADES DE ACOGIDA (GRUPO BASE)\r\n                </h4>\r\n                <br />\r\n                <p>\r\n                    Buen día mi nombre es ___ y hago parte del grupo perteneciente al proyecto Acciones para la protección e inclusión para las mujeres en el contexto de los flujos migratorios mixtos procedentes de Venezuela en la costa caribe colombiana. Proyecto realizado\r\n                    por Onu mujeres y la Universidad del Norte, gracias al apoyo financiero de la Oficina para las poblaciones, refugiados y migrantes del departamento de estado norteamericano. Nuestra labor es buscar caminos que permitan o faciliten\r\n                    el encuentro de empleo o el fortalecimiento de negocios ya existentes en las mujeres migrantes y colombianas . Esta encuesta tiene como único objetivo recuperar información que nos permita ayudar o facilitar espacios para que usted\r\n                    pueda aumentar sus probabilidades de inclusión laboral. No somos entidad de control y el único fin de la recolección de los datos es entender sus habilidades y capacidades para el mercado laboral. Es importante su colaboración sincera\r\n                    y estamos muy agradecidos por este espacio.\r\n                </p>\r\n                <br />\r\n                <button nbButton *ngIf=\"!start\" size=\"large\" (click)=\"start= true\">\r\n          EMPEZAR\r\n        </button>\r\n            </div>\r\n\r\n            <nb-stepper #stepper orientation=\"vertical\" *ngIf=\"start\">\r\n                <nb-step [label]=\"CONSENTIMIENTO\">\r\n                    <ng-template #CONSENTIMIENTO>Consentimiento</ng-template>\r\n                    <ngx-seccion1></ngx-seccion1>\r\n\r\n                    Consentimiento informado firma *\r\n\r\n                    <nb-radio-group [(ngModel)]=\"consent\" status=\"success\">\r\n                        <nb-radio value=\"true\"> Sí </nb-radio>\r\n                        <nb-radio value=\"false\"> No </nb-radio>\r\n                    </nb-radio-group>\r\n\r\n                    <div class=\"text-center\">\r\n                        <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>Anterior</button>\r\n                        <button nbButton (click)=\"scrollToTop()\" nbStepperNext [disabled]=\"!consent\">\r\n              Siguiente\r\n            </button>\r\n                    </div>\r\n                </nb-step>\r\n                <nb-step label=\"Sección {{ section.code }}\" *ngFor=\"let section of sections; let i= index; trackBy: trackByFn\">\r\n                    <form [formGroup]=\"forms[i]\">\r\n                        {{ forms[i].value | json }}\r\n                        <h4>\r\n                            <span>{{ section.code }}.</span> {{ section.text }}\r\n                        </h4>\r\n                        <p class=\"lorem\">\r\n                            {{ section.desc }}\r\n                        </p>\r\n                        <br />\r\n                        <div *ngFor=\"let question of section.questions; let j= index; trackBy: trackByFn\">\r\n                            <div class=\"question-text\">\r\n                                <div class=\"flex flex-row\">\r\n                                    <span class=\"text-danger\" *ngIf=\"question.required\">*</span>\r\n                                    <b><span> {{ question.label }} </span>   </b>\r\n                                    <nb-icon (click)=\"updateQuestion(question, i)\" icon=\"save-outline\"></nb-icon>\r\n                                    <input type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"primary\" [formControlName]=\"question.id\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div [ngSwitch]=\"question.type\">\r\n                                <div *ngSwitchCase=\"'U'\">\r\n                                    <div class=\"flex flex-row\">\r\n                                        <br>\r\n                                        <input type=\"text\" placeholder=\"Agrega Nueva Opción\" nbInput shape=\"round\" fieldSize=\"small\" status=\"primary\" (change)=\"onChangeEvent($event, question)\" />\r\n                                        <nb-icon (click)=\"addOption(question)\" icon=\"checkmark-outline\"></nb-icon>\r\n                                        <a nbButton size=\"small\" (click)=\"toggleAddOption(question)\"> cancelar </a>\r\n                                    </div>\r\n\r\n                                    <nb-radio-group [name]=\"question.label\">\r\n\r\n                                        <nb-radio class=\"row\" *ngFor=\"let option of question.options; let j= index; trackBy: trackByFn\" value=\"{{ option.value }}\">\r\n                                            <ng-template #elseBlock>\r\n                                                {{ option.text }}\r\n                                            </ng-template>\r\n\r\n                                            <input *ngIf=\"option.text === 'Otro' || option.text === 'Otra'; else elseBlock\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"primary\" nbInput (click)=\"forms[i].get(question.label).setValue(option.value)\" [placeholder]=\"option.text\" />\r\n                                            <nb-icon *ngIf=\"(question.type === 'U' || question.type === 'M') \" (click)=\"removeOption(option, question, j)\" icon=\"close-outline\"></nb-icon>{{question.addOption}}\r\n\r\n                                        </nb-radio>\r\n                                    </nb-radio-group>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'M'\" class=\"col\">\r\n                                    <div class=\"flex flex-row\">\r\n                                        <br>\r\n                                        <input type=\"text\" placeholder=\"Agrega Nueva Opción\" nbInput shape=\"round\" fieldSize=\"small\" status=\"primary\" (change)=\"onChangeEvent($event, question)\" />\r\n                                        <nb-icon (click)=\"addOption(question)\" icon=\"checkmark-outline\"></nb-icon>\r\n                                        <a nbButton size=\"small\" (click)=\"toggleAddOption(question)\"> cancelar </a>\r\n                                    </div>\r\n                                    <nb-checkbox class=\"row\" *ngFor=\"let option of question.options;\r\n                                  let j= index;\r\n                                  trackBy: trackByFn\" value=\"option.value\">{{ option.text }}</nb-checkbox>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'S'\">\r\n                                    <nb-radio-group>\r\n                                        <nb-radio value=\"1\"> Sí </nb-radio>\r\n                                        <nb-radio value=\"2\"> No </nb-radio>\r\n                                    </nb-radio-group>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>Anterior</button>\r\n                            <button nbButton (click)=\"scrollToTop()\" nbStepperNext>Siguiente</button>\r\n                        </div>\r\n                    </form>\r\n                </nb-step>\r\n            </nb-stepper>\r\n        </nb-card-body>\r\n        <nb-card-footer> </nb-card-footer>\r\n    </nb-card>\r\n</div>","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Option } from '@core/data/remote/schemas/option';\r\nimport { Question } from '@core/data/remote/schemas/question';\r\nimport { Section } from '@core/data/remote/schemas/section';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbAccessChecker } from '@nebular/security';\r\nimport { NbLayoutScrollService, NbStepperComponent } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-survey-editor',\r\n  templateUrl: './survey-editor.component.html',\r\n  styleUrls: ['./survey-editor.component.scss']\r\n})\r\nexport class SurveyEditorComponent implements OnInit {\r\n\r\n  public sections: Array<Section> = new Array<Section>();\r\n  public forms: Array<FormGroup> = new Array<FormGroup>();\r\n  public loading: boolean =  false;\r\n  start = false;\r\n  consent;\r\n  public addingOption: boolean =  false;\r\n   constructor(\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder,\r\n    public _accessChecker: NbAccessChecker,\r\n    private _ly: NbLayoutScrollService\r\n\r\n  ) {\r\n\r\n\r\n    this._surveyService.getAllSections().subscribe({\r\n      next: (sections) => {\r\n       this.sections = sections;\r\n       sections.map((section) => {\r\n        const form = _fb.group({});\r\n         section.questions.map(question => {\r\n\r\n          form.addControl( question.id+\"\", new FormControl(question.text, Validators.required));\r\n          question.options.map((option) => {\r\n            if(option.text===\"Otro\"|| option.text===\"Otra\"){\r\n              form.addControl( question.id+\"_OTRO\", new FormControl('', Validators.required));\r\n            }\r\n          })\r\n        });\r\n        this.forms.push(form);\r\n\r\n\r\n       });\r\n       console.log(this.forms);\r\n\r\n\r\n       },\r\n    })\r\n  }\r\n\r\n  addOption(q: Question){\r\n    const opt: Option = {question_id: q.id,text: q.newOpt}  ;\r\n\r\n    this._surveyService.addOption(opt).subscribe({\r\n      next: (opt) => {\r\n        if(opt){\r\n          q.options.push(opt);\r\n          q.newOpt = \"\";\r\n          q.addingOption = false;\r\n        }\r\n\r\n      },\r\n    })\r\n  }\r\n\r\n  updateQuestion(q: Question,index){\r\n\r\n    q.text = this.forms[index].get(q.id+\"\").value\r\n    this._surveyService.updateQuestion(q).subscribe({\r\n      next: (q) => {\r\n        if(q){\r\n          this._surveyService.showToast(\"right\",\"success\",\"Actualizado Correctamente\");\r\n        }\r\n\r\n      },\r\n    })\r\n  }\r\n\r\n  removeOption(opt: Option, question, index){\r\n    this._surveyService.deleteOption(opt).subscribe({\r\n      next: (opt) => {\r\n          if(opt){\r\n            this._surveyService.showToast(\"right\",\"success\",\"Eliminado Correctamente\")\r\n            question.options.splice(index,1);\r\n          }\r\n       },\r\n    })\r\n\r\n\r\n  }\r\n\r\n  toggleAddOption(question){\r\n    question.addingOption = !question.addingOption;\r\n  }\r\n\r\n  onChangeEvent($e, q){\r\n    q.newOpt = $e.target.value\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   //\r\n  }\r\n  @ViewChild('stepper') stepper: NbStepperComponent;\r\n\r\n  scrollToTop(){\r\n    this._ly.scrollTo(0,0);\r\n\r\n\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return `${index}-${item?.trackId}`;\r\n  }\r\n\r\n}\r\n","<nb-card accent=\"primary\" status=\"info\">\r\n    <nb-card-header> ENCUESTA ONU MUJERES </nb-card-header>\r\n    <nb-card-body id=\"body\">\r\n        <div class=\"col-md-8 offset-md-2\">\r\n            <div>\r\n                <h4 class=\"text-center\">\r\n                    ENCUESTA DE VOCACIÓN PRODUCTIVA, COMERCIAL Y DE OPORTUNIDADES DE EMPLEO EN MUJERES MIGRANTES Y COMUNIDADES DE ACOGIDA (GRUPO BASE)\r\n                </h4>\r\n                <br />\r\n                <p class=\"text-justify\">\r\n                    Buen día mi nombre es <b>{{pollster?.name}}</b> y hago parte del grupo perteneciente al proyecto Acciones para la protección e inclusión para las mujeres en el contexto de los flujos migratorios mixtos procedentes de Venezuela en la\r\n                    costa caribe colombiana. Proyecto realizado por Onu mujeres y la Universidad del Norte, gracias al apoyo financiero de la Oficina para las poblaciones, refugiados y migrantes del departamento de estado norteamericano. Nuestra labor\r\n                    es buscar caminos que permitan o faciliten el encuentro de empleo o el fortalecimiento de negocios ya existentes en las mujeres migrantes y colombianas . Esta encuesta tiene como único objetivo recuperar información que nos permita\r\n                    ayudar o facilitar espacios para que usted pueda aumentar sus probabilidades de inclusión laboral. No somos entidad de control y el único fin de la recolección de los datos es entender sus habilidades y capacidades para el mercado\r\n                    laboral. Es importante su colaboración sincera y estamos muy agradecidos por este espacio.\r\n                </p>\r\n                <br />\r\n\r\n                <form class=\"mt-3  \" [formGroup]=\"form\" aria-labelledby=\"title\">\r\n                    <nb-card>\r\n                        <nb-card-header>\r\n                            Para iniciar la encuesta, por favor digite los siguientes datos y de clic en \"Empezar\"\r\n\r\n                        </nb-card-header>\r\n                        <nb-card-body>\r\n                            <div class=\"mt-4\" *ngIf=\"error\">\r\n\r\n                                <nb-card style=\"background-color: honeydew;\" class=\"p-4 text-center\">\r\n                                    <b class=\"label text-danger\">* {{message}}</b>\r\n                                </nb-card>\r\n                            </div>\r\n\r\n                            <div>\r\n\r\n                                <br/>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6 form-group \">\r\n                                        <label class=\"label col-form-label\" for=\"name\">Nombre de la participante</label>\r\n                                        <input name=\"name\" type=\"text\" nbInput fullWidth status=\"info\" placeholder=\"Nombre\" formControlName=\"complete_name\">\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 form-group \">\r\n                                        <label class=\"label col-form-label\" for=\"doc\">Número de Documento de Identidad</label>\r\n                                        <input name=\"doc\" type=\"text\" nbInput fullWidth status=\"info\" placeholder=\"Documento\" formControlName=\"doc\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n\r\n\r\n                                    <div class=\"text-center\">\r\n                                        <button nbButton (click)=\"onSubmit()\" [disabled]=\"!form.valid\">\r\n                                  EMPEZAR\r\n\r\n                                </button>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </nb-card-body>\r\n                        <nb-card-footer>\r\n                            <p class=\"caption text-right\"> Fecha y Hora: {{ form.get('start_date').value | date:'medium'}}</p>\r\n                        </nb-card-footer>\r\n\r\n                    </nb-card>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>","import { HttpEventType } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Survey } from '@core/data/remote/schemas/survey';\r\nimport { User } from '@core/data/remote/schemas/users';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport {  NbLayoutScrollService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-survey-gateway',\r\n  templateUrl: './survey-gateway.component.html',\r\n  styleUrls: ['./survey-gateway.component.scss']\r\n})\r\nexport class SurveyGatewayComponent implements OnInit {\r\n  @Output() start = new EventEmitter<boolean>();\r\n  survey: Survey;\r\n  public form: FormGroup;\r\n  public pollster_id: any;\r\n  population_id: string;\r\n\r\n  consent;\r\n  survey_id: any;\r\n  loading: boolean;\r\n  state: string;\r\n  pollster: User;\r\n  message: string;\r\n  error: boolean = false;\r\n\r\n\r\n\r\n  constructor(\r\n    private _route:ActivatedRoute,\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder,\r\n    private _router: Router ,\r\n\r\n         private _ly: NbLayoutScrollService\r\n  ) {\r\n    this.start.emit(false);\r\n   }\r\n  myDate = new Date();\r\n\r\n  ngOnInit(): void {\r\n    this.form = this._fb.group({});\r\n    this.form.addControl( \"complete_name\", new FormControl('', Validators.required));\r\n    this.form.addControl( \"doc\", new FormControl('',Validators.required));\r\n    this.form.addControl( \"start_date\", new FormControl(this.myDate, Validators.required));\r\n    this.pollster_id = this._route.snapshot.paramMap.get(\"pollster_id\");\r\n    this.population_id = this._route.snapshot.paramMap.get(\"population_id\");\r\n\r\n    this._surveyService.getSingleUser( this.pollster_id )\r\n    .subscribe({\r\n      next: (user) => {\r\n        this.pollster = user;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      //submit session\r\n      const formData = this._surveyService.toFormData(this.form.value);\r\n      formData.append(\"pollster_id\", this.pollster_id+\"\");\r\n      formData.append(\"population_id\", this.population_id+\"\");\r\n      formData.append(\"section_id\", \"0\");\r\n      this.loading = true;\r\n      this._surveyService.createOrGetSurvey(formData)\r\n      .subscribe({\r\n        next: (event => {\r\n\r\n            if ( event.type === HttpEventType.Response) {\r\n              if(event.body.type == 4 || event.body.type  == 3){\r\n                this._surveyService.showToast('top rigth', 'success', 'Bienvenida a la Encuesta');\r\n                this.survey = event.body.survey;\r\n                this.start.emit(true);\r\n                this._router.navigate([\"encuesta\",1,this.population_id,this.pollster_id,this.survey.uuid]);\r\n              }\r\n\r\n              this.loading = false;\r\n              //0: no esta en base de datos\r\n              //1: nombre no coincide con base de datos\r\n              //2: encuesta por terminar\r\n              //3: encuesta terminada.\r\n              //4: nueva encuesta\r\n\r\n\r\n\r\n          this.error = true;\r\n          if(event.body.type == 0){\r\n            this.message = \"Actualmente usted no se encuentra registrada en la base de datos.\"              }\r\n          if(event.body.type == 1){\r\n            this.message = \"Uno de los datos proporcionados no es correcto, por favor intente nuevamente.\"\r\n\r\n          }\r\n          if(event.body.type == 2){\r\n            this.message = \"Usted ya realizó esta encuesta, gracias por participar.\"\r\n          }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }),\r\n        error: (error => {\r\n          this._surveyService.showToast('top rigth', 'danger', error);\r\n          this.loading = false;\r\n          this.error = true;\r\n          this.message =error.message;\r\n        }),\r\n      });\r\n\r\n    //  this.stepper.next();\r\n\r\n    }else{\r\n      // this.validateAllFormFields(form); //{7}\r\n      //this.stepper.next();\r\n    }\r\n  }\r\n\r\n  scrollToTop(){\r\n    this._ly.scrollTo(0,0);\r\n\r\n\r\n  }\r\n\r\n}\r\n"]}