{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UAOaA;AAUX,gCAAsBC,MAAtB,EAAoC;AAAA;;AAAd;AATtB,wBAAS;AACP,8BAAkB,mCADX;AAEP,iCAAqB,sCAFd;AAGP,+BAAmB,oCAHZ;AAIP,+BAAmB,oCAJZ;AAKP,iCAAqB;AALd,WAAT;AASyC;;;;iBAIlC,oBAAWC,WAAX,EAA8D;AAAA,gBAA9BC,OAA8B,uEAAF,EAAE;AAEnEA,mBAAO,CAAC,MAAD,CAAP,GAAmB,KAAKC,MAAL,CAAYF,WAAZ,CAAnB;AAEA,mBAAOC,OAAP;AACD;;;iBACD,0BAAiBE,aAAjB,EAAgE;AAAA;;AAAA,gBAAjBF,OAAiB,uEAAF,EAAE;AAC9D,iBAAKE,aAAL,GAAsBA,aAAtB;AACEF,mBAAO,CAACG,KAAR,GAAgB,KAAKD,aAAL,CAAmBE,QAAnB,CAA4BJ,OAAO,CAACG,KAApC,CAAhB,GAA6D,EAA7D;;AAEF,gBAAIH,OAAO,CAACK,YAAZ,EAA0B;AACxB,mBAAKP,MAAL,CAAYQ,iBAAZ,CAA8B;AAAA,uBAC5B,KAAI,CAACJ,aAAL,CAAmBG,YAAnB,CAAgCL,OAAO,CAACK,YAAxC,CAD4B;AAAA,eAA9B;AAGD;AACF;;;iBAED,cAAKH,aAAL,EAAkD;AAAA;;AAAA,gBAAfF,OAAe,uEAAF,EAAE;AAChD,iBAAKF,MAAL,CAAYQ,iBAAZ,CAA8B;AAAA,qBAAK,MAAI,CAACJ,aAAL,CAAmBK,IAAnB,EAAL;AAAA,aAA9B;AACD;;;iBAED,gBAAOL,aAAP,EAAmD;AAAA;;AAAA,gBAAfF,OAAe,uEAAF,EAAE;AACjD,iBAAKF,MAAL,CAAYQ,iBAAZ,CAA8B;AAAA,qBAC5B,MAAI,CAACJ,aAAL,CAAmBG,YAAnB,CAAgCL,OAAO,CAACK,YAAxC,CAD4B;AAAA,aAA9B;AAGD;;;iBACD,gBAAOH,aAAP,EAAoD;AAAA;;AAAA,gBAAfF,OAAe,uEAAF,EAAE;AAClD,iBAAKF,MAAL,CAAYQ,iBAAZ,CAA8B;AAAA,qBAC5B,MAAI,CAACJ,aAAL,CAAmBG,YAAnB,CAAgCL,OAAO,CAACK,YAAxC,CAD4B;AAAA,aAA9B;AAGD;;;;;;;yBA5CUR,gBAAaW;AAAA;;;eAAbX;AAAaY,iBAAbZ,cAAa;AAAAa,oBAFZ;;;;","names":["LottieService","ngZone","assets_name","options","assets","animationItem","speed","setSpeed","playSegments","runOutsideAngular","stop","_angular_core__WEBPACK_IMPORTED_MODULE_0__","factory","providedIn"],"sources":["webpack:///src/app/@core/data/vendors/services/lottie.service.ts"],"sourcesContent":["import { Injectable, NgZone } from '@angular/core';\r\nimport { AnimationItem } from 'lottie-web';\r\nimport { AnimationOptions } from 'ngx-lottie';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class LottieService {\r\n  assets = {\r\n    'logo-orienta-t': 'assets/lottie/logo-orienta-t.json',\r\n    'landing-orienta-t': 'assets/lottie/landing-orienta-t.json',\r\n    'login-orienta-t': 'assets/lottie/login-orienta-t.json',\r\n    'start-orienta-t': 'assets/lottie/start-orienta-t.json',\r\n    'results-orienta-t': 'assets/lottie/results-orienta-t.json',\r\n\r\n  };\r\n\r\n  constructor(  private ngZone: NgZone) { }\r\n\r\n  private animationItem: AnimationItem;\r\n\r\n  public getOptions(assets_name: string, options: AnimationOptions = {}) {\r\n\r\n    options['path'] =  this.assets[assets_name];\r\n\r\n    return options;\r\n  }\r\n  animationCreated(animationItem: AnimationItem, options: any = {}): void {\r\n    this.animationItem  = animationItem;\r\n      options.speed ? this.animationItem.setSpeed(options.speed) : '';\r\n\r\n    if (options.playSegments) {\r\n      this.ngZone.runOutsideAngular(() =>\r\n        this.animationItem.playSegments(options.playSegments),\r\n      );\r\n    }\r\n  }\r\n\r\n  stop(animationItem: AnimationItem, options:any ={}): void {\r\n    this.ngZone.runOutsideAngular(() =>this.animationItem.stop());\r\n  }\r\n\r\n  opened(animationItem: AnimationItem,options:any ={}): void {\r\n    this.ngZone.runOutsideAngular(() =>\r\n      this.animationItem.playSegments(options.playSegments),\r\n    );\r\n  }\r\n  closed(animationItem: AnimationItem, options:any ={}): void {\r\n    this.ngZone.runOutsideAngular(() =>\r\n      this.animationItem.playSegments(options.playSegments),\r\n    );\r\n  }\r\n}\r\n"]}