{"version":3,"file":"src_app_pages_onu-mujeres_onu-mujeres_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/onu-mujeres/formulario/formulario.component.ts","./src/app/pages/onu-mujeres/formulario/formulario.component.html","./src/app/pages/onu-mujeres/gracias/gracias.component.ts","./src/app/pages/onu-mujeres/gracias/gracias.component.html","./src/app/pages/onu-mujeres/onu-mujeres-routing.module.ts","./src/app/pages/onu-mujeres/onu-mujeres.component.ts","./src/app/pages/onu-mujeres/onu-mujeres.component.html","./src/app/pages/onu-mujeres/onu-mujeres.module.ts","./src/app/pages/onu-mujeres/seccion1/seccion1.component.ts","./src/app/pages/onu-mujeres/seccion1/seccion1.component.html","./src/app/pages/onu-mujeres/survey-editor/survey-editor.component.ts","./src/app/pages/onu-mujeres/survey-editor/survey-editor.component.html","./src/app/pages/onu-mujeres/survey-gateway/survey-gateway.component.ts","./src/app/pages/onu-mujeres/survey-gateway/survey-gateway.component.html"],"sourcesContent":["import { HttpEventType } from \"@angular/common/http\";\r\nimport { AfterViewInit, Component, OnInit, ViewChild } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport {\r\n  ActivatedRoute,\r\n  NavigationEnd,\r\n  NavigationStart,\r\n  Router,\r\n} from \"@angular/router\";\r\nimport { Question } from \"@core/data/remote/schemas/question\";\r\nimport { Section } from \"@core/data/remote/schemas/section\";\r\nimport { Survey } from \"@core/data/remote/schemas/survey\";\r\nimport { User } from \"@core/data/remote/schemas/users\";\r\nimport { SurveyService } from \"@core/data/remote/services/survey.service\";\r\nimport { NbAccessChecker } from \"@nebular/security\";\r\nimport { NbDateService, NbLayoutScrollService, NbStepperComponent } from \"@nebular/theme\";\r\nimport { format, formatDuration, intervalToDuration, parse, parseISO, toDate,  } from 'date-fns'\r\n\r\n@Component({\r\n  selector: \"ngx-formulario\",\r\n  templateUrl: \"./formulario.component.html\",\r\n  styleUrls: [\"./formulario.component.scss\"],\r\n})\r\nexport class FormularioComponent implements OnInit{\r\n  public sections: Array<Section> = new Array<Section>();\r\n  public section: Section;\r\n  public forms: Array<FormGroup> = new Array<FormGroup>();\r\n  public form: FormGroup;\r\n\r\n  public loading: boolean = false;\r\n  public pollster_id: any;\r\n  start = false;\r\n  consent;\r\n  pollster: User;\r\n  survey_id: any;\r\n  uuid: string;\r\n  section_id: string;\r\n  survey: Survey;\r\n  population_id: any;\r\n  constructor(\r\n    private _Activatedroute: ActivatedRoute,\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder,\r\n    public _accessChecker: NbAccessChecker,\r\n    private _ly: NbLayoutScrollService,\r\n    private _router: Router,\r\n    protected dateService: NbDateService<Date>\r\n  ) {\r\n    _router.events.forEach((event) => {\r\n      if (event instanceof NavigationStart) {\r\n      }\r\n      if (event instanceof NavigationEnd) {\r\n        this.updateSession();\r\n      }\r\n      // NavigationEnd\r\n      // NavigationCancel\r\n      // NavigationError\r\n      // RoutesRecognized\r\n    });\r\n    this.form = this._fb.group({});\r\n\r\n\r\n    this.pollster_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"pollster_id\"\r\n    );\r\n    this.population_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"population_id\"\r\n    );\r\n\r\n    this.uuid = this._Activatedroute.snapshot.paramMap.get(\"uuid\");\r\n    this.section_id = this._Activatedroute.snapshot.paramMap.get(\"section_id\");\r\n    this.getSession(this.uuid, this.section_id);\r\n    //Get pollster Name:\r\n\r\n    if (this.section_id == \"1\") {\r\n      this.getSurvey(this.uuid);\r\n    }\r\n\r\n    this._surveyService.getSingleUser(this.pollster_id).subscribe({\r\n      next: (user) => {\r\n        this.pollster = user;\r\n      },\r\n    });\r\n  }\r\n\r\n  getSession(uuid, section_id) {\r\n    this.loading = true;\r\n    this._surveyService.getSingleSection(uuid, section_id).subscribe({\r\n      next: (section: Section) => {\r\n        this.section = section;\r\n\r\n        this.form = this._fb.group({});\r\n        this.section.questions.map((question: Question) => {\r\n          //Set Validators:\r\n\r\n\r\n          switch (question.type) {\r\n            case \"M\":\r\n              question.options.map((option, i) => {\r\n                this.form.addControl(\r\n                  question.label + \"_\" + option.value,\r\n                  new FormControl(question.answer[question.label+\"_\"+option.subcode], [])\r\n                );\r\n                if (option.text === \"Otro\" || option.text === \"Otra\") {\r\n                  this.form.addControl(\r\n                    question.label + \"_OTRO\",\r\n                    new FormControl( question.answer[question.label + \"_OTRO\"]+ \" \", [])\r\n                  );\r\n                }\r\n              });\r\n\r\n              break;\r\n            case \"U\":\r\n              this.form.addControl(\r\n                question.label,\r\n                new FormControl(\r\n                  question.answer[question.label]+\"\",\r\n                  question.validators\r\n                )\r\n              );\r\n\r\n              question.options.map((option) => {\r\n                if (option.text === \"Otro\" || option.text === \"Otra\") {\r\n                  this.form.addControl(\r\n                    question.label + \"_OTRO\",\r\n                    new FormControl( question.answer[question.label + \"_OTRO\"]+ \" \", [])\r\n                  );\r\n                }\r\n\r\n              });\r\n\r\n\r\n              break;\r\n            case \"D\":\r\n              let date;\r\n              if(  question.answer[question.label] !== \"\"){\r\n                  date = new Date(question.answer[question.label]);\r\n\r\n               }else{\r\n                 date = new Date();\r\n\r\n              }\r\n              this.form.addControl(\r\n                question.label,\r\n                new FormControl(\r\n                  date,\r\n                  question.validators\r\n                )\r\n              );\r\n\r\n              break;\r\n            case \"INS\":\r\n              break;\r\n            default:\r\n              this.form.addControl(\r\n                question.label,\r\n                new FormControl(\r\n                  question.answer[question.label],\r\n                  question.validators\r\n                )\r\n              );\r\n\r\n              break;\r\n          }\r\n        });\r\n        this.loading = false;\r\n\r\n\r\n        this.scrollToTop();\r\n\r\n        if(section_id==\"6\"){\r\n          let time = intervalToDuration({\r\n            start: new Date(this.section.survey.created_at),\r\n             end: this.dateService.today()\r\n          })\r\n          if( this.form.get(\"F_10\")){\r\n         //   this.form.get(\"F_10\").disable();\r\n            if(this.form.get(\"F_10\").value == \"\"){\r\n              this.form.get(\"F_10\")?.setValue(\r\n                formatDuration( time )\r\n                 )\r\n            }else{\r\n\r\n            }\r\n          }\r\n\r\n\r\n        }\r\n\r\n        //update conditions\r\n       this.section.questions.map((question: Question) => {\r\n\r\n        if( question.conditions.length>0){\r\n\r\n            this.eval_conditions(this.form, question, question.answer[question.label], this.section) ;\r\n\r\n        }\r\n\r\n    });\r\n      },\r\n    });\r\n  }\r\n\r\n  eval_conditions(form: FormGroup, question: Question, value, questions) {\r\n    let result = true;\r\n\r\n    question.conditions.forEach((condition) => {\r\n      let values = condition.value.split(\",\");\r\n      if (values.includes(value + \"\")) {\r\n        //set visibiliti to conditioned question\r\n        form.get(condition.question.label).setValidators(null);\r\n        form.get(condition.question.label).updateValueAndValidity();\r\n      //  form.get(condition.question.label).disable();\r\n      if(questions.questions){\r\n        questions.questions[condition.question_index].show = false;\r\n      }else{\r\n        questions[condition.question_index].show = false;\r\n\r\n      }\r\n      } else {\r\n        form.get(condition.question.label).setValidators(Validators.required);\r\n        form.get(condition.question.label).updateValueAndValidity();\r\n        form.get(condition.question.label).enable();\r\n    //    questions[condition.question_index].show = true;\r\n        if(questions.questions){\r\n          questions.questions[condition.question_index].show = true;\r\n        }else{\r\n          questions[condition.question_index].show = true;\r\n\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  onSubmit(form: FormGroup, i) {\r\n    if (form.valid) {\r\n      //submit session\r\n      const formData = this._surveyService.toFormData(form.value);\r\n      formData.append(\"pollster_id\", this.pollster_id);\r\n      formData.append(\"population_id\", this.population_id);\r\n      formData.append(\"section_id\", this.section_id);\r\n      formData.append(\"uuid\", this.uuid);\r\n\r\n      this.loading = true;\r\n      this._surveyService.addOrUpdateSurvey(formData).subscribe({\r\n        next: (event) => {\r\n          if (event.type === HttpEventType.Response) {\r\n            this._surveyService.showToast(\r\n              \"top rigth\",\r\n              \"success\",\r\n              \"Sección Actualizada correctamente\"\r\n            );\r\n            this.loading = false;\r\n            this.survey_id = event.body.id;\r\n\r\n            if (i == \"6\") {\r\n              this._router.navigate([\"encuesta/gracias\"]);\r\n            }else{\r\n\r\n                this._router.navigate([\r\n                  \"encuesta\",\r\n                  parseInt(this.section_id) + 1,\r\n                  this.pollster_id,\r\n                  this.uuid,\r\n                ]);\r\n\r\n            }\r\n\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this._surveyService.showToast(\"top rigth\", \"danger\", error);\r\n          this.loading = false;\r\n        },\r\n      });\r\n\r\n      //  this.stepper.next();\r\n    } else {\r\n      this.validateAllFormFields(form); //{7}\r\n      this._surveyService.showToast(\r\n        \"left\",\r\n        \"warning\",\r\n        \"Favor revisar preguntas sin responder.\"\r\n      );\r\n    }\r\n  }\r\n\r\n  onSubmitUpdate(form: FormGroup) {\r\n\r\n      //submit session\r\n      const formData = this._surveyService.toFormData(form.value);\r\n      formData.append(\"pollster_id\", this.pollster_id);\r\n      formData.append(\"population_id\", this.population_id);\r\n      formData.append(\"section_id\", this.section_id);\r\n      formData.append(\"uuid\", this.uuid);\r\n\r\n      this.loading = true;\r\n      this._surveyService.addOrUpdateSurvey(formData).subscribe({\r\n        next: (event) => {\r\n          if (event.type === HttpEventType.Response) {\r\n            this._surveyService.showToast(\r\n              \"top rigth\",\r\n              \"success\",\r\n              \"Sección Actualizada correctamente\"\r\n            );\r\n            this.loading = false;\r\n            this.survey_id = event.body.id;\r\n\r\n\r\n\r\n          }\r\n        },\r\n        error: (error) => {\r\n          this._surveyService.showToast(\"top rigth\", \"danger\", error);\r\n          this.loading = false;\r\n        },\r\n      });\r\n\r\n      //  this.stepper.next();\r\n\r\n  }\r\n  validateAllFormFields(formGroup: FormGroup) {\r\n    //{1}\r\n    Object.keys(formGroup.controls).forEach((field) => {\r\n      //{2}\r\n      const control = formGroup.get(field); //{3}\r\n      if (control instanceof FormControl) {\r\n        //{4}\r\n        control.markAsTouched({ onlySelf: true });\r\n      } else if (control instanceof FormGroup) {\r\n        //{5}\r\n        this.validateAllFormFields(control); //{6}\r\n      }\r\n    });\r\n  }\r\n\r\n  @ViewChild(\"stepper\") stepper: NbStepperComponent;\r\n\r\n  scrollToTop() {\r\n    this._ly.scrollTo(0, 0);\r\n\r\n    //\r\n  }\r\n\r\n  ngOnInit() {\r\n\r\n  }\r\n  getSurvey(uuid) {\r\n    this.loading = true;\r\n    this._surveyService.getSurvey(uuid).subscribe({\r\n      next: (survey: Survey) => {\r\n        this.survey = survey;\r\n        this.loading = false;\r\n      },\r\n    });\r\n  }\r\n  updateSession() {\r\n    this.pollster_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"pollster_id\"\r\n    );\r\n    this.population_id = this._Activatedroute.snapshot.paramMap.get(\r\n      \"population_id\"\r\n    );\r\n\r\n    this.uuid = this._Activatedroute.snapshot.paramMap.get(\"uuid\");\r\n    this.section_id = this._Activatedroute.snapshot.paramMap.get(\"section_id\");\r\n    this.getSession(this.uuid, this.section_id);\r\n\r\n\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return `${index}-${item?.trackId}`;\r\n  }\r\n}\r\n","<div class=\"col-md-8 offset-md-2\">\r\n    <nb-card class=\"shadow\" status=\"info\" [nbSpinner]=\"loading\" nbSpinnerStatus=\"info\" nbSpinnerSize=\"large\" nbSpinnerMessage=\"Actualizando\">\r\n        <nb-card-header> ENCUESTA ONU MUJERES\r\n\r\n\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div class=\"p-3\">\r\n                <div [label]=\"CONSENTIMIENTO\" *ngIf=\"section_id == '1' && !start\">\r\n                    <ng-template #CONSENTIMIENTO>Consentimiento</ng-template>\r\n                    <ngx-seccion1 [survey]=\"survey\"></ngx-seccion1>\r\n                    <div>\r\n                        <!--  <form>\r\n                            <label class=\"label col-form-label\" for=\"consent\">Consentimiento informado firma *</label>\r\n                            <nb-radio-group [(ngModel)]=\"consent\" name=\"consent\" status=\"success\">\r\n                                <nb-radio value=\"true\"> Sí </nb-radio>\r\n                                <nb-radio value=\"false\"> No </nb-radio>\r\n                            </nb-radio-group>\r\n                        </form>-->\r\n                    </div>\r\n\r\n                    <div class=\"text-center\">\r\n                        <button (click)=\"start=true\" nbButton>\r\n              <!--[disabled]=\"!consent\"-->\r\n              Continuar\r\n            </button>\r\n                    </div>\r\n\r\n                </div>\r\n                <div *ngIf=\"start || (section_id != '1' && !start)\" #stepper>\r\n\r\n                    <div label=\"Sección {{ section?.code }}\">\r\n                        <form [formGroup]=\"form\" async>\r\n\r\n                            <h4>\r\n                                <span>{{ section?.code }}.</span> {{ section?.text }}\r\n                            </h4>\r\n                            <p class=\"lorem\">\r\n                                {{ section?.desc }}\r\n                            </p>\r\n                            <br />\r\n                            <ng-container *ngFor=\"\r\n                      let question of section?.questions;\r\n                      let j = index;\r\n                      trackBy: trackByFn\r\n                    \">\r\n\r\n\r\n                                <div *ngIf=\"question?.show\">\r\n                                    <div *ngIf=\"question.pre_title\">\r\n                                        <br />\r\n                                        <h6 class=\"text-info\"><b>{{question.pre_title}}</b></h6>\r\n\r\n                                    </div>\r\n                                    <div class=\"question-text row\">\r\n\r\n                                        <span class=\"text-danger\" *ngIf=\"question.required\">*</span>\r\n                                        <div *ngIf=\"question.type !== 'INS'\">\r\n                                            <b><span> {{ question.label }} </span> {{ question.text }}</b>\r\n                                        </div>\r\n                                    </div>\r\n                                    <div>\r\n                                        <span *ngIf=\"question.type!=='INS'\" class=\"caption\"> {{ question.desc }} </span>\r\n                                    </div>\r\n                                    <div [ngSwitch]=\"question.type\">\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'T'\">\r\n                                            <input [name]=\"question.label\" type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\" />\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'TL'\">\r\n                                            <textarea [name]=\"question.label\" type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\"></textarea>\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'N'\">\r\n                                            <input [name]=\"question.label\" type=\"number\" shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\" />\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'U'\">\r\n                                            <nb-radio-group status=\"danger\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\r\n                                                <nb-radio (click)=\"\r\n                                eval_conditions(\r\n                                  form,\r\n                                  question,\r\n                                  option.value,\r\n                                  section.questions\r\n                                )\r\n                              \" *ngFor=\"\r\n                                let option of question.options;\r\n                                let j = index;\r\n                                trackBy: trackByFn\r\n                              \" value=\"{{ option.value }}\">\r\n                                                    <ng-template #elseBlock>\r\n                                                        {{ option.text }}\r\n                                                    </ng-template>\r\n\r\n                                                    <input *ngIf=\"option.isOther; else elseBlock\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"danger\" nbInput (click)=\"\r\n                                  form.get(question.label).setValue(option.value)\r\n                                \" [placeholder]=\"option.text\" [formControl]=\"form.controls[question.label + '_OTRO']\" />\r\n                                                </nb-radio>\r\n                                            </nb-radio-group>\r\n                                            <div *ngIf=\"\r\n                              form.get(question.label + '_OTRO')?.invalid &&\r\n                              (form.get(question.label + '_OTRO')?.dirty ||\r\n                                form.get(question.label + '_OTRO')?.touched)\r\n                            \" class=\"alert text-danger label\">\r\n                                                <div *ngIf=\"\r\n                                form.get(question.label + '_OTRO').errors.required\r\n                              \">\r\n                                                    La Opción OTRO es Obligatoria para la pregunta\r\n                                                    <b>{{ question.label }}</b>.\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'S'\">\r\n                                            <nb-radio-group status=\"danger\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\r\n                                                <nb-radio (click)=\"\r\n                                eval_conditions(\r\n                                  form,\r\n                                  question,\r\n                                  1,\r\n                                  section.questions\r\n                                )\r\n                              \" value=\"1\">\r\n                                                    Sí\r\n                                                </nb-radio>\r\n                                                <nb-radio (click)=\"\r\n                                eval_conditions(\r\n                                  form,\r\n                                  question,\r\n                                  2,\r\n                                  section.questions\r\n                                )\r\n                              \" value=\"2\">\r\n                                                    No\r\n                                                </nb-radio>\r\n                                            </nb-radio-group>\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'M'\">\r\n                                            <nb-checkbox status=\"danger\" [name]=\"question.label + '_' + option.value\" class=\"m-2 row\" [formControl]=\"form.controls[question.label + '_' + option.value]\" *ngFor=\"\r\n                              let option of question.options;\r\n                              let j = index;\r\n                              trackBy: trackByFn\r\n                            \" value=\"option.value\">\r\n                                                <ng-template #elseBlock2>\r\n                                                    {{ option.text }}\r\n                                                </ng-template>\r\n                                                <input *ngIf=\"option.isOther; else elseBlock2\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"danger\" nbInput (click)=\"\r\n                                  form.get(question.label).setValue(option.value)\r\n                                \" [placeholder]=\"option.text\" [formControl]=\"form.controls[question.label + '_OTRO']\" />\r\n                                            </nb-checkbox>\r\n\r\n                                        </div>\r\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'D'\">\r\n                                            <input nbInput status=\"danger\" placeholder=\"dd - MM - yyyy\" [nbDatepicker]=\"formcontrol\" [formControl]=\"form.controls[question.label]\" />\r\n                                            <nb-datepicker format=\"dd - MM - yyyy\" #formcontrol></nb-datepicker>\r\n                                        </div>\r\n                                        <div class=\"pt-2 d-flex flex-row justify-content-between align-items-center\" *ngSwitchCase=\"'E'\">\r\n                                            <div>\r\n                                                {{ question.start }}\r\n                                            </div>\r\n                                            <nb-radio-group class=\"d-flex flex-row justify-content-between\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\r\n                                                <nb-radio class=\"\" value=\"1\"> 1 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"2\"> 2 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"3\"> 3 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"4\"> 4 </nb-radio>\r\n                                                <nb-radio class=\"\" value=\"5\"> 5 </nb-radio>\r\n                                            </nb-radio-group>\r\n                                            <div>\r\n                                                {{ question.end }}\r\n                                            </div>\r\n                                        </div>\r\n                                        <nb-card class=\"mt-3\" *ngSwitchCase=\"'INS'\" accent=\"primary\" status=\"info\">\r\n                                            <nb-card-header>\r\n                                                {{question.text}}\r\n                                            </nb-card-header>\r\n                                            <nb-card-body>\r\n                                                <div class=\"caption p-2\">\r\n                                                    <b> {{question.desc}}</b>\r\n                                                </div>\r\n                                            </nb-card-body>\r\n                                        </nb-card>\r\n                                    </div>\r\n                                    <div *ngIf=\"\r\n                                      form.get(question.label)?.invalid &&\r\n                                      (form.get(question.label)?.dirty ||\r\n                                        form.get(question.label)?.touched)\r\n                                    \" class=\"alert text-danger label\">\r\n                                        <span class=\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\"></span>\r\n\r\n                                        <div class=\"error-msg\" *ngIf=\"form.get(question.label).errors.required\">\r\n                                            La Pregunta <b>{{ question.label }}</b> es obligatoria.\r\n                                        </div>\r\n                                        <div class=\"error-msg\" *ngIf=\"form.get(question.label).errors.email\">\r\n                                            Debe ingresar un Mail Valido\r\n                                        </div>\r\n                                    </div>\r\n                                    <br />\r\n                                </div>\r\n\r\n\r\n\r\n\r\n                            </ng-container>\r\n\r\n                            <div class=\"text-center\">\r\n                                <!-- <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>\r\n                      Anterior\r\n                    </button>-->\r\n                                <button status=\"info\" *ngIf=\"section_id != '6';else finish\" type=\"submit\" nbButton (click)=\"onSubmit(form, 1)\">\r\n                  Siguiente\r\n                </button>\r\n                                <ng-template #finish>\r\n                                    <button status=\"success\" type=\"submit\" nbButton (click)=\"onSubmit(form, 6)\">\r\n                    Finalizar\r\n                  </button>\r\n                                </ng-template>\r\n\r\n\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </nb-card-body>\r\n        <nb-card-footer> </nb-card-footer>\r\n    </nb-card>\r\n</div>\r\n\r\n\r\n<nb-card (click)=\"onSubmitUpdate(form)\" id=\"fixedbutton\">\r\n\r\n    <nb-badge text=\"?\" status=\"danger\" position=\"top left\"></nb-badge>\r\n    <button nbTooltip=\"Si no has terminado y deseas guardar tu progreso, haz clic aquí\" nbTooltipStatus=\"primary\" nbButton>\r\n\r\n        <nb-icon icon=\"save-outline\">\r\n        </nb-icon>\r\n    </button>\r\n</nb-card>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-gracias',\r\n  templateUrl: './gracias.component.html',\r\n  styleUrls: ['./gracias.component.scss']\r\n})\r\nexport class GraciasComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-8 offset-md-2\">\r\n    <nb-card size=\"medium\" accent=\"info\" status=\"info\">\r\n        <nb-card-header>\r\n            Gracias\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div class=\"d-flex align-items-center justify-content-center\">\r\n                <div style=\"height: 100%;\" class=\"d-flex align-items-center justify-content-center\">\r\n                    <h2 class=\"color-success align-middle\"> Gracias por participar!</h2>\r\n                </div>\r\n\r\n            </div>\r\n            <div class=\"row mt-4\">\r\n\r\n                <div class=\"hero-logo d-flex justify-content-between align-self-end\">\r\n                    <a class=\"col\" href=\"#\"><img src=\"assets/img/logo-prm.jpg\" width=\"100%\" alt=\"logo-obs\"></a>\r\n\r\n                    <a class=\"col\" href=\"#\"><img src=\"assets/img/logo.jpg\" width=\"100%\" alt=\"logo-obs\"></a>\r\n                </div>\r\n            </div>\r\n\r\n\r\n\r\n\r\n\r\n        </nb-card-body>\r\n    </nb-card>\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { FormularioComponent } from './formulario/formulario.component';\r\nimport { GraciasComponent } from './gracias/gracias.component';\r\nimport { OnuMujeresComponent } from './onu-mujeres.component';\r\nimport { SurveyEditorComponent } from './survey-editor/survey-editor.component';\r\nimport { SurveyGatewayComponent } from './survey-gateway/survey-gateway.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: OnuMujeresComponent,\r\n    children: [\r\n      {\r\n        path: 'edit',\r\n        component: SurveyEditorComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: 'gracias',\r\n        component: GraciasComponent,\r\n        pathMatch: 'full'\r\n      },\r\n      {\r\n        path: ':section_id/:pollster_id/:uuid',\r\n        component: FormularioComponent,\r\n      },\r\n      {\r\n        path: ':section_id/:population_id/:pollster_id/:uuid',\r\n        component: FormularioComponent,\r\n      },\r\n      {\r\n        path: ':population_id/:pollster_id',\r\n        component: SurveyGatewayComponent,\r\n      },\r\n    ]\r\n  },\r\n\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class OnuMujeresRoutingModule { }\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { LayoutService } from '@core/utils';\r\nimport { MenuService } from '@core/utils/menu.service';\r\nimport { MENU_ITEMS } from '@modules/pages-menu';\r\nimport { NbAccessChecker } from '@nebular/security';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'ngx-onu-mujeres',\r\n  templateUrl: './onu-mujeres.component.html',\r\n  styleUrls: ['./onu-mujeres.component.scss']\r\n})\r\nexport class OnuMujeresComponent implements OnInit {\r\n\r\n  constructor(  \r\n    private accessChecker: NbAccessChecker,\r\n    private menuService: MenuService, \r\n    private route: ActivatedRoute,\r\n    private ls: LayoutService,) {    \r\n      // menuService.setMenuItemVisibility(this.menu);\r\n    }\r\n  menu = MENU_ITEMS;  private destroy$: Subject<void> = new Subject<void>();\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<ngx-one-column-no-header-layout >\r\n    <nb-menu [items]=\"menu\"></nb-menu>\r\n    <router-outlet></router-outlet>\r\n</ngx-one-column-no-header-layout>\r\n\r\n ","import {   NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { OnuMujeresRoutingModule } from './onu-mujeres-routing.module';\r\nimport { OnuMujeresComponent } from './onu-mujeres.component';\r\nimport { FormularioComponent } from './formulario/formulario.component';\r\nimport { ThemeModule } from 'app/@theme/theme.module';\r\nimport {  NbBadgeModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDatepickerModule, NbIconModule, NbInputModule, NbLayoutModule, NbMenuModule, NbRadioModule, NbSpinnerModule, NbTooltipModule } from '@nebular/theme';\r\nimport { Seccion1Component } from './seccion1/seccion1.component';\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { SurveyEditorComponent } from './survey-editor/survey-editor.component';\r\nimport { SurveyGatewayComponent } from './survey-gateway/survey-gateway.component';\r\nimport { GraciasComponent } from './gracias/gracias.component';\r\nimport { NbDateFnsDateModule } from '@nebular/date-fns';\r\nimport { eo } from 'date-fns/locale';\r\n\r\n\r\n@NgModule({\r\n  declarations: [OnuMujeresComponent, FormularioComponent, Seccion1Component, SurveyEditorComponent, SurveyGatewayComponent, GraciasComponent ],\r\n  imports: [\r\n    CommonModule,\r\n    NbMenuModule,\r\n    NbLayoutModule,\r\n    NbCardModule,\r\n    NbInputModule,\r\n    NbRadioModule,\r\n    NbCheckboxModule,\r\n    NbDatepickerModule,\r\n    NbIconModule,\r\n    ThemeModule,\r\n    NbButtonModule,\r\n    NbTooltipModule,\r\n    NbBadgeModule,\r\n    NbDateFnsDateModule.forChild({\r\n      format: 'dd - MM - yyyy' ,\r\n      parseOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\r\n      formatOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\r\n\r\n    }),\r\n    ReactiveFormsModule,\r\n    NbSpinnerModule,\r\n    OnuMujeresRoutingModule,FormsModule\r\n  ],\r\n\r\n})\r\nexport class OnuMujeresModule { }\r\n"," import { Component, Input, OnInit } from '@angular/core';\r\nimport { Survey } from '@core/data/remote/schemas/survey';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-seccion1',\r\n  templateUrl: './seccion1.component.html',\r\n  styleUrls: ['./seccion1.component.scss']\r\n})\r\nexport class Seccion1Component implements OnInit {\r\n  @Input() survey? : Survey;\r\n\r\n\r\n\r\n  constructor(\r\n\r\n  ) { }\r\n  myDate = new Date();\r\n\r\n  ngOnInit(): void {\r\n\r\n\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n\r\n}\r\n","<div class=\"text-justify p-2\">\r\n    <h5 class=\"text-center\">CONSENTIMIENTO INFORMADO</h5>\r\n    <br /> Con mi firma autorizo el tratamiento de la información suministrada de acuerdo y para los fines del proyecto “Acciones para la protección e inclusión para las mujeres en el contexto de los flujos migratorios mixtos procedentes de Venezuela\r\n    en la costa caribe colombiana” - PA001448COL. Para ello la Universidad del Norte y la ONU-Mujeres (ONU) han diseñado el siguiente instrumento para recolectar información del personal participante en el estudio, este documento contiene preguntas personales,\r\n    sociales, económicas, y con su diligenciamiento usted manifiesta que conoce, autoriza y acepta el uso y tratamiento que dará la Universidad y la ONU a esta información para los fines del proyecto antes indicado, y de acuerdo con sus políticas de protección\r\n    de datos personales, las cuales pueden ser consultadas en los siguientes links:\r\n    <a href=\"https://www.google.com/url?q=http://www.uninorte.edu.co/politica-de-privacidad-de-datos&amp;sa=D&amp;source=editors&amp;ust=1616000621212000&amp;usg=AFQjCNE_pg0hGYzZtQOmvumhv1qtCdU9Zw\">http://www.uninorte.edu.co/politica-de-privacidad-de-datos</a>    y\r\n    <a href=\"https://www.google.com/url?q=https://unsceb.org/personal-data-protection-and-privacy-principles&amp;sa=D&amp;source=editors&amp;ust=1616000621212000&amp;usg=AFQjCNFsW0gNPKHJ08GQWgt2faS6jDLp8A\">https://unsceb.org/personal-data-protection-and-privacy-principles</a>.\r\n    Como titular de la información a suministrar declaro que la misma es totalmente actual, exacta y veraz. Asimismo, reconozco que soy el único responsable de la información falsa, inexacta que suministre.<br />Fui informado que mis derechos como titular\r\n    de los datos suministrados, son los previstos en la Constitución y la Ley 1581 de 2012, y especialmente acceder en forma gratuita a los datos proporcionados, solicitar actualización y rectificación de su información, solicitar prueba de la autorización\r\n    otorgada, revocatoria de la autorización y/o solicitar la supresión del dato (salvo cuando por disposición legal o contractual sea obligatorio conservar la información), presentar ante la Superintendencia de Industria y Comercio quejas por infracciones\r\n    a la normativa vigente.<br />Así mismo, he sido informado sobre el carácter facultativo que tiene el suministro de información sensible o datos de las niñas, niños y adolescentes. Se entiende por datos sensibles aquellos que afectan la intimidad del\r\n    Titular o cuyo uso indebido puede generar su discriminación, tales como aquellos que revelen el origen racial o étnico, la orientación política, las convicciones religiosas o filosóficas, la pertenencia a sindicatos, organizaciones sociales, de derechos\r\n    humanos o que promueva intereses de cualquier partido político o que garanticen los derechos y garantías de partidos políticos de oposición así como los datos relativos a la salud, a la vida sexual y los datos biométricos; y que podré ejercitar, en\r\n    cualquier momento, mis derechos derivados o relacionados con la protección de datos personales (habeas data) a través de los medios y procedimientos indicados en la políticas de protección de datos personales de la Universidad del Norte y de la ONU.<br\r\n    />\r\n    <br />Aclaro que he leído y entendido cada aparte de este documento, y que la suscribo de forma libre y voluntaria una vez leída en su totalidad y que me presento voluntariamente para participar en este estudio. He entendido la información que se\r\n    expone en este consentimiento y me han respondido las dudas e inquietudes surgidas. <br /><br />\r\n</div>\r\n\r\n<div class=\"row\">\r\n    <div class=\"col-md-6\">\r\n        <p>Nombre de la participante:</p>\r\n        <b>{{survey?.surveyed?.name}}</b>\r\n    </div>\r\n    <div class=\"col-md-6\">\r\n        <p>Documento de identificación de la participante</p>\r\n        <b>{{survey?.surveyed?.identification}}</b>\r\n    </div>\r\n</div>\r\n<div class=\"row mt-3\">\r\n    <div class=\"col-md-6\">\r\n        <p>Fecha y Hora</p>\r\n        <b>{{survey?.created_at |  date:'medium'}}</b>\r\n    </div>\r\n\r\n</div>\r\n","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Option } from '@core/data/remote/schemas/option';\r\nimport { Question } from '@core/data/remote/schemas/question';\r\nimport { Section } from '@core/data/remote/schemas/section';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbAccessChecker } from '@nebular/security';\r\nimport { NbLayoutScrollService, NbStepperComponent } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-survey-editor',\r\n  templateUrl: './survey-editor.component.html',\r\n  styleUrls: ['./survey-editor.component.scss']\r\n})\r\nexport class SurveyEditorComponent implements OnInit {\r\n\r\n  public sections: Array<Section> = new Array<Section>();\r\n  public forms: Array<FormGroup> = new Array<FormGroup>();\r\n  public loading: boolean =  false;\r\n  start = false;\r\n  consent;\r\n  public addingOption: boolean =  false;\r\n   constructor(\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder,\r\n    public _accessChecker: NbAccessChecker,\r\n    private _ly: NbLayoutScrollService\r\n\r\n  ) {\r\n\r\n\r\n    this._surveyService.getAllSections().subscribe({\r\n      next: (sections) => {\r\n       this.sections = sections;\r\n       sections.map((section) => {\r\n        const form = _fb.group({});\r\n         section.questions.map(question => {\r\n\r\n          form.addControl( question.id+\"\", new FormControl(question.text, Validators.required));\r\n          question.options.map((option) => {\r\n            if(option.text===\"Otro\"|| option.text===\"Otra\"){\r\n              form.addControl( question.id+\"_OTRO\", new FormControl('', Validators.required));\r\n            }\r\n          })\r\n        });\r\n        this.forms.push(form);\r\n\r\n\r\n       });\r\n       console.log(this.forms);\r\n\r\n\r\n       },\r\n    })\r\n  }\r\n\r\n  addOption(q: Question){\r\n    const opt: Option = {question_id: q.id,text: q.newOpt}  ;\r\n\r\n    this._surveyService.addOption(opt).subscribe({\r\n      next: (opt) => {\r\n        if(opt){\r\n          q.options.push(opt);\r\n          q.newOpt = \"\";\r\n          q.addingOption = false;\r\n        }\r\n\r\n      },\r\n    })\r\n  }\r\n\r\n  updateQuestion(q: Question,index){\r\n\r\n    q.text = this.forms[index].get(q.id+\"\").value\r\n    this._surveyService.updateQuestion(q).subscribe({\r\n      next: (q) => {\r\n        if(q){\r\n          this._surveyService.showToast(\"right\",\"success\",\"Actualizado Correctamente\");\r\n        }\r\n\r\n      },\r\n    })\r\n  }\r\n\r\n  removeOption(opt: Option, question, index){\r\n    this._surveyService.deleteOption(opt).subscribe({\r\n      next: (opt) => {\r\n          if(opt){\r\n            this._surveyService.showToast(\"right\",\"success\",\"Eliminado Correctamente\")\r\n            question.options.splice(index,1);\r\n          }\r\n       },\r\n    })\r\n\r\n\r\n  }\r\n\r\n  toggleAddOption(question){\r\n    question.addingOption = !question.addingOption;\r\n  }\r\n\r\n  onChangeEvent($e, q){\r\n    q.newOpt = $e.target.value\r\n  }\r\n\r\n  ngOnInit(): void {\r\n   //\r\n  }\r\n  @ViewChild('stepper') stepper: NbStepperComponent;\r\n\r\n  scrollToTop(){\r\n    this._ly.scrollTo(0,0);\r\n\r\n\r\n  }\r\n\r\n  trackByFn(index, item) {\r\n    return `${index}-${item?.trackId}`;\r\n  }\r\n\r\n}\r\n","<div class=\"col-md-8 offset-md-2\">\r\n    <nb-card accent=\"info\" status=\"info\">\r\n        <nb-card-header>\r\n            ENCUESTA ONU MUJERES\r\n\r\n        </nb-card-header>\r\n        <nb-card-body>\r\n            <div *ngIf=\"!start\">\r\n                <h4 class=\"text-center\">\r\n                    ENCUESTA DE VOCACIÓN PRODUCTIVA, COMERCIAL Y DE OPORTUNIDADES DE EMPLEO EN MUJERES MIGRANTES Y COMUNIDADES DE ACOGIDA (GRUPO BASE)\r\n                </h4>\r\n                <br />\r\n                <p>\r\n                    Buen día mi nombre es ___ y hago parte del grupo perteneciente al proyecto Acciones para la protección e inclusión para las mujeres en el contexto de los flujos migratorios mixtos procedentes de Venezuela en la costa caribe colombiana. Proyecto realizado\r\n                    por Onu mujeres y la Universidad del Norte, gracias al apoyo financiero de la Oficina para las poblaciones, refugiados y migrantes del departamento de estado norteamericano. Nuestra labor es buscar caminos que permitan o faciliten\r\n                    el encuentro de empleo o el fortalecimiento de negocios ya existentes en las mujeres migrantes y colombianas . Esta encuesta tiene como único objetivo recuperar información que nos permita ayudar o facilitar espacios para que usted\r\n                    pueda aumentar sus probabilidades de inclusión laboral. No somos entidad de control y el único fin de la recolección de los datos es entender sus habilidades y capacidades para el mercado laboral. Es importante su colaboración sincera\r\n                    y estamos muy agradecidos por este espacio.\r\n                </p>\r\n                <br />\r\n                <button nbButton *ngIf=\"!start\" size=\"large\" (click)=\"start= true\">\r\n          EMPEZAR\r\n        </button>\r\n            </div>\r\n\r\n            <nb-stepper #stepper orientation=\"vertical\" *ngIf=\"start\">\r\n                <nb-step [label]=\"CONSENTIMIENTO\">\r\n                    <ng-template #CONSENTIMIENTO>Consentimiento</ng-template>\r\n                    <ngx-seccion1></ngx-seccion1>\r\n\r\n                    Consentimiento informado firma *\r\n\r\n                    <nb-radio-group [(ngModel)]=\"consent\" status=\"success\">\r\n                        <nb-radio value=\"true\"> Sí </nb-radio>\r\n                        <nb-radio value=\"false\"> No </nb-radio>\r\n                    </nb-radio-group>\r\n\r\n                    <div class=\"text-center\">\r\n                        <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>Anterior</button>\r\n                        <button nbButton (click)=\"scrollToTop()\" nbStepperNext [disabled]=\"!consent\">\r\n              Siguiente\r\n            </button>\r\n                    </div>\r\n                </nb-step>\r\n                <nb-step label=\"Sección {{ section.code }}\" *ngFor=\"let section of sections; let i= index; trackBy: trackByFn\">\r\n                    <form [formGroup]=\"forms[i]\">\r\n                        {{ forms[i].value | json }}\r\n                        <h4>\r\n                            <span>{{ section.code }}.</span> {{ section.text }}\r\n                        </h4>\r\n                        <p class=\"lorem\">\r\n                            {{ section.desc }}\r\n                        </p>\r\n                        <br />\r\n                        <div *ngFor=\"let question of section.questions; let j= index; trackBy: trackByFn\">\r\n                            <div class=\"question-text\">\r\n                                <div class=\"flex flex-row\">\r\n                                    <span class=\"text-danger\" *ngIf=\"question.required\">*</span>\r\n                                    <b><span> {{ question.label }} </span>   </b>\r\n                                    <nb-icon (click)=\"updateQuestion(question, i)\" icon=\"save-outline\"></nb-icon>\r\n                                    <input type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"primary\" [formControlName]=\"question.id\" />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div [ngSwitch]=\"question.type\">\r\n                                <div *ngSwitchCase=\"'U'\">\r\n                                    <div class=\"flex flex-row\">\r\n                                        <br>\r\n                                        <input type=\"text\" placeholder=\"Agrega Nueva Opción\" nbInput shape=\"round\" fieldSize=\"small\" status=\"primary\" (change)=\"onChangeEvent($event, question)\" />\r\n                                        <nb-icon (click)=\"addOption(question)\" icon=\"checkmark-outline\"></nb-icon>\r\n                                        <a nbButton size=\"small\" (click)=\"toggleAddOption(question)\"> cancelar </a>\r\n                                    </div>\r\n\r\n                                    <nb-radio-group [name]=\"question.label\">\r\n\r\n                                        <nb-radio class=\"row\" *ngFor=\"let option of question.options; let j= index; trackBy: trackByFn\" value=\"{{ option.value }}\">\r\n                                            <ng-template #elseBlock>\r\n                                                {{ option.text }}\r\n                                            </ng-template>\r\n\r\n                                            <input *ngIf=\"option.text === 'Otro' || option.text === 'Otra'; else elseBlock\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"primary\" nbInput (click)=\"forms[i].get(question.label).setValue(option.value)\" [placeholder]=\"option.text\" />\r\n                                            <nb-icon *ngIf=\"(question.type === 'U' || question.type === 'M') \" (click)=\"removeOption(option, question, j)\" icon=\"close-outline\"></nb-icon>{{question.addOption}}\r\n\r\n                                        </nb-radio>\r\n                                    </nb-radio-group>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'M'\" class=\"col\">\r\n                                    <div class=\"flex flex-row\">\r\n                                        <br>\r\n                                        <input type=\"text\" placeholder=\"Agrega Nueva Opción\" nbInput shape=\"round\" fieldSize=\"small\" status=\"primary\" (change)=\"onChangeEvent($event, question)\" />\r\n                                        <nb-icon (click)=\"addOption(question)\" icon=\"checkmark-outline\"></nb-icon>\r\n                                        <a nbButton size=\"small\" (click)=\"toggleAddOption(question)\"> cancelar </a>\r\n                                    </div>\r\n                                    <nb-checkbox class=\"row\" *ngFor=\"let option of question.options;\r\n                                  let j= index;\r\n                                  trackBy: trackByFn\" value=\"option.value\">{{ option.text }}</nb-checkbox>\r\n                                </div>\r\n                                <div *ngSwitchCase=\"'S'\">\r\n                                    <nb-radio-group>\r\n                                        <nb-radio value=\"1\"> Sí </nb-radio>\r\n                                        <nb-radio value=\"2\"> No </nb-radio>\r\n                                    </nb-radio-group>\r\n                                </div>\r\n                            </div>\r\n                            <br />\r\n                        </div>\r\n                        <div class=\"text-center\">\r\n                            <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>Anterior</button>\r\n                            <button nbButton (click)=\"scrollToTop()\" nbStepperNext>Siguiente</button>\r\n                        </div>\r\n                    </form>\r\n                </nb-step>\r\n            </nb-stepper>\r\n        </nb-card-body>\r\n        <nb-card-footer> </nb-card-footer>\r\n    </nb-card>\r\n</div>","import { HttpEventType } from '@angular/common/http';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { FormGroup, FormBuilder, FormControl, Validators } from '@angular/forms';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Survey } from '@core/data/remote/schemas/survey';\r\nimport { User } from '@core/data/remote/schemas/users';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport {  NbLayoutScrollService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-survey-gateway',\r\n  templateUrl: './survey-gateway.component.html',\r\n  styleUrls: ['./survey-gateway.component.scss']\r\n})\r\nexport class SurveyGatewayComponent implements OnInit {\r\n  @Output() start = new EventEmitter<boolean>();\r\n  survey: Survey;\r\n  public form: FormGroup;\r\n  public pollster_id: any;\r\n  population_id: string;\r\n\r\n  consent;\r\n  survey_id: any;\r\n  loading: boolean;\r\n  state: string;\r\n  pollster: User;\r\n  message: string;\r\n  error: boolean = false;\r\n\r\n\r\n\r\n  constructor(\r\n    private _route:ActivatedRoute,\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder,\r\n    private _router: Router ,\r\n\r\n         private _ly: NbLayoutScrollService\r\n  ) {\r\n    this.start.emit(false);\r\n   }\r\n  myDate = new Date();\r\n\r\n  ngOnInit(): void {\r\n    this.form = this._fb.group({});\r\n    this.form.addControl( \"complete_name\", new FormControl('', Validators.required));\r\n    this.form.addControl( \"doc\", new FormControl('',Validators.required));\r\n    this.form.addControl( \"start_date\", new FormControl(this.myDate, Validators.required));\r\n    this.pollster_id = this._route.snapshot.paramMap.get(\"pollster_id\");\r\n    this.population_id = this._route.snapshot.paramMap.get(\"population_id\");\r\n\r\n    this._surveyService.getSingleUser( this.pollster_id )\r\n    .subscribe({\r\n      next: (user) => {\r\n        this.pollster = user;\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      //submit session\r\n      const formData = this._surveyService.toFormData(this.form.value);\r\n      formData.append(\"pollster_id\", this.pollster_id+\"\");\r\n      formData.append(\"population_id\", this.population_id+\"\");\r\n      formData.append(\"section_id\", \"0\");\r\n      this.loading = true;\r\n      this._surveyService.createOrGetSurvey(formData)\r\n      .subscribe({\r\n        next: (event => {\r\n\r\n            if ( event.type === HttpEventType.Response) {\r\n              if(event.body.type == 4 || event.body.type  == 3){\r\n                this._surveyService.showToast('top rigth', 'success', 'Bienvenida a la Encuesta');\r\n                this.survey = event.body.survey;\r\n                this.start.emit(true);\r\n                this._router.navigate([\"encuesta\",1,this.population_id,this.pollster_id,this.survey.uuid]);\r\n              }\r\n\r\n              this.loading = false;\r\n              //0: no esta en base de datos\r\n              //1: nombre no coincide con base de datos\r\n              //2: encuesta por terminar\r\n              //3: encuesta terminada.\r\n              //4: nueva encuesta\r\n\r\n\r\n\r\n          this.error = true;\r\n          if(event.body.type == 0){\r\n            this.message = \"Actualmente usted no se encuentra registrada en la base de datos.\"              }\r\n          if(event.body.type == 1){\r\n            this.message = \"Uno de los datos proporcionados no es correcto, por favor intente nuevamente.\"\r\n\r\n          }\r\n          if(event.body.type == 2){\r\n            this.message = \"Usted ya realizó esta encuesta, gracias por participar.\"\r\n          }\r\n\r\n\r\n            }\r\n\r\n\r\n\r\n        }),\r\n        error: (error => {\r\n          this._surveyService.showToast('top rigth', 'danger', error);\r\n          this.loading = false;\r\n          this.error = true;\r\n          this.message =error.message;\r\n        }),\r\n      });\r\n\r\n    //  this.stepper.next();\r\n\r\n    }else{\r\n      // this.validateAllFormFields(form); //{7}\r\n      //this.stepper.next();\r\n    }\r\n  }\r\n\r\n  scrollToTop(){\r\n    this._ly.scrollTo(0,0);\r\n\r\n\r\n  }\r\n\r\n}\r\n","<nb-card accent=\"primary\" status=\"info\">\r\n    <nb-card-header> ENCUESTA ONU MUJERES </nb-card-header>\r\n    <nb-card-body id=\"body\">\r\n        <div class=\"col-md-8 offset-md-2\">\r\n            <div>\r\n                <h4 class=\"text-center\">\r\n                    ENCUESTA DE VOCACIÓN PRODUCTIVA, COMERCIAL Y DE OPORTUNIDADES DE EMPLEO EN MUJERES MIGRANTES Y COMUNIDADES DE ACOGIDA (GRUPO BASE)\r\n                </h4>\r\n                <br />\r\n                <p class=\"text-justify\">\r\n                    Buen día mi nombre es <b>{{pollster?.name}}</b> y hago parte del grupo perteneciente al proyecto Acciones para la protección e inclusión para las mujeres en el contexto de los flujos migratorios mixtos procedentes de Venezuela en la\r\n                    costa caribe colombiana. Proyecto realizado por Onu mujeres y la Universidad del Norte, gracias al apoyo financiero de la Oficina para las poblaciones, refugiados y migrantes del departamento de estado norteamericano. Nuestra labor\r\n                    es buscar caminos que permitan o faciliten el encuentro de empleo o el fortalecimiento de negocios ya existentes en las mujeres migrantes y colombianas . Esta encuesta tiene como único objetivo recuperar información que nos permita\r\n                    ayudar o facilitar espacios para que usted pueda aumentar sus probabilidades de inclusión laboral. No somos entidad de control y el único fin de la recolección de los datos es entender sus habilidades y capacidades para el mercado\r\n                    laboral. Es importante su colaboración sincera y estamos muy agradecidos por este espacio.\r\n                </p>\r\n                <br />\r\n\r\n                <form class=\"mt-3  \" [formGroup]=\"form\" aria-labelledby=\"title\">\r\n                    <nb-card>\r\n                        <nb-card-header>\r\n                            Para iniciar la encuesta, por favor digite los siguientes datos y de clic en \"Empezar\"\r\n\r\n                        </nb-card-header>\r\n                        <nb-card-body>\r\n                            <div class=\"mt-4\" *ngIf=\"error\">\r\n\r\n                                <nb-card style=\"background-color: honeydew;\" class=\"p-4 text-center\">\r\n                                    <b class=\"label text-danger\">* {{message}}</b>\r\n                                </nb-card>\r\n                            </div>\r\n\r\n                            <div>\r\n\r\n                                <br/>\r\n\r\n                                <div class=\"row\">\r\n                                    <div class=\"col-sm-6 form-group \">\r\n                                        <label class=\"label col-form-label\" for=\"name\">Nombre de la participante</label>\r\n                                        <input name=\"name\" type=\"text\" nbInput fullWidth status=\"info\" placeholder=\"Nombre\" formControlName=\"complete_name\">\r\n                                    </div>\r\n                                    <div class=\"col-sm-6 form-group \">\r\n                                        <label class=\"label col-form-label\" for=\"doc\">Número de Documento de Identidad</label>\r\n                                        <input name=\"doc\" type=\"text\" nbInput fullWidth status=\"info\" placeholder=\"Documento\" formControlName=\"doc\">\r\n                                    </div>\r\n                                </div>\r\n\r\n                                <div>\r\n\r\n\r\n                                    <div class=\"text-center\">\r\n                                        <button nbButton (click)=\"onSubmit()\" [disabled]=\"!form.valid\">\r\n                                  EMPEZAR\r\n\r\n                                </button>\r\n\r\n\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                        </nb-card-body>\r\n                        <nb-card-footer>\r\n                            <p class=\"caption text-right\"> Fecha y Hora: {{ form.get('start_date').value | date:'medium'}}</p>\r\n                        </nb-card-footer>\r\n\r\n                    </nb-card>\r\n\r\n\r\n                </form>\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n</nb-card>"],"names":[],"sourceRoot":"webpack:///"}