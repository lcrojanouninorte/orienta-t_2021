{"version":3,"file":"src_app_pages_dashboard_dashboard_module_ts-es2015.js","mappings":";;;;;;;;;;;;;;;;;;;;AAAsC;AACK;AACP;AACmG;;AAEvI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACwC;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,kBAAkB;AACrD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAiD,4BAA4B,sDAAe,CAAC,qDAAQ;AACrG,kBAAkB,gEAAqB,GAAG,wCAAwC,qBAAqB,sDAAW,CAAC,qDAAW,KAAK,wCAAwC;AAC3K;AACA,MAAM,gCAAgC,MAAM,iDAAM,SAAS,qDAAQ,IAAI;AACvE;AACA,eAAe,mDAAmD,+DAAwB;AAC1F,cAAc,qDAAU;AACxB,iBAAiB,oBAAoB;AACrC,KAAK,iBAAiB,UAAU;AAChC,sBAAsB,iDAAM;AAC5B,uBAAuB,qDAAQ;AAC/B,aAAa,GAAG,IAAI,UAAU;;AAE9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,yDAAc;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,uDAAY;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;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","sources":["./node_modules/@angular/cdk/__ivy_ngcc__/fesm2015/clipboard.js","./node_modules/ng2-search-filter/__ivy_ngcc__/ng2-search-filter.js","./src/app/@shared/pdf-templates/obs-map/obs-map.component.ts","./src/app/@shared/pdf-templates/obs-map/obs-map.component.html","./src/app/@shared/pipes/surveys-filter.pipe.ts","./src/app/@shared/shared.module.ts","./src/app/pages/dashboard/dashboard.component.ts","./src/app/pages/dashboard/dashboard.component.html","./src/app/pages/dashboard/dashboard.module.ts","./src/app/pages/dashboard/population-add/population-add.component.ts","./src/app/pages/dashboard/population-add/population-add.component.html","./src/app/pages/dashboard/population-view/population-view.component.ts","./src/app/pages/dashboard/population-view/population-view.component.html","./src/app/pages/dashboard/populations-list/populations-list.component.ts","./src/app/pages/dashboard/populations-list/populations-list.component.html","./src/app/pages/dashboard/surveyed-add/surveyed-add.component.ts","./src/app/pages/dashboard/surveyed-add/surveyed-add.component.html","./src/app/pages/dashboard/surveys-table/surveys-table.component.ts","./src/app/pages/dashboard/surveys-table/surveys-table.component.html"],"sourcesContent":["import * as i1 from '@angular/common';\nimport { DOCUMENT } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { Injectable, Inject, InjectionToken, EventEmitter, Directive, NgZone, Optional, Input, Output, NgModule } from '@angular/core';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pending copy-to-clipboard operation.\n *\n * The implementation of copying text to the clipboard modifies the DOM and\n * forces a relayout. This relayout can take too long if the string is large,\n * causing the execCommand('copy') to happen too long after the user clicked.\n * This results in the browser refusing to copy. This object lets the\n * relayout happen in a separate tick from copying by providing a copy function\n * that can be called later.\n *\n * Destroy must be called when no longer in use, regardless of whether `copy` is\n * called.\n */\nimport * as ɵngcc0 from '@angular/core';\nclass PendingCopy {\n    constructor(text, _document) {\n        this._document = _document;\n        const textarea = this._textarea = this._document.createElement('textarea');\n        const styles = textarea.style;\n        // Hide the element for display and accessibility. Set a fixed position so the page layout\n        // isn't affected. We use `fixed` with `top: 0`, because focus is moved into the textarea\n        // for a split second and if it's off-screen, some browsers will attempt to scroll it into view.\n        styles.position = 'fixed';\n        styles.top = styles.opacity = '0';\n        styles.left = '-999em';\n        textarea.setAttribute('aria-hidden', 'true');\n        textarea.value = text;\n        this._document.body.appendChild(textarea);\n    }\n    /** Finishes copying the text. */\n    copy() {\n        const textarea = this._textarea;\n        let successful = false;\n        try { // Older browsers could throw if copy is not supported.\n            if (textarea) {\n                const currentFocus = this._document.activeElement;\n                textarea.select();\n                textarea.setSelectionRange(0, textarea.value.length);\n                successful = this._document.execCommand('copy');\n                if (currentFocus) {\n                    currentFocus.focus();\n                }\n            }\n        }\n        catch (_a) {\n            // Discard error.\n            // Initial setting of {@code successful} will represent failure here.\n        }\n        return successful;\n    }\n    /** Cleans up DOM changes used to perform the copy operation. */\n    destroy() {\n        const textarea = this._textarea;\n        if (textarea) {\n            if (textarea.parentNode) {\n                textarea.parentNode.removeChild(textarea);\n            }\n            this._textarea = undefined;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A service for copying text to the clipboard.\n */\nclass Clipboard {\n    constructor(document) {\n        this._document = document;\n    }\n    /**\n     * Copies the provided text into the user's clipboard.\n     *\n     * @param text The string to copy.\n     * @returns Whether the operation was successful.\n     */\n    copy(text) {\n        const pendingCopy = this.beginCopy(text);\n        const successful = pendingCopy.copy();\n        pendingCopy.destroy();\n        return successful;\n    }\n    /**\n     * Prepares a string to be copied later. This is useful for large strings\n     * which take too long to successfully render and be copied in the same tick.\n     *\n     * The caller must call `destroy` on the returned `PendingCopy`.\n     *\n     * @param text The string to copy.\n     * @returns the pending copy operation.\n     */\n    beginCopy(text) {\n        return new PendingCopy(text, this._document);\n    }\n}\nClipboard.ɵfac = function Clipboard_Factory(t) { return new (t || Clipboard)(ɵngcc0.ɵɵinject(DOCUMENT)); };\nClipboard.ɵprov = i0.ɵɵdefineInjectable({ factory: function Clipboard_Factory() { return new Clipboard(i0.ɵɵinject(i1.DOCUMENT)); }, token: Clipboard, providedIn: \"root\" });\nClipboard.ctorParameters = () => [\n    { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] }] }\n];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Clipboard, [{\n        type: Injectable,\n        args: [{ providedIn: 'root' }]\n    }], function () { return [{ type: undefined, decorators: [{\n                type: Inject,\n                args: [DOCUMENT]\n            }] }]; }, null); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/** Injection token that can be used to provide the default options to `CdkCopyToClipboard`. */\nconst CDK_COPY_TO_CLIPBOARD_CONFIG = new InjectionToken('CDK_COPY_TO_CLIPBOARD_CONFIG');\n/**\n * @deprecated Use `CDK_COPY_TO_CLIPBOARD_CONFIG` instead.\n * @breaking-change 13.0.0\n */\nconst CKD_COPY_TO_CLIPBOARD_CONFIG = CDK_COPY_TO_CLIPBOARD_CONFIG;\n/**\n * Provides behavior for a button that when clicked copies content into user's\n * clipboard.\n */\nclass CdkCopyToClipboard {\n    constructor(_clipboard, _ngZone, config) {\n        this._clipboard = _clipboard;\n        this._ngZone = _ngZone;\n        /** Content to be copied. */\n        this.text = '';\n        /**\n         * How many times to attempt to copy the text. This may be necessary for longer text, because\n         * the browser needs time to fill an intermediate textarea element and copy the content.\n         */\n        this.attempts = 1;\n        /**\n         * Emits when some text is copied to the clipboard. The\n         * emitted value indicates whether copying was successful.\n         */\n        this.copied = new EventEmitter();\n        /** Copies that are currently being attempted. */\n        this._pending = new Set();\n        if (config && config.attempts != null) {\n            this.attempts = config.attempts;\n        }\n    }\n    /** Copies the current text to the clipboard. */\n    copy(attempts = this.attempts) {\n        if (attempts > 1) {\n            let remainingAttempts = attempts;\n            const pending = this._clipboard.beginCopy(this.text);\n            this._pending.add(pending);\n            const attempt = () => {\n                const successful = pending.copy();\n                if (!successful && --remainingAttempts && !this._destroyed) {\n                    // We use 1 for the timeout since it's more predictable when flushing in unit tests.\n                    this._currentTimeout = this._ngZone.runOutsideAngular(() => setTimeout(attempt, 1));\n                }\n                else {\n                    this._currentTimeout = null;\n                    this._pending.delete(pending);\n                    pending.destroy();\n                    this.copied.emit(successful);\n                }\n            };\n            attempt();\n        }\n        else {\n            this.copied.emit(this._clipboard.copy(this.text));\n        }\n    }\n    ngOnDestroy() {\n        if (this._currentTimeout) {\n            clearTimeout(this._currentTimeout);\n        }\n        this._pending.forEach(copy => copy.destroy());\n        this._pending.clear();\n        this._destroyed = true;\n    }\n}\nCdkCopyToClipboard.ɵfac = function CdkCopyToClipboard_Factory(t) { return new (t || CdkCopyToClipboard)(ɵngcc0.ɵɵdirectiveInject(Clipboard), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(CKD_COPY_TO_CLIPBOARD_CONFIG, 8)); };\nCdkCopyToClipboard.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: CdkCopyToClipboard, selectors: [[\"\", \"cdkCopyToClipboard\", \"\"]], hostBindings: function CdkCopyToClipboard_HostBindings(rf, ctx) { if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"click\", function CdkCopyToClipboard_click_HostBindingHandler() { return ctx.copy(); });\n    } }, inputs: { text: [\"cdkCopyToClipboard\", \"text\"], attempts: [\"cdkCopyToClipboardAttempts\", \"attempts\"] }, outputs: { copied: \"cdkCopyToClipboardCopied\" } });\nCdkCopyToClipboard.ctorParameters = () => [\n    { type: Clipboard },\n    { type: NgZone },\n    { type: undefined, decorators: [{ type: Optional }, { type: Inject, args: [CKD_COPY_TO_CLIPBOARD_CONFIG,] }] }\n];\nCdkCopyToClipboard.propDecorators = {\n    text: [{ type: Input, args: ['cdkCopyToClipboard',] }],\n    attempts: [{ type: Input, args: ['cdkCopyToClipboardAttempts',] }],\n    copied: [{ type: Output, args: ['cdkCopyToClipboardCopied',] }]\n};\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CdkCopyToClipboard, [{\n        type: Directive,\n        args: [{\n                selector: '[cdkCopyToClipboard]',\n                host: {\n                    '(click)': 'copy()'\n                }\n            }]\n    }], function () { return [{ type: Clipboard }, { type: ɵngcc0.NgZone }, { type: undefined, decorators: [{\n                type: Optional\n            }, {\n                type: Inject,\n                args: [CKD_COPY_TO_CLIPBOARD_CONFIG]\n            }] }]; }, { text: [{\n            type: Input,\n            args: ['cdkCopyToClipboard']\n        }], attempts: [{\n            type: Input,\n            args: ['cdkCopyToClipboardAttempts']\n        }], copied: [{\n            type: Output,\n            args: ['cdkCopyToClipboardCopied']\n        }] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ClipboardModule {\n}\nClipboardModule.ɵfac = function ClipboardModule_Factory(t) { return new (t || ClipboardModule)(); };\nClipboardModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: ClipboardModule });\nClipboardModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClipboardModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [CdkCopyToClipboard],\n                exports: [CdkCopyToClipboard]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(ClipboardModule, { declarations: [CdkCopyToClipboard], exports: [CdkCopyToClipboard] }); })();\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { CDK_COPY_TO_CLIPBOARD_CONFIG, CKD_COPY_TO_CLIPBOARD_CONFIG, CdkCopyToClipboard, Clipboard, ClipboardModule, PendingCopy };\n\n","import { Injectable, NgModule, Pipe } from '@angular/core';\n\nimport * as ɵngcc0 from '@angular/core';\nclass Ng2SearchPipe {\n    /**\n     * @param {?} items object from array\n     * @param {?} term term's search\n     * @return {?}\n     */\n    transform(items, term) {\n        if (!term || !items)\n            return items;\n        return Ng2SearchPipe.filter(items, term);\n    }\n    /**\n     *\n     * @param {?} items List of items to filter\n     * @param {?} term  a string term to compare with every property of the list\n     *\n     * @return {?}\n     */\n    static filter(items, term) {\n        const /** @type {?} */ toCompare = term.toLowerCase();\n        /**\n         * @param {?} item\n         * @param {?} term\n         * @return {?}\n         */\n        function checkInside(item, term) {\n            for (let /** @type {?} */ property in item) {\n                if (item[property] === null || item[property] == undefined) {\n                    continue;\n                }\n                if (typeof item[property] === 'object') {\n                    if (checkInside(item[property], term)) {\n                        return true;\n                    }\n                }\n                if (item[property].toString().toLowerCase().includes(toCompare)) {\n                    return true;\n                }\n            }\n            return false;\n        }\n        return items.filter(function (item) {\n            return checkInside(item, term);\n        });\n    }\n}\nNg2SearchPipe.ɵfac = function Ng2SearchPipe_Factory(t) { return new (t || Ng2SearchPipe)(); };\nNg2SearchPipe.ɵpipe = /*@__PURE__*/ ɵngcc0.ɵɵdefinePipe({ name: \"filter\", type: Ng2SearchPipe, pure: false });\nNg2SearchPipe.ɵprov = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjectable({ token: Ng2SearchPipe, factory: Ng2SearchPipe.ɵfac });\n/**\n * @nocollapse\n */\nNg2SearchPipe.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipe, [{\n        type: Pipe,\n        args: [{\n                name: 'filter',\n                pure: false\n            }]\n    }, {\n        type: Injectable\n    }], null, null); })();\n\nclass Ng2SearchPipeModule {\n}\nNg2SearchPipeModule.ɵfac = function Ng2SearchPipeModule_Factory(t) { return new (t || Ng2SearchPipeModule)(); };\nNg2SearchPipeModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: Ng2SearchPipeModule });\nNg2SearchPipeModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({});\n/**\n * @nocollapse\n */\nNg2SearchPipeModule.ctorParameters = () => [];\n(function () { (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(Ng2SearchPipeModule, [{\n        type: NgModule,\n        args: [{\n                declarations: [Ng2SearchPipe],\n                exports: [Ng2SearchPipe]\n            }]\n    }], null, null); })();\n(function () { (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(Ng2SearchPipeModule, { declarations: [Ng2SearchPipe], exports: [Ng2SearchPipe] }); })();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Ng2SearchPipeModule, Ng2SearchPipe };\n\n","import { Component, OnInit, Input } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'ngx-obs-map',\r\n  templateUrl: './obs-map.component.html',\r\n  styleUrls: ['./obs-map.component.scss'],\r\n})\r\nexport class ObsMapComponent implements OnInit {\r\n  @Input() gl_map: any;\r\n  date: any;\r\n  constructor(\r\n\r\n  ) { }\r\n  ngOnInit(): void {\r\n  }\r\n  getDate() {\r\n   return new Date().toISOString();\r\n  }\r\n\r\n  getMapImg() {\r\n    const imgCanvas = this.gl_map.getCanvas().toDataURL('image/PNG');\r\n  }\r\n}\r\n","<!-- Define header and footer blocks before your content -->\r\n<header>\r\n    <div class=\"d-flex justify-content-between mb-5\">\r\n        <img class=\" d-flex mt-2 ml-5 align-self-strech\" src=\"assets/img/logo.jpg\" width=\"150\" alt=\"OBS\">\r\n        <img class=\"d-flex mt-1 mr-5 align-self-center\" src=\"assets/img/LogoUninorte.png\" width=\"150\" alt=\"uninorte\">\r\n    </div>\r\n</header>\r\n\r\n\r\n<main class=\"container mt-5\">\r\n    <div class=\"d-flex flex-column justify-content-center\">\r\n        <h2 class=\"text-center align-self-center mb-2\"> Observatorio del Río Magdalena</h2>\r\n        <h4 class=\"text-center align-self-center mb-2\"> Universidad del norte</h4>\r\n\r\n        <h6 class=\"text-center align-self-center mb-4\">Fecha del reporte:\r\n            <?php echo date(\"Y-m-d, H:m:s A\");?>\r\n        </h6>\r\n    </div>\r\n    <div class=\" d-flex justify-content-center mb-5\">\r\n        <div class=\" d-flex justify-content-center  shadow-sm\">\r\n            <div class=\" align-self-center\">\r\n                <img [src]=\"getMapImg()\" width=\"200\" alt=\"ubicación\">\r\n            </div>\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n\r\n</main>\r\n<footer>\r\n    Observatorio del Río Magdalena - Universidad del Norte Copyright &copy;\r\n    <p [innerHTML]=\"getDate()\"></p>\r\n</footer>","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { Survey } from '@core/data/remote/schemas/survey';\r\n\r\n@Pipe({\r\n  name: 'surveysFilter'\r\n})\r\nexport class SurveysFilterPipe implements PipeTransform {\r\n\r\n  transform(surveys: Survey[], filter: any): any {\r\n    if (!surveys || !filter) {\r\n        return surveys;\r\n    }\r\n    // filter items array, items which match and return true will be\r\n    // kept, false will be filtered out\r\n    return surveys.filter(survey => survey.surveyed.name.indexOf(filter.name) !== -1);\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NbAutocompleteModule, NbInputModule, NbCardModule, NbSelectModule, } from '@nebular/theme';\r\nimport { ObsMapComponent } from './pdf-templates/obs-map/obs-map.component';\r\nimport { SurveysFilterPipe } from './pipes/surveys-filter.pipe';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    NbAutocompleteModule,\r\n    NbInputModule,\r\n    NbCardModule,\r\n    NbSelectModule,\r\n\r\n  ],\r\n  declarations: [  ObsMapComponent, SurveysFilterPipe ],\r\n  exports:      [ ObsMapComponent,\r\n                 CommonModule,SurveysFilterPipe ]\r\n})\r\nexport class SharedModule { }\r\n","import { Component, ElementRef, Inject, ViewChild } from '@angular/core';\r\nimport { Population } from '@core/data/remote/schemas/population';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbDialogService } from '@nebular/theme';\r\nimport { User } from '../../@core/data/remote/schemas/users';\r\nimport { AuthService } from '../../@core/data/remote/services/auth.service';\r\nimport { PopulationAddComponent } from './population-add/population-add.component';\r\nimport { Clipboard } from '@angular/cdk/clipboard'\r\nimport { NbAccessChecker } from '@nebular/security';\r\n\r\n@Component({\r\n  selector: 'ngx-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n})\r\n\r\nexport class DashboardComponent {\r\n  public user:  User = null;\r\n  populations: Population[];\r\n  origin: string = window.location.origin;\r\n  active_population: Population = null;\r\n  loading: boolean;\r\n  surveys: any;\r\n  surveys_all: any;\r\n\r\n  constructor(\r\n    private clipboard: Clipboard,\r\n    public _accessChecker: NbAccessChecker,\r\n\r\n    private _authService: AuthService,\r\n    private _surveyService: SurveyService,\r\n    ) {\r\n   _authService.getCurrentUser().subscribe(\r\n     (user) => {\r\n       this.user = user;\r\n        this.getActivePopulations();\r\n        this.getSurveys();\r\n        if(_accessChecker.isGranted('Register Admin', 'all')){\r\n          this.getSurveys_all();\r\n        }\r\n  }\r\n   );\r\n\r\n  }\r\n  @ViewChild('link')  link_container: ElementRef;\r\n  getActivePopulations(){\r\n    this._surveyService.getPopulations().subscribe({\r\n      next: (populations: Array<Population>) => {\r\n        this.populations = populations;\r\n        this.populations.map((pop:Population)=>{\r\n            if(pop.active){\r\n              this.active_population = pop;\r\n            }\r\n        })\r\n      }\r\n    });\r\n  }\r\n  getSurveys(){\r\n\r\n    this.loading = true;\r\n    this._surveyService.getSurveys(this.user.id+\"\").subscribe({\r\n      next: (surveys: any) => {\r\n        this.surveys = surveys;\r\n        this.loading = false;\r\n\r\n\r\n       },\r\n    })\r\n  }\r\n  getSurveys_all(){\r\n\r\n    this.loading = true;\r\n    this._surveyService.getSurveys(\"all\").subscribe({\r\n      next: (surveys_all: any) => {\r\n        this.surveys_all = surveys_all;\r\n        this.loading = false;\r\n\r\n\r\n       },\r\n    })\r\n  }\r\n  onActivate($event){\r\n    this.getActivePopulations();\r\n    this.getSurveys();\r\n    if(this._accessChecker.isGranted('Register Admin', 'all')){\r\n      this.getSurveys_all();\r\n    }\r\n  }\r\n\r\n\r\n  copyToClipBoard(){\r\n    this.clipboard.copy(this.origin+'/#/encuesta/'+this.active_population.id+'/'+this.user.id);\r\n    alert(`Enlace copiado`)\r\n\r\n  }\r\n}\r\n","<div class=\"container\">\r\n    <div class=\"row\">\r\n        <div class=\"col-md-5\">\r\n\r\n            <div style=\"width: 100%\" *ngIf=\"_accessChecker.isGranted('Register Admin', 'all') | async\">\r\n                <ngx-populations-list (onActivate)=\"onActivate($event)\"></ngx-populations-list>\r\n            </div>\r\n            <nb-card style=\"width: 100%\">\r\n                <nb-card-body>\r\n                    <div>\r\n                        <h2>Hola {{ user.name }},</h2>\r\n                        <div>\r\n                            <p></p>\r\n                            <b>Instrucción*:</b>\r\n                            <p></p>\r\n                            <p> Utilice este link para realizar la encuesta. </p>\r\n\r\n                            <div *ngIf=\"active_population; else elseBlock\">\r\n                                <mark>\r\n                                  <b>\r\n                                    Enlace de Encuesta:\r\n                                    <a href=\"#/encuesta/{{ active_population?.id }}/{{\r\n                                        user.id\r\n                                      }}\" target=\"_blank\">\r\n                                      <b class=\"text-info\">{{ origin }}/#/encuesta/{{ active_population?.id }}/{{\r\n                                        user.id\r\n                                        }}</b></a>\r\n                              </b>\r\n                              </mark>\r\n                                <p></p>\r\n                                <div class=\"mt-2\">\r\n                                    <button nbButton size=\"small\" status=\"info\" (click)=\"copyToClipBoard()\">\r\n                                <nb-icon icon=\"copy-outline\"></nb-icon> Copiar Enlace\r\n                              </button>\r\n                                </div>\r\n\r\n                            </div>\r\n                        </div>\r\n                        <ng-template #elseBlock>\r\n                            <div class=\"dflex flex-column justify-content-center\">\r\n                                <p>Actualmente no hay campañas activas.</p>\r\n                            </div>\r\n                        </ng-template>\r\n                    </div>\r\n\r\n                </nb-card-body>\r\n                <nb-card-footer class=\"text-right color-info\">\r\n                    <b> Campaña Activa: {{ active_population?.name }} </b>\r\n                </nb-card-footer>\r\n            </nb-card>\r\n\r\n        </div>\r\n        <div class=\"col-md-7\">\r\n            <div class=\"row\" *ngIf=\"_accessChecker.isGranted('Register Admin', 'all') | async\">\r\n\r\n                <div class=\"col-sm-12\">\r\n\r\n\r\n\r\n\r\n                    <ngx-surveys-table [title]=\"'Todas las encuestas'\" [surveys]=\"surveys_all\" [user]=\"user\"> </ngx-surveys-table>\r\n\r\n\r\n                </div>\r\n            </div>\r\n            <ngx-surveys-table [title]=\"'Mis Encuestas'\" [surveys]=\"surveys\" [user]=\"user\"> </ngx-surveys-table>\r\n        </div>\r\n    </div>\r\n\r\n\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { NbActionsModule, NbButtonModule, NbCardModule, NbDialogModule, NbFormFieldModule, NbIconModule, NbInputModule, NbListModule, NbProgressBarModule, NbSpinnerModule, NbUserModule } from '@nebular/theme';\r\n\r\nimport { ThemeModule } from '../../@theme/theme.module';\r\nimport { DashboardComponent } from './dashboard.component';\r\nimport { NbSecurityModule } from '@nebular/security';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SurveysTableComponent } from './surveys-table/surveys-table.component';\r\nimport { PopulationAddComponent } from './population-add/population-add.component';\r\nimport { NgxDropzoneModule } from 'ngx-dropzone';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { PopulationViewComponent } from './population-view/population-view.component';\r\nimport { SurveyedAddComponent } from './surveyed-add/surveyed-add.component';\r\nimport { ClipboardModule } from '@angular/cdk/clipboard';\r\nimport { PopulationsListComponent } from './populations-list/populations-list.component'\r\nimport { SweetAlert2Module } from '@sweetalert2/ngx-sweetalert2';\r\nimport { SharedModule } from 'app/@shared/shared.module';\r\nimport { Ng2SearchPipeModule } from 'ng2-search-filter';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: DashboardComponent,\r\n  },\r\n  {\r\n    path: 'audience/:population_id',\r\n    component: PopulationViewComponent,\r\n  },\r\n  {\r\n    path: 'encuesta/:id',\r\n    loadChildren: 'app/pages/onu-mujeres/onu-mujeres-routing.module#OnuMujeresRoutingModule'\r\n  },\r\n\r\n];\r\n@NgModule({\r\n  imports: [\r\n    NbCardModule,\r\n    ThemeModule,\r\n    NbIconModule,\r\n    NbSecurityModule,\r\n    NbListModule,\r\n    NbCardModule,\r\n    NbActionsModule,\r\n    NbInputModule,\r\n    NbButtonModule,\r\n    NbSpinnerModule,\r\n    NbDialogModule.forChild(),\r\n    NgxDropzoneModule,\r\n    NbProgressBarModule,\r\n    ReactiveFormsModule,\r\n    FormsModule,\r\n    ClipboardModule,\r\n    RouterModule.forChild(routes),\r\n    SweetAlert2Module,\r\n    NbUserModule,\r\n    NbFormFieldModule,\r\n    SharedModule,\r\n    Ng2SearchPipeModule\r\n  ],\r\n  exports: [\r\n    RouterModule\r\n  ],\r\n  declarations: [\r\n    DashboardComponent,\r\n    SurveysTableComponent,\r\n    PopulationAddComponent,\r\n    PopulationViewComponent,\r\n    SurveyedAddComponent,\r\n    PopulationsListComponent,\r\n  ],\r\n})\r\n\r\nexport class DashboardModule { }\r\n","import { HttpEventType } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Population } from '@core/data/remote/schemas/population';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbDialogRef } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-population-add',\r\n  templateUrl: './population-add.component.html',\r\n  styleUrls: ['./population-add.component.scss']\r\n})\r\nexport class PopulationAddComponent implements OnInit {\r\n  public files: Array<File> = [];\r\n  loading: boolean;\r\n  public form: FormGroup;\r\n   progress: number = 0;\r\n  error: boolean;\r\n  message: string;\r\n\r\n  constructor(\r\n    private _dialog: NbDialogRef<PopulationAddComponent>,\r\n    private _surveyService: SurveyService,\r\n    private _fb: FormBuilder\r\n    ) {\r\n        this.form = this._fb.group({});\r\n        this.form.addControl( \"name\", new FormControl('', Validators.required));\r\n    }\r\n\r\n  ngOnInit(): void {\r\n\r\n  }\r\n  onSelect(event) {\r\n    this.files.push(...event.addedFiles);\r\n  }\r\n  onRemove(event) {\r\n    this.files.splice(this.files.indexOf(event), 1);\r\n  }\r\n\r\n  onSubmit(){\r\n    if(this.form.valid){\r\n      //submit session\r\n      this.loading = true;\r\n      const formData = this._surveyService.toFormData(this.form.value);\r\n      if (this.files.length > 0) {\r\n        formData.append('file', this.files[0]);\r\n      }\r\n      this._surveyService.addPopulation(formData)\r\n      .subscribe({\r\n        next: (event => {\r\n            if ( event.type === HttpEventType.UploadProgress ) {\r\n              this.progress = Math.round((100 * event.loaded) / event.total);\r\n            }\r\n            if ( event.type === HttpEventType.Response) {\r\n              if(event.body.type == 1 ){\r\n                this._surveyService.showToast('top rigth', 'success', 'Agregado Correctamente');\r\n                this._dialog.close( new Population().deserialize(event.body.population)  );\r\n\r\n              }\r\n\r\n\r\n              //0: no esta en base de datos\r\n              //1: nombre no coincide con base de datos\r\n              //2: encuesta por terminar\r\n              //3: encuesta terminada.\r\n              //4: nueva encuesta\r\n\r\n\r\n                if(event.body.type == 2){\r\n                  this.message = \"Población no fue creada\"\r\n                }\r\n                this.progress = 0;\r\n                this.loading = false;\r\n                this.error = true;\r\n            }\r\n        }),\r\n        error: (error => {\r\n          this._surveyService.showToast('top rigth', 'danger', error);\r\n          this.loading = false;\r\n          this.error = true;\r\n          this.progress = 0;\r\n          this.message =error.message;\r\n        }),\r\n      });\r\n\r\n    //  this.stepper.next();\r\n\r\n    }else{\r\n      // this.validateAllFormFields(form); //{7}\r\n      //this.stepper.next();\r\n    }\r\n  }\r\n}\r\n","<nb-card size=\"large\" [nbSpinner]=\"loading\" nbSpinnerStatus=\"danger\" nbSpinnerSize=\"large\" nbSpinnerMessage=\"\">\r\n    <nb-card-header>Agregar/Editar Ocupación</nb-card-header>\r\n    <nb-card-body>\r\n        <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-md-12\">\r\n                <div class=\"form-group row\">\r\n\r\n                    <label for=\"name\" class=\"label col-sm-4 col-form-label\">Codigo</label>\r\n                    <form [formGroup]=\"form\" class=\"col-sm-12\">\r\n                        <input formControlName=\"name\" type=\"text\" nbInput fullWidth id=\"name\" placeholder=\"Nombre de Campaña\">\r\n\r\n                    </form>\r\n\r\n                </div>\r\n                <div class=\"form-group row\">\r\n\r\n                    <label for=\"name\" class=\"label col-sm-4 col-form-label\">Nombre</label>\r\n                    <form [formGroup]=\"form\" class=\"col-sm-12\">\r\n                        <input formControlName=\"name\" type=\"text\" nbInput fullWidth id=\"name\" placeholder=\"Nombre de Campaña\">\r\n\r\n                    </form>\r\n\r\n                </div>\r\n                <div class=\"form-group row\">\r\n\r\n                    <label for=\"name\" class=\"label col-sm-4 col-form-label\">Descripción</label>\r\n                    <form [formGroup]=\"form\" class=\"col-sm-12\">\r\n                        <textarea nbInput fullWidth placeholder=\"Descripción\"></textarea>\r\n\r\n                    </form>\r\n\r\n                </div>\r\n\r\n                <div class=\"form-group row\">\r\n                    <label for=\"name\" class=\"label col-sm-4 col-form-label\">Icono</label>\r\n                    <ngx-dropzone style=\"width: 100%;\" [multiple]=\"false\" [maxFileSize]=\"'1000000'\" (change)=\"onSelect($event)\">\r\n                        <ngx-dropzone-image-preview *ngFor=\"let f of files\" [removable]=\"true\" [file]=\"f\" (removed)=\"onRemove(f)\">\r\n                            <ngx-dropzone-label>{{ f.name }} </ngx-dropzone-label>\r\n                        </ngx-dropzone-image-preview>\r\n                    </ngx-dropzone>\r\n\r\n                </div>\r\n                <div class=\"form-group col\">\r\n                    <label for=\"name\" class=\"label col-sm-4 col-form-label\">Habilidades</label>\r\n                    <nb-list>\r\n\r\n                        <nb-list-item>\r\n\r\n                            Abogados\r\n                        </nb-list-item>\r\n                        <nb-list-item>\r\n\r\n                            Funcionarios de Programas Exclusivos de la Administración Pública\r\n                        </nb-list-item>\r\n                        <nb-list-item>\r\n\r\n                            Asistentes Legales y Afines\r\n                        </nb-list-item>\r\n                        <nb-list-item>\r\n\r\n                            Periodistas\r\n                        </nb-list-item>\r\n                        <nb-list-item>\r\n\r\n                            Ocupaciones Profesionales en Relaciones Públicas y Comunicaciones\r\n                        </nb-list-item>\r\n                        <nb-list-item>\r\n\r\n                            Otras Ocupaciones Técnicas en Cine, Televisión y Artes Escénicas n.c.a.\r\n                        </nb-list-item>\r\n                        <nb-list-item>\r\n                            Jueces\r\n                        </nb-list-item>\r\n                    </nb-list>\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n\r\n                <nb-progress-bar *ngIf=\"progress>0\" [value]=\"progress\"></nb-progress-bar>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n        <div class=\"form-group row \">\r\n            <div class=\"col-sm-12 text-center\">\r\n\r\n                <button status=\"info\" class=\"text-center\" nbButton (click)=\"onSubmit()\">Crear</button>\r\n            </div>\r\n        </div>\r\n    </nb-card-footer>\r\n</nb-card>","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { Population } from '@core/data/remote/schemas/population';\r\nimport { Surveyed } from '@core/data/remote/schemas/surveyed';\r\nimport { AuthService } from '@core/data/remote/services/auth.service';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbDialogService } from '@nebular/theme';\r\n\r\n@Component({\r\n  selector: 'ngx-population-view',\r\n  templateUrl: './population-view.component.html',\r\n  styleUrls: ['./population-view.component.scss']\r\n})\r\nexport class PopulationViewComponent implements OnInit {\r\n  populations: Population[];\r\n  population_id: string;\r\n  population: Population;\r\n\r\n  constructor( _authService: AuthService,\r\n    private _surveyService: SurveyService,\r\n    private _dialogService: NbDialogService,\r\n    private _Activatedroute:ActivatedRoute,\r\n    ) { }\r\n\r\n  ngOnInit(): void {\r\n    this.population_id = this._Activatedroute.snapshot.paramMap.get(\"population_id\");\r\n\r\n    this.getPopulations(this.population_id);\r\n  }\r\n  getPopulations(pop_id){\r\n    this._surveyService.getPopulation(pop_id).subscribe({\r\n      next: (population: Population) => {\r\n        this.population = population;\r\n      }\r\n    });\r\n  }\r\n\r\n  deleteSurveyed(surveyed,i ){\r\n    this._surveyService.deleteSurveyed(surveyed).subscribe({\r\n      next: (surveyed: Surveyed) => {\r\n        this.population.surveyeds.splice(i,1);\r\n        this._surveyService.showToast(\"rigth\", \"success\", \"Borrado Correctamente\")\r\n      }\r\n    });\r\n  }\r\n\r\n   onAdded(ev: Surveyed){\r\n     const s   = [ev].concat(this.population.surveyeds);\r\n     this.population.surveyeds  = s ;\r\n     this._surveyService.showToast(\"rigth\", \"success\", \"Agregado Correctamente\")\r\n\r\n  }\r\n\r\n\r\n\r\n}\r\n","<div class=\" col-md-8 offset-md-2 \">\r\n\r\n\r\n    <ngx-surveyed-add [population_id]=\"population?.id\" (added)=\"onAdded($event)\"></ngx-surveyed-add>\r\n\r\n    <div class=\"row\">\r\n        <div class=\"col-md-12\">\r\n            <nb-card class=\"list-card\" size=\"large\">\r\n                <nb-card-header class=\"d-flex justify-content-between\">\r\n                    <div>\r\n                        Campaña: {{population?.name}}\r\n\r\n                        <div class=\"label text-left\">\r\n                            Encuestados: {{population?.surveyeds.length }} / Encuestas: {{population?.surveys.length }}\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        <!--\r\n                        <span class=\"caption\"> Archivo Excel:</span>\r\n                        <a *ngIf=\"population.file_path\" [href]=\"population.file_path\">\r\n                            <img  width=\"40\" src=\"assets/img/icons/xls.png\" alt=\"xls\">\r\n\r\n                        </a>\r\n                        <a *ngIf=\"!population.file_path\" [href]=\"population.file_path\">\r\n                          <img  width=\"40\" src=\"assets/img/icons/xls.png\" alt=\"xls\">\r\n\r\n                      </a>-->\r\n                    </div>\r\n                </nb-card-header>\r\n                <nb-list>\r\n                    <nb-list-item class=\"d-flex justify-content-between\" *ngFor=\"let surveyed of  population?.surveyeds; let i = index\" role=\"list\">\r\n                        <nb-user [name]=\"surveyed.name\" [title]=\"surveyed.identification\">\r\n                        </nb-user>\r\n                        <nb-actions class=\"d-flex justify-content-between\" size=\"small\" fullWidth>\r\n                            <nb-action *ngIf=\"surveyed.survey\">\r\n                                <span class=\"text-success\" *ngIf=\"surveyed.survey.isFinished\">Finalizada</span>\r\n                                <span class=\"text-info\" *ngIf=\"!surveyed.survey.isFinished\">En progreso</span>\r\n\r\n                            </nb-action>\r\n                            <nb-action *ngIf=\"surveyed.survey\">\r\n\r\n\r\n\r\n\r\n                                <a href=\"#/encuesta/1/{{surveyed.survey.user_id}}/{{surveyed.survey.uuid}}\" target=\"_blank\">\r\n                                    <nb-icon icon=\"external-link-outline\" status=\"info\">\r\n\r\n                                    </nb-icon>\r\n                                </a>\r\n\r\n                            </nb-action>\r\n                            <nb-action href=\"#\" [swal]=\"deleteSwal\">\r\n                                <nb-icon class=\"action-icon\" icon=\"trash-2-outline\"></nb-icon>\r\n                                <span>Borrar</span>\r\n                                <swal #deleteSwal title=\"Seguro que desea eliminar al encuestado {{ surveyed.name }}?\" text=\"Esto no se puede deshacer\" icon=\"question\" [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"deleteSurveyed(surveyed, i)\">\r\n                                </swal>\r\n\r\n                            </nb-action>\r\n\r\n                        </nb-actions>\r\n\r\n\r\n\r\n                    </nb-list-item>\r\n                </nb-list>\r\n            </nb-card>\r\n        </div>\r\n\r\n    </div>\r\n\r\n\r\n</div>\r\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport { Population } from '@core/data/remote/schemas/population';\r\nimport { User } from '@core/data/remote/schemas/users';\r\nimport { AuthService } from '@core/data/remote/services/auth.service';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbDialogService } from '@nebular/theme';\r\nimport { environment } from 'environments/environment';\r\n\r\nimport { PopulationAddComponent } from '../population-add/population-add.component';\r\n\r\n\r\n@Component({\r\n  selector: 'ngx-populations-list',\r\n  templateUrl: './populations-list.component.html',\r\n  styleUrls: ['./populations-list.component.scss']\r\n})\r\nexport class PopulationsListComponent implements OnInit {\r\n  public user:  User = null;\r\n  populations: Population[];\r\n  active_population: Population = null;\r\n  environment = environment;\r\n  @Output() onActivate: EventEmitter<Population[]> = new EventEmitter<Population[]>();\r\n  constructor(\r\n    private _dialogService: NbDialogService,\r\n    private _surveyService: SurveyService,\r\n    _authService: AuthService,\r\n\r\n  ) {\r\n    _authService.getCurrentUser().subscribe(\r\n      (user) => this.user = user,\r\n    );\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getPopulations();\r\n  }\r\n  addPopulation(user?: User) {\r\n    if (user) {\r\n      this._dialogService.open(PopulationAddComponent, {context:  user.id.toString()});\r\n    } else {\r\n      this._dialogService.open(PopulationAddComponent)\r\n      .onClose.subscribe(population => {\r\n        if(population){\r\n\r\n          this.populations = [population].concat( this.populations) }\r\n        }\r\n\r\n        )\r\n    }\r\n      // .onClose.subscribe(name => name && this.names.push(name));\r\n  }\r\n\r\n  getPopulations(){\r\n    this._surveyService.getPopulations().subscribe({\r\n      next: (populations: Array<Population>) => {\r\n        this.populations = populations;\r\n        this.populations.map((pop:Population)=>{\r\n            if(pop.active){\r\n              this.active_population = pop;\r\n            }\r\n        })\r\n      }\r\n    });\r\n  }\r\n\r\n  deletePopulation(pop: Population, i: number){\r\n    this._surveyService.delPopulations(pop).subscribe({\r\n      next: (populations: Array<Population>) => {\r\n        if(populations){\r\n          this.populations.splice(i,1);\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  activatePopulation(pop, i){\r\n    this._surveyService.activePopulations(pop).subscribe({\r\n      next: (populations: Array<Population>) => {\r\n        if(populations){\r\n          this.populations = populations;\r\n          this.onActivate.emit(populations);\r\n\r\n          //emit change\r\n        }\r\n\r\n      }\r\n    });\r\n\r\n  }\r\n}\r\n","<nb-card size=\"large\">\r\n\r\n    <nb-card-body>\r\n\r\n        <h2>\r\n            Campañas\r\n        </h2>\r\n        <p class=\"caption\">\r\n            Usted debe crear una campaña para cada periodo de aplicación de la encuesta. Las campañas ayudan a segmentar la encuesta por periodo o población. Tenga en cuenta que solo una campaña permanecerá activa </p>\r\n        <div>\r\n            <b>Instrucciones*:</b>\r\n            <p></p>\r\n            <p>1. Dar clic en crear Campaña y seguir instrucciones</p>\r\n            <p>2. Activar la campaña creada, presionando el botón\r\n                <nb-icon icon=\"play-circle-outline\" status=\"success\"></nb-icon>\r\n            </p>\r\n\r\n        </div>\r\n\r\n        <button status=\"info\" size=\"small\" class=\"col mt-2 text-right\" nbButton (click)=\"addPopulation()\"><nb-icon icon=\"plus-circle-outline\"></nb-icon> Campaña</button>\r\n\r\n        <nb-list class=\"row mt-3\">\r\n            <nb-list-item class=\"d-flex justify-content-between align-items-stretch\" *ngFor=\"let pop of populations; let i = index;\">\r\n\r\n                <nb-user [badgeText]=\"pop?.active?'Activa':''\" badgeStatus=\"success\" badgePosition=\"bottom right\" size=\"tiny\" [name]=\"pop?.name\">\r\n                </nb-user>\r\n\r\n\r\n                <nb-actions fullWidth size=\"small\">\r\n\r\n                    <nb-action title=\"Borrar Campaña\" [swal]=\"deleteSwal\" icon=\"trash-outline\" status=\"warning\">\r\n                        <swal #deleteSwal title=\"Seguro que desea eliminar la campaña: {{ pop?.name }}?\" text=\"Esto no se puede deshacer\" icon=\"question\" [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"deletePopulation(pop, i)\">\r\n                        </swal>\r\n\r\n                    </nb-action>\r\n\r\n                    <nb-action title=\"Encuestados\" class=\"d-flex justify-content-between\">\r\n                        <a href=\"#/dashboard/audience/{{pop?.id}}\" target=\"_blank\">\r\n                        {{pop?.surveys.length}}\r\n                      </a> / <a href=\"#/dashboard/audience/{{pop?.id}}\" target=\"_blank\">\r\n                        {{pop?.surveyeds.length}}\r\n                      </a>\r\n\r\n                    </nb-action>\r\n\r\n                    <nb-action status=\"info\" title=\"Link\">\r\n                        <a href=\"#/encuesta/{{pop?.id}}/{{user.id}}\" target=\"_blank\">\r\n                            <nb-icon icon=\"link-outline\"></nb-icon>\r\n                        </a>\r\n                    </nb-action>\r\n                    <nb-action icon=\"download-outline\" status=\"info\" title=\"Descargar Reporte\" href=\"{{environment.baseUrl.backend}}/report/{{pop?.id}}/{{user.id}}\" target=\"_blank\">\r\n\r\n                    </nb-action>\r\n\r\n                    <nb-action *ngIf=\"!pop?.active;else pause\" title=\"Activar\" [swal]=\"activeSwal\">\r\n                        <nb-icon icon=\"play-circle-outline\" status=\"success\"></nb-icon>\r\n\r\n                        <swal #activeSwal title=\"Seguro que desea Activar la campaña: {{ pop?.name }}?\" text=\"Esto cambiará la campaña activa actual\" icon=\"question\" [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"activatePopulation(pop, i)\">\r\n                        </swal>\r\n                    </nb-action>\r\n                    <ng-template #pause>\r\n\r\n                        <nb-action title=\"Desactivar\">\r\n                            <nb-icon icon=\"stop-circle-outline\" status=\"danger\"></nb-icon>\r\n                        </nb-action>\r\n                    </ng-template>\r\n\r\n                </nb-actions>\r\n\r\n\r\n\r\n\r\n            </nb-list-item>\r\n        </nb-list>\r\n\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n\r\n    </nb-card-footer>\r\n</nb-card>\r\n","import { ThrowStmt } from '@angular/compiler';\r\nimport { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { Surveyed } from '@core/data/remote/schemas/surveyed';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\n\r\n@Component({\r\n  selector: 'ngx-surveyed-add',\r\n  templateUrl: './surveyed-add.component.html',\r\n  styleUrls: ['./surveyed-add.component.scss']\r\n})\r\nexport class SurveyedAddComponent implements OnInit {\r\n  @Input() population_id: string;\r\n  @Output() added: EventEmitter<any> = new EventEmitter();\r\n  surveyed: Surveyed = {name:\"\", identification:\"\", last_name: \"\", population_id:\"\"};\r\n  constructor(\r\n   private _surveyService: SurveyService\r\n  ) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  onSubmit(){\r\n    this.surveyed.population_id = this.population_id;\r\n    this._surveyService.addSurveyed( this.surveyed).subscribe((surveyed) => {\r\n      this.added.emit(surveyed);\r\n      this.surveyed =  new Surveyed;\r\n    });\r\n\r\n  }\r\n\r\n}\r\n","<div class=\"row\">\r\n    <div class=\"col-md-12\">\r\n        <nb-card class=\"inline-form-card\">\r\n            <nb-card-header>Agregar Encuestado</nb-card-header>\r\n            <nb-card-body>\r\n                <form class=\"form-inline\">\r\n                    <input name=\"name\" [(ngModel)]=\"surveyed.name\" type=\"text\" nbInput fullWidth placeholder=\"Nombre\">\r\n                    <input name=\"identification\" [(ngModel)]=\"surveyed.identification\" type=\"text\" nbInput fullWidth placeholder=\"ID\">\r\n                    <button (click)=\"onSubmit()\" nbButton status=\"primary\">Agregar</button>\r\n                </form>\r\n            </nb-card-body>\r\n        </nb-card>\r\n    </div>\r\n</div>\r\n","import { Component, Input, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Survey } from '@core/data/remote/schemas/survey';\r\nimport { User } from '@core/data/remote/schemas/users';\r\nimport { SurveyService } from '@core/data/remote/services/survey.service';\r\nimport { NbAccessChecker } from '@nebular/security';\r\n\r\n@Component({\r\n  selector: 'ngx-surveys-table',\r\n  templateUrl: './surveys-table.component.html',\r\n  styleUrls: ['./surveys-table.component.scss']\r\n})\r\nexport class SurveysTableComponent implements OnInit {\r\n  loading: boolean;\r\n  @Input() user: User;\r\n  @Input() surveys:  Array<Survey>;\r\n  @Input() title: string;\r\n\r\n  //surveys: Array<Survey>;\r\n  filterargs = {name: 'luis'};\r\n  filterName = \"\";\r\n  filterId = \"\";\r\n  constructor(\r\n    private _Activatedroute:ActivatedRoute,\r\n    private _surveyService: SurveyService,\r\n    public _accessChecker: NbAccessChecker,\r\n    private _router: Router ,\r\n  ) { }\r\n\r\n  ngOnInit(): void {\r\n    //this.getSurveys();\r\n  }\r\n\r\n  view_survey(survey: Survey){\r\n    this._router.navigate([\"encuesta\",  1,this.user.id,survey.uuid]);\r\n\r\n  }\r\n\r\n  delete_survey(survey,i ){\r\n    this._surveyService.deleteSurvey(survey).subscribe({\r\n      next: (surveyed: Survey) => {\r\n        this.surveys.splice(i,1);\r\n        this._surveyService.showToast(\"rigth\", \"success\", \"Borrado Correctamente\")\r\n      }\r\n    });\r\n  }\r\n}\r\n","<nb-card size=\"large\">\r\n\r\n    <nb-card-body>\r\n\r\n        <h2>{{title}} </h2>\r\n        <p>\r\n            El siguiente es un listado de encuestas realizadas a traves de su enlace personal.\r\n        </p>\r\n        <div class=\"row mb-2\">\r\n            <div class=\"col-md-6\">\r\n                <label for=\"name\"> Nombre</label>\r\n                <nb-form-field>\r\n                    <nb-icon nbPrefix icon=\"person-outline\" pack=\"eva\"></nb-icon>\r\n                    <input [(ngModel)]=\"filterName\" fieldSize=\"small\" placeholder=\"Buscar por Nombre\" name=\"name\" type=\"text\" nbInput>\r\n                </nb-form-field>\r\n            </div>\r\n            <div class=\"col-md-6\">\r\n                <label for=\"id\"> Id</label>\r\n                <nb-form-field>\r\n                    <nb-icon nbPrefix icon=\"hash-outline\" pack=\"eva\"></nb-icon>\r\n                    <input [(ngModel)]=\"filterId\" fieldSize=\"small\" placeholder=\"Buscar por Id\" name=\"id\" type=\"text\" nbInput>\r\n                </nb-form-field>\r\n            </div>\r\n        </div>\r\n\r\n        <nb-list class=\"row mt-2\">\r\n            <nb-list-item class=\"d-flex justify-content-between align-items-stretch\" *ngFor=\"let survey of (surveys | filter:filterName | filter:filterId) ; let i = index\">\r\n\r\n                <nb-user size=\"medium\" [name]=\"survey?.surveyed?.name\" [title]=\"survey?.surveyed?.identification\">\r\n                </nb-user>\r\n\r\n\r\n                <nb-actions fullWidth size=\"small\" class=\"text-center\">\r\n                    <nb-action title=\"Inicio\" class=\"d-flex flex-column justify-content-center\">\r\n                        <p class=\"label  p-0 m-0\"><b>Desde:</b> </p>\r\n                        <p>{{survey?.created_at | date:'medium'}}</p>\r\n                    </nb-action>\r\n\r\n\r\n                    <nb-action title=\"Borrar Campaña\" class=\"d-flex flex-column justify-content-center\">\r\n\r\n                        <p class=\"label p-0 m-0\"><b>Hasta:</b></p>\r\n                        <p>{{survey?.updated_at | date:'medium'}}</p>\r\n                    </nb-action>\r\n                    <nb-action tile=\"ver encuesta\" class=\"text-center\">\r\n                        <a href=\"#/encuesta/1/{{user.id}}/{{survey.uuid}}\" target=\"_blank\">\r\n                            <nb-icon icon=\"external-link-outline\" status=\"info\">\r\n\r\n                            </nb-icon>\r\n                        </a>\r\n                    </nb-action>\r\n                    <nb-action [swal]=\"deleteSwal\" tile=\"borrar encuesta\" class=\"text-center\">\r\n\r\n                        <nb-icon icon=\"trash-outline\" status=\"info\">\r\n\r\n                        </nb-icon>\r\n\r\n                        <swal #deleteSwal title=\"Seguro que desea eliminar la encuesta de {{ survey.surveyed.name }}?\" text=\"Esto no se puede deshacer\" icon=\"question\" [showCancelButton]=\"true\" [focusCancel]=\"true\" (confirm)=\"delete_survey(survey, i)\">\r\n                        </swal>\r\n                    </nb-action>\r\n\r\n                </nb-actions>\r\n\r\n\r\n\r\n\r\n            </nb-list-item>\r\n        </nb-list>\r\n\r\n    </nb-card-body>\r\n    <nb-card-footer>\r\n\r\n    </nb-card-footer>\r\n</nb-card>\r\n"],"names":[],"sourceRoot":"webpack:///"}