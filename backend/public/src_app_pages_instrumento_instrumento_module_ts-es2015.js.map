{"version":3,"file":"src_app_pages_instrumento_instrumento_module_ts-es2015.js","mappings":"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","sources":["./src/app/pages/instrumento/how-to/how-to.component.ts","./src/app/pages/instrumento/how-to/how-to.component.html","./src/app/pages/instrumento/instructivo/instructivo.component.ts","./src/app/pages/instrumento/instructivo/instructivo.component.html","./src/app/pages/instrumento/instrumento-routing.module.ts","./src/app/pages/instrumento/instrumento.component.ts","./src/app/pages/instrumento/instrumento.component.html","./src/app/pages/instrumento/instrumento.module.ts","./src/app/pages/instrumento/scale-card/scale-card.component.ts","./src/app/pages/instrumento/scale-card/scale-card.component.html","./src/app/pages/instrumento/scale/scale.component.ts","./src/app/pages/instrumento/scale/scale.component.html","./src/app/pages/instrumento/test/test.component.ts","./src/app/pages/instrumento/test/test.component.html"],"sourcesContent":["import { HttpEventType } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { User } from '@core/data/remote/schemas/users';\nimport { AuthService } from '@core/data/remote/services/auth.service';\nimport { SurveyService } from '@core/data/remote/services/survey.service';\nimport { NbAuthService } from '@nebular/auth';\n\n@Component({\n  selector: 'ngx-how-to',\n  templateUrl: './how-to.component.html',\n  styleUrls: ['./how-to.component.scss']\n})\nexport class HowToComponent implements OnInit {\n  public form: FormGroup;\n  public pollster_id: any;\n  public population_id: string;\n  loading: boolean;\n  error: boolean;\n  message: string;\n  survey: any;\n  user: User;\n  progress: 50;\n  constructor(\n    private _fb: FormBuilder,\n    private _router: Router ,\n    private _route:ActivatedRoute,\n    private _surveyService: SurveyService,\n    private _authService: AuthService,\n    ) {\n\n      _authService.getCurrentUser().subscribe(\n        (user) => {\n          this.user = user;\n        }\n      );\n    }\n      example_question = {\n        id:1,\n        text: `Me gustaría ir a una charla sobre:`,\n        code: \"1\",\n        options:[\n          { question_id:1,\n            text: `Cómo influye la sociedad a grupos minoritarios, como por ejemplo, personas en\n                  situación de pobreza, personas con discapacidad, entre otros.`,\n            value:\"\",\n            code: 1,\n          },\n          {\n            question_id:1,\n            text: `Influencia de la música rock en la vida moderna.`,\n            value:\"\",\n            code: 2,\n          },\n          {\n            question_id:1,\n            text: `Cómo dirigir y organizar el personal de una empresa.`,\n            value:\"\",\n            code: 3,\n          },{\n            question_id:1,\n            text: `Formas de tratamiento o apoyo para personas que tienen dificultades con abuso de sustancias, como por ejemplo, drogas o alcohol.`,\n            value:\"\",\n            code: 4,\n          }\n        ]\n\n      };\n\n  ngOnInit(): void {\n    this.form = this._fb.group({});\n\n   }\n\n  start(){\n    // Load Survey By Creating a survey in the server and returning an uuid for this user.\n    if(this.form.valid){\n      //submit session\n      const formData = this._surveyService.toFormData(this.form.value);\n      this.loading = true;\n      this._surveyService.createOrGetSurvey(formData)\n      .subscribe({\n        next: (event => {\n            if ( event.type === HttpEventType.Response) {\n              if(event.body.type == 4 || event.body.type  == 3){\n                this._surveyService.showToast('top rigth', 'success', 'Bienvenido a la Encuesta');\n                this.survey = event.body.survey;\n                this._router.navigate([\"encuesta/\", this.survey.uuid]);\n\n              }else{\n                //0: no esta en base de datos\n                //1: nombre no coincide con base de datos\n                //2: encuesta por terminar\n                //3: encuesta terminada.\n                //4: nueva encuesta\n                this.error = true;\n                if(event.body.type == 0){\n                  this.message = \"Actualmente usted no se encuentra registrado en la base de datos.\"              }\n                if(event.body.type == 1){\n                  this.message = \"Uno de los datos proporcionados no es correcto, por favor intente nuevamente.\"\n\n                }\n                if(event.body.type == 2){\n                  this.message = \"Usted ya realizó esta encuesta, gracias por participar.\"\n                }\n              }\n              this.loading = false;\n\n\n\n            }\n\n\n\n        }),\n        error: (error => {\n          this._surveyService.showToast('top rigth', 'danger', error);\n          this.loading = false;\n          this.error = true;\n          this.message =error.message;\n        }),\n      });\n\n    //  this.stepper.next();\n\n    }else{\n      // this.validateAllFormFields(form); //{7}\n      //this.stepper.next();\n    }\n\n\n\n\n  }\n\n  continue(){\n    // load Survey based on user uuid if exist.\n  }\n\n}\n","<div class=\"col-md-10 offset-md-1  h-100\">\n\n    <div class=\"section \">\n        <div class=\"row \">\n\n            <!-- Instrucciones generales -->\n            <div class=\"col-md-9\">\n                <h2 class=\"h4   text-blue-orientate\">Cómo responder</h2>\n                <p class=\"h6 mt-2 font-weight-light \">Lee cada pregunta con atención y escoge la respuesta. La respuesta de cada pregunta implica marcar todas las opciones presentadas, en orden de preferencia según la escala</p>\n\n                <p class=\"h6 mt-2\">Me encanta - Me gusta - No estoy seguro - No me gusta</p>\n\n                <p class=\"text-blue-orientate mt-3 text-break\">Recuerda que no existen respuesta buenas o malas, todas las respuestas son válidas. Contesta con la mayor honestidad posible.</p>\n\n            </div>\n        </div>\n    </div>\n\n    <div class=\"section mb-4\">\n        <!-- Componente de ejemlo -->\n        <img class=\"scale-card\" src=\"assets/Orienta-t/Escala de respuesta/PNG/Oriéntate_Barra.png\">\n        <p class=\"text-blue-orientate mt-3 p\">A continuación podrás responder una pregunta de prueba.</p>\n    </div>\n    <div class=\"section my-5 \">\n        <!-- Componente de ejemlo interactivo -->\n\n        <h2 class=\"h4    text-blue-orientate \">Responde el siguiente ejemplo:</h2>\n\n        <ngx-scale-card class=\"mt-4\" [question]=\"example_question\"></ngx-scale-card>\n\n    </div>\n    <div class=\" section mt-5 mb-5\">\n        <!-- Iniciar test -->\n        <div *ngIf=\"!this.user?.survey_uuid\" class=\"row cta\">\n            <button (click)=\"start()\" class=\"mx-auto \" nbButton shape=\"round\" status=\"primary\">INICIAR TEST</button>\n        </div>\n        <div *ngIf=\"this.user?.survey_uuid\" class=\"row cta\">\n            <button routerLink=\"/encuesta/1/{{this.user?.survey_uuid}}\" class=\"mx-auto \" nbButton shape=\"round\" status=\"primary\">RESUMIR TEST</button>\n        </div>\n\n    </div>\n    <div class=\"section m-0\">\n        <div class=\"d-flex justify-content-end align-items-end\">\n\n            <img class=\"footer-logo \" width=\"80%\" src=\"assets/Orienta-t/Logo/SVG/Assets Oriéntate_Azul.svg\" alt=\"Logo\">\n        </div>\n\n    </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { User } from '@core/data/remote/schemas/users';\nimport { AuthService } from '@core/data/remote/services/auth.service';\nimport { LottieService } from '@core/data/vendors/services/lottie.service';\nimport { MENU_ITEMS } from '@modules/pages-menu';\nimport { AnimationItem } from 'lottie-web';\nimport { AnimationOptions } from 'ngx-lottie';\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'ngx-instructivo',\n  templateUrl: './instructivo.component.html',\n  styleUrls: ['./instructivo.component.scss']\n})\nexport class InstructivoComponent implements OnInit {\n  user: User;\n  constructor(    public _lottieSrv: LottieService,\n    private _authService: AuthService,\n    private location: Location,\n\n    ) {\n      this._authService.getCurrentUser()\n      .subscribe((user: User) => {\n        if (user) {\n          this.user = user;\n        }\n      });\n\n    }\n\n  ngOnInit(): void {\n  }\n  back(){\n    this.location.back();\n\n  }\n/**\n   *\n   * Lottie\n   */\n\n private animationItem: AnimationItem;\n public options: AnimationOptions  =  this._lottieSrv.getOptions('logo-orienta-t',{'loop':false } );\n public options2: AnimationOptions  =  this._lottieSrv.getOptions('start-orienta-t',{'loop':true } );\n\n animationCreated(animationItem: AnimationItem, speed): void {\n   this.animationItem = animationItem;\n   this._lottieSrv.animationCreated(animationItem,{\n     'speed':speed\n   });\n }\n}\n","<div class=\"col-md-10 offset-md-1  h-100\">\n    <div class=\"row  h-100\">\n        <div class=\"illustration-container  mx-auto col-12 order-1 order-md-2 col-md-7 order-1 order-md-2 \">\n            <div class=\" illustration  text-right   \">\n\n                <ng-lottie class=\"mx-auto\" [options]=\"options2\" (animationCreated)=\"animationCreated($event,0.3)\">\n                </ng-lottie>\n\n\n            </div>\n        </div>\n        <div class=\"info-container col-12 order-2 order-md-1 col-md-5  order-2 order-md-1  \">\n\n            <div class=\"row logo mt-md-5 \">\n                <h1 style=\"display: none;\">Orienta-t</h1>\n                <div class=\"logo-container\">\n                    <img width=\"100%\" src=\"assets/Orienta-t/Logo/SVG/Assets Oriéntate_Azul.svg\" alt=\"Logo\">\n\n                </div>\n            </div>\n            <div class=\"row slogan mt-4\">\n                <div class=\"col-sm-12\">\n\n                    <h2>Hola! {{user?.name}}</h2>\n                    <h3 class=\" mt-3\">Bienvenido al test de orientación académica Orienta-T</h3>\n                    <p class=\" mt-3\">Este test te ayudará a saber cuáles son tus preferencias y cómo se relacionan con ocupaciones en el mundo del trabajo.</p>\n                    <p class=\"instructions text-info\">\n                        Haz click en el botón continuar para ver las instrucciones y saber cómo responder el test.\n                    </p>\n                </div>\n            </div>\n            <div class=\"row cta mt-5 \">\n                <div class=\"col-sm-12 col-md-6 mb-3 text-left\">\n                    <button fullWidth (click)=\"back()\" nbButton shape=\"round\" status=\"primary\">\n                    <nb-icon icon=\"arrow-back-outline\"></nb-icon> REGRESAR </button>\n                </div>\n                <div class=\"col-sm-12 col-md-6  mb-3\">\n                    <button fullWidth routerLink=\"/encuesta/ejemplo\" nbButton shape=\"round\" outline status=\"primary\">\n                  CONTINUAR  <nb-icon icon=\"arrow-forward-outline\"></nb-icon> </button>\n                </div>\n\n\n            </div>\n\n\n\n        </div>\n\n    </div>\n\n\n\n\n</div>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HowToComponent } from './how-to/how-to.component';\nimport { InstructivoComponent } from './instructivo/instructivo.component';\nimport { InstrumentoComponent } from './instrumento.component';\nimport { TestComponent } from './test/test.component';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: InstrumentoComponent,\n    children: [\n      {\n        path: 'instrucciones',\n        component: InstructivoComponent,\n        pathMatch: 'full'\n      },\n      {\n        path: 'ejemplo',\n        component: HowToComponent,\n        pathMatch: 'full'\n      },\n      {\n        path: ':section_id/:uuid',\n        component: TestComponent,\n      },\n    ]\n  },\n\n\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class InstrumentoRoutingModule { }\n","import { Component, NgZone, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { LottieService } from '@core/data/vendors/services/lottie.service';\nimport { LayoutService } from '@core/utils';\nimport { MenuService } from '@core/utils/menu.service';\nimport { MENU_ITEMS } from '@modules/pages-menu';\nimport { NbAccessChecker } from '@nebular/security';\n\nimport { Location } from '@angular/common';\n\n@Component({\n  selector: 'ngx-instrumento',\n  templateUrl: './instrumento.component.html',\n  styleUrls: ['./instrumento.component.scss']\n})\nexport class InstrumentoComponent implements OnInit {\n  menu = MENU_ITEMS;\n\n  constructor( location: Location,\n    public _lottieSrv: LottieService,\n    private ngZone: NgZone,\n\n    public  router: Router,\n    private accessChecker: NbAccessChecker,\n    private menuService: MenuService,\n    private route: ActivatedRoute,\n    private ls: LayoutService) {\n\n\n    }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nb-layout windowMode>\n    <nb-layout-header fixed>\n        <div class=\"container\">\n            <ngx-header without_sidebar_btn=\"true\" color=\"blue\"></ngx-header>\n        </div>\n    </nb-layout-header>\n\n\n    <!-- <nb-sidebar state=\"collapsed\" class=\"menu-sidebar \" tag=\"menu-sidebar\" responsive start>\n\n        <ng-content select=\"nb-menu\"></ng-content>\n\n    </nb-sidebar>-->\n\n    <nb-layout-column>\n\n\n        <router-outlet></router-outlet>\n\n\n\n    </nb-layout-column>\n    <!--\n<nb-layout-footer fixed>\n<ngx-footer></ngx-footer>\n</nb-layout-footer>-->\n</nb-layout>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { InstrumentoRoutingModule } from './instrumento-routing.module';\nimport { InstructivoComponent } from './instructivo/instructivo.component';\nimport { InstrumentoComponent } from './instrumento.component';\nimport { LottieModule } from 'ngx-lottie';\nimport { NbActionsModule, NbBadgeModule, NbButtonModule, NbCardModule, NbCheckboxModule, NbDatepickerModule, NbIconModule, NbInputModule, NbLayoutModule, NbMenuModule, NbProgressBarModule, NbRadioModule, NbSidebarModule, NbSpinnerModule, NbTooltipModule } from '@nebular/theme';\nimport { playerFactory } from 'app/app.module';\nimport { ThemeModule } from 'app/@theme/theme.module';\nimport { HowToComponent } from './how-to/how-to.component';\nimport { ScaleCardComponent } from './scale-card/scale-card.component';\nimport { ScaleComponent } from './scale/scale.component';\nimport { TestComponent } from './test/test.component';\nimport { NbDateFnsDateModule } from '@nebular/date-fns';\nimport { ReactiveFormsModule } from '@angular/forms';\n\n\n@NgModule({\n  declarations: [InstructivoComponent, InstrumentoComponent, HowToComponent, ScaleCardComponent, ScaleComponent, TestComponent],\n  imports: [\n    CommonModule,\n    InstrumentoRoutingModule,\n    NbMenuModule,\n    NbLayoutModule,\n    ThemeModule,\n    NbCardModule,\n    NbSidebarModule,\n    NbButtonModule,\n    NbIconModule,\n    NbActionsModule,\n    LottieModule.forRoot({ player: playerFactory }),\n    NbInputModule,\n    NbRadioModule,\n    NbCheckboxModule,\n    NbDatepickerModule,\n    NbIconModule,\n    ThemeModule,\n    NbButtonModule,\n    NbTooltipModule,\n    NbBadgeModule,\n    NbProgressBarModule,\n    NbDateFnsDateModule.forChild({\n      format: 'dd - MM - yyyy' ,\n      parseOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\n      formatOptions: { useAdditionalWeekYearTokens: true, useAdditionalDayOfYearTokens: true },\n\n    }),\n    ReactiveFormsModule,\n    NbSpinnerModule,\n   ]\n})\nexport class InstrumentoModule {\n\n\n}\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport {  FormGroup } from '@angular/forms';\nimport { Question } from '@core/data/remote/schemas/question';\n\n@Component({\n  selector: 'ngx-scale-card',\n  templateUrl: './scale-card.component.html',\n  styleUrls: ['./scale-card.component.scss']\n})\nexport class ScaleCardComponent implements OnInit {\n\n  @Input() question: Question;\n  @Input() form: FormGroup;\n  @Output() isDone = new EventEmitter<boolean>();\n  @Output() onChange = new EventEmitter<boolean>();\n\n  done: number = 0;\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  setOptionValue(option,$event){\n    //Update Parent formcontrol.\n    if(this.form?.controls){\n\n      this.form.controls[this.question.label + \"_\" + option.subcode].setValue($event) ;\n      this.question.answer[this.question.label+\"_\"+option.subcode] = $event;\n      //Eval if this questions have all options answered.\n      this.checkIfQuestionIsdone();\n      if(this.done == 4 && this.question.answers[0]?.checked != true){\n        this.question.checked = true;\n        this.question.answers[0].checked = true;\n        this.isDone.emit(true);\n      }\n      this.onChange.emit(true);\n    }\n\n  }\n\n  checkIfQuestionIsdone(){\n    this.done = 0;\n\n    this.question.options.map(option=>{\n      if(this.form.controls[this.question.label + \"_\" + option.subcode].value){\n        this.done++;\n      }\n    })\n  }\n\n}\n","<div class=\"mt-5\">\n\n\n    <!--Pregunta General-->\n    <div class=\"d-flex flex-column justify-content-between\">\n        <div class=\"question row align-items-center\">\n            <div class=\"question-text   col-md-8 p-0 align-items-center\">\n                <p class=\"ml-3\"> <span class=\"num\"> {{question.code}} </span> {{question.text}}</p>\n            </div>\n            <div *ngIf=\"question.id==1\" class=\" instruction mx-auto col-md-4 align-items-center\">\n                <p class=\"text-blue-orientate caption text-center\">Recuerda elegir las opciones en orden de preferencia</p>\n                <img class=\"scale-card   mx-auto\" src=\"assets/Orienta-t/Escala de respuesta/PNG/Oriéntate_Barra.png\">\n            </div>\n        </div>\n    </div>\n\n    <!--Sub-preguntas-->\n    <div class=\"d-flex flex-column justify-content-between mt-3\">\n        <div *ngFor=\"let option of question.options\" class=\"sub-question row align-items-center\">\n            <div class=\"q-desc col-md-8 p-0 align-items-center\">\n                <div class=\"col-md-10 m-0 align-items-center\">\n\n                    <p class=\"sub-question-text\">{{option.text}}</p>\n                    <!--<p>Seleccion: {{option?.value}}</p>-->\n                </div>\n            </div>\n            <div class=\"q-scale col-md-4 align-items-center\">\n                <ngx-scale [value]=\"form?.controls[question.label + '_' + option.subcode].value\" (onChange)=\"setOptionValue(option,$event)\"></ngx-scale>\n            </div>\n        </div>\n    </div>\n\n</div>\n","import { Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\nimport { Answer } from '@core/data/remote/schemas/Answer';\n\n@Component({\n  selector: 'ngx-scale',\n  templateUrl: './scale.component.html',\n  styleUrls: ['./scale.component.scss']\n})\nexport class ScaleComponent implements OnInit {\n\n\n  @Output() onChange = new EventEmitter<string>();\n  @Input() value:string;\n\n  options = [\n    { state:false, value: '1', label: 'love' },\n    { state:false, value: '2', label: 'like' },\n    { state:false, value: '3', label: 'not-sure' },\n    { state:false, value: '4', label: 'not-like' },\n  ];\n  constructor() { }\n\n  ngOnInit(): void {\n\n  }\n\n  setValue(selected_value){\n    //Update others options\n\n    this.value = selected_value;\n    this.onChange.emit(this.value);\n  }\n\n\n\n}\n","<nb-actions fullWidth size=\"medium\">\n    <nb-action *ngFor=\"let option of options\">\n        <nb-icon class=\"click\" *ngIf=\"option.value != value; else active\" (click)=\"setValue(option.value)\" pack=\"orienta-t-icons\" [icon]=\"option.label\"></nb-icon>\n        <ng-template #active>\n            <nb-icon class=\"click\" pack=\"orienta-t-icons\" [icon]=\"option.label+ '-ol'\"></nb-icon>\n            <!--<p>Selected value: {{value}}</p>-->\n        </ng-template>\n    </nb-action>\n</nb-actions>\n","import { HttpEventType } from '@angular/common/http';\nimport { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, NavigationEnd, NavigationStart, Router } from '@angular/router';\nimport { Question } from '@core/data/remote/schemas/question';\nimport { Section } from '@core/data/remote/schemas/section';\nimport { Survey } from '@core/data/remote/schemas/survey';\nimport { User } from '@core/data/remote/schemas/users';\nimport { SurveyService } from '@core/data/remote/services/survey.service';\nimport { NbAccessChecker } from '@nebular/security';\nimport { NbDateService, NbLayoutScrollService } from '@nebular/theme';\nimport { formatDuration, intervalToDuration } from 'date-fns';\n\n@Component({\n  selector: 'ngx-test',\n  templateUrl: './test.component.html',\n  styleUrls: ['./test.component.scss']\n})\nexport class TestComponent implements OnInit {\n\n  public sections: Array<Section> = new Array<Section>();\n  public section: Section;\n  public forms: Array<FormGroup> = new Array<FormGroup>();\n  public form: FormGroup;\n\n  public loading: boolean = false;\n  public pollster_id: any;\n  start = true;\n  consent;\n  pollster: User;\n  survey_id: any;\n  uuid: string;\n  section_id: string;\n  survey: Survey;\n  population_id: any;\n  total_questions = 0;\n  total_questions_answered = 0;\n  progress = 0;\n\n  constructor(\n    private _Activatedroute: ActivatedRoute,\n    private _surveyService: SurveyService,\n    private _fb: FormBuilder,\n    public _accessChecker: NbAccessChecker,\n    private _ly: NbLayoutScrollService,\n    private _router: Router,\n    protected dateService: NbDateService<Date>\n\n  ) {\n    _router.events.forEach((event) => {\n      if (event instanceof NavigationStart) {\n      }\n      if (event instanceof NavigationEnd) {\n        this.updateSession();\n      }\n    });\n\n    //1. Load a survey by sessions and asnwers for given uuid\n    this.form = this._fb.group({});\n    this.uuid = this._Activatedroute.snapshot.paramMap.get(\"uuid\");\n    this.section_id = this._Activatedroute.snapshot.paramMap.get(\"section_id\");\n    this.getSession(this.uuid, this.section_id);\n    if (this.section_id == \"1\") {\n    //2. Get Answers of the uuid\n      this.getSurvey(this.uuid);\n    }\n  }\n  ngOnInit() {\n\n  }\n\n  getSession(uuid, section_id) {\n    this.loading = true;\n\n    this._surveyService.getSingleSection(uuid, section_id).subscribe({\n      next: (section: Section) => {\n        this.total_questions = 0;\n        this.total_questions_answered = 0;\n        this.section = section;\n        this.form = this._fb.group({});\n        this.section.questions.map((question: Question) => {\n          this.total_questions++;\n          if(question.answers[0]?.checked ){\n            this.total_questions_answered++;\n          }\n          //Set Validators:\n          switch (question.type) {\n            case \"SC\":\n            case \"M\":\n              question.options.map((option, i) => {\n\n                this.form.addControl(\n                  question.label + \"_\" + option.subcode,\n                  new FormControl(question.answer[question.label+\"_\"+option.subcode], [])\n                );\n\n\n              });\n\n              break;\n            case \"U\":\n              this.form.addControl(\n                question.label,\n                new FormControl(\n                  question.answer[question.label]+\"\",\n                  question.validators\n                )\n              );\n\n              question.options.map((option) => {\n                if (option.text === \"Otro\" || option.text === \"Otra\") {\n                  this.form.addControl(\n                    question.label + \"_OTRO\",\n                    new FormControl( question.answer[question.label + \"_OTRO\"]+ \" \", [])\n                  );\n                }\n\n              });\n\n              break;\n            case \"D\":\n              let date;\n              if(  question.answer[question.label] !== \"\"){\n                  date = new Date(question.answer[question.label]);\n\n               }else{\n                 date = new Date();\n\n              }\n              this.form.addControl(\n                question.label,\n                new FormControl(\n                  date,\n                  question.validators\n                )\n              );\n\n              break;\n            case \"INS\":\n              break;\n            default:\n              this.form.addControl(\n                question.label,\n                new FormControl(\n                  question.answer[question.label],\n                  question.validators\n                )\n              );\n\n              break;\n          }\n        });\n        this.loading = false;\n        this.updateProgress(this.total_questions_answered);\n\n        this.scrollToTop();\n\n        //Set Default values for date fields and sections\n        if(section_id==\"6\"){\n          let time = intervalToDuration({\n            start: new Date(this.section.survey.created_at),\n             end: this.dateService.today()\n          })\n          if( this.form.get(\"F_10\")){\n            if(this.form.get(\"F_10\").value == \"\"){\n              this.form.get(\"F_10\")?.setValue(\n                formatDuration( time )\n                 )\n            }else{\n\n            }\n          }\n\n\n        }\n\n       //Optional: eval CONDITIONS\n      // this._surveyService.eval_conditions(section, form: FormGroup, value, questions);\n      },\n    });\n  }\n\n  eval_conditions(){}\n  onSubmit(form: FormGroup, i) {\n    if (form.valid) {\n      //submit session\n      const formData = this._surveyService.toFormData(form.value);\n      formData.append(\"section_id\", this.section_id);\n      formData.append(\"uuid\", this.uuid);\n\n      this.loading = true;\n      this._surveyService.addOrUpdateSurvey(formData).subscribe({\n        next: (event) => {\n          if (event.type === HttpEventType.Response) {\n            this._surveyService.showToast(\n              \"top rigth\",\n              \"info\",\n              \"Información guardada correctamente\"\n            );\n            this.loading = false;\n            this.survey_id = event.body.id;\n\n            if (i == 2) {\n              this._router.navigate([\"/perfil/areas/\",this.uuid]);\n            }else{\n\n                this._router.navigate([\n                  \"encuesta\",\n                  parseInt(this.section_id) + 1,\n                  this.uuid,\n                ]);\n\n            }\n\n          }\n        },\n        error: (error) => {\n          this._surveyService.showToast(\"top rigth\", \"danger\", error);\n          this.loading = false;\n        },\n      });\n\n      //  this.stepper.next();\n    } else {\n      this.validateAllFormFields(form); //{7}\n      this._surveyService.showToast(\n        \"left\",\n        \"warning\",\n        \"Favor revisar preguntas sin responder.\"\n      );\n    }\n  }\n\n  onSubmitUpdate(form: FormGroup) {\n\n      //submit session\n      const formData = this._surveyService.toFormData(form.value);\n      formData.append(\"section_id\", this.section_id);\n      formData.append(\"uuid\", this.uuid);\n\n      this.loading = true;\n      this._surveyService.addOrUpdateSurvey(formData).subscribe({\n        next: (event) => {\n          if (event.type === HttpEventType.Response) {\n            this._surveyService.showToast(\n              \"top rigth\",\n              \"info\",\n              \"Pregunta guardada correctamente\"\n            );\n            this.loading = false;\n            this.survey_id = event.body.id;\n          }\n        },\n        error: (error) => {\n          this._surveyService.showToast(\"top rigth\", \"danger\", error);\n          this.loading = false;\n        },\n      });\n\n      //  this.stepper.next();\n\n  }\n\n  validateAllFormFields(formGroup: FormGroup) {\n    //{1}\n    Object.keys(formGroup.controls).forEach((field) => {\n      //{2}\n      const control = formGroup.get(field); //{3}\n      if (control instanceof FormControl) {\n        //{4}\n        control.markAsTouched({ onlySelf: true });\n      } else if (control instanceof FormGroup) {\n        //{5}\n        this.validateAllFormFields(control); //{6}\n      }\n    });\n  }\n\n  getSurvey(uuid) {\n    this.loading = true;\n    this._surveyService.getSurvey(uuid).subscribe({\n      next: (survey: Survey) => {\n        this.survey = survey;\n        this.loading = false;\n      },\n    });\n  }\n\n  updateSession() {\n    this.uuid = this._Activatedroute.snapshot.paramMap.get(\"uuid\");\n    this.section_id = this._Activatedroute.snapshot.paramMap.get(\"section_id\");\n    this.getSession(this.uuid, this.section_id);\n  }\n\n  updateProgress(total_questions_answered){\n\n    if(this.total_questions > 0){\n\n      this.total_questions_answered = total_questions_answered;\n      this.progress = Math.ceil((this.total_questions_answered / this.total_questions)*100);\n    }else{\n      this.progress =  0;\n    }\n  }\n\n  //HELPERS\n  trackByFn(index, item) {\n    return `${index}-${item?.trackId}`;\n  }\n\n  scrollToTop() {\n    this._ly.scrollTo(0, 0);\n\n    //\n  }\n}\n","<div class=\"col-md-8 offset-md-2\">\n    <nb-card class=\"sticky-top progress m-0 container-fluid\">\n        <nb-card-body>\n            <nb-progress-bar [value]=\"progress\" status=\"primary\" [displayValue]=\"true\" status=\"primary\"> </nb-progress-bar>\n        </nb-card-body>\n    </nb-card>\n    <div status=\"primary\" [nbSpinner]=\"loading\" nbSpinnerStatus=\"info\" nbSpinnerSize=\"large\" nbSpinnerMessage=\"Actualizando\">\n\n        <div>\n            <div class=\"p-3\">\n                <div *ngIf=\"start || (section_id != '1' && !start)\" #stepper>\n\n                    <div label=\"Sección {{ section?.code }}\">\n                        <form [formGroup]=\"form\" async>\n                            <div *ngIf=\"section?.visible\">\n                                <h4 class=\"text-blue-orientate\">\n                                    <span>{{ section?.code }}.</span> {{ section?.text }}\n                                </h4>\n                                <p class=\"lorem\">\n                                    {{ section?.desc }}\n                                </p>\n                            </div>\n                            <br />\n                            <ng-container *ngFor=\"\n                      let question of section?.questions;\n                      let j = index;\n                      trackBy: trackByFn\n                    \">\n\n\n                                <div *ngIf=\"question?.show\">\n                                    <div *ngIf=\"question.pre_title\">\n                                        <br />\n                                        <h6 class=\"text-info\"><b>{{question.pre_title}}</b></h6>\n\n                                    </div>\n                                    <!-- <div class=\"question-text row\">\n\n                                          <span class=\"text-danger\" *ngIf=\"question.required\">*</span>\n                                          <div *ngIf=\"question.type !== 'INS'\">\n                                              <b><span> {{ question.label }} </span> {{ question.text }}</b>\n                                          </div>\n                                      </div>-->\n                                    <div>\n                                        <span *ngIf=\"question.type!=='INS'\" class=\"caption\"> {{ question.desc }} </span>\n                                    </div>\n                                    <div [ngSwitch]=\"question.type\">\n\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'T'\">\n                                            <input [name]=\"question.label\" type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\" />\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'TL'\">\n                                            <textarea [name]=\"question.label\" type=\"text\" nbInput shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\"></textarea>\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'N'\">\n                                            <input [name]=\"question.label\" type=\"number\" shape=\"round\" fullWidth fieldSize=\"small\" status=\"danger\" [formControl]=\"form.controls[question.label]\" />\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'U'\">\n                                            <nb-radio-group status=\"danger\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\n                                                <nb-radio (click)=\"\n                                eval_conditions(\n                                  form,\n                                  question,\n                                  option.value,\n                                  section.questions\n                                )\n                              \" *ngFor=\"\n                                let option of question.options;\n                                let j = index;\n                                trackBy: trackByFn\n                              \" value=\"{{ option.value }}\">\n                                                    <ng-template #elseBlock>\n                                                        {{ option.text }}\n                                                    </ng-template>\n\n                                                    <input *ngIf=\"option.isOther; else elseBlock\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"danger\" nbInput (click)=\"\n                                  form.get(question.label).setValue(option.value)\n                                \" [placeholder]=\"option.text\" [formControl]=\"form.controls[question.label + '_OTRO']\" />\n                                                </nb-radio>\n                                            </nb-radio-group>\n                                            <div *ngIf=\"\n                              form.get(question.label + '_OTRO')?.invalid &&\n                              (form.get(question.label + '_OTRO')?.dirty ||\n                                form.get(question.label + '_OTRO')?.touched)\n                            \" class=\"alert text-danger label\">\n                                                <div *ngIf=\"\n                                form.get(question.label + '_OTRO').errors.required\n                              \">\n                                                    La Opción OTRO es Obligatoria para la pregunta\n                                                    <b>{{ question.label }}</b>.\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'S'\">\n                                            <nb-radio-group status=\"danger\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\n                                                <nb-radio (click)=\"\n                                eval_conditions(\n                                  form,\n                                  question,\n                                  1,\n                                  section.questions\n                                )\n                              \" value=\"1\">\n                                                    Sí\n                                                </nb-radio>\n                                                <nb-radio (click)=\"\n                                eval_conditions(\n                                  form,\n                                  question,\n                                  2,\n                                  section.questions\n                                )\n                              \" value=\"2\">\n                                                    No\n                                                </nb-radio>\n                                            </nb-radio-group>\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'M'\">\n                                            <nb-checkbox status=\"danger\" [name]=\"question.label + '_' + option.value\" class=\"m-2 row\" [formControl]=\"form.controls[question.label + '_' + option.subcode]\" *ngFor=\"\n                              let option of question.options;\n                              let j = index;\n                              trackBy: trackByFn\n                            \" value=\"option.value\">\n                                                <ng-template #elseBlock2>\n                                                    {{ option.text }}\n                                                </ng-template>\n                                                <input *ngIf=\"option.isOther; else elseBlock2\" type=\"text\" fieldSize=\"small\" shape=\"round\" fullWidth status=\"danger\" nbInput (click)=\"\n                                  form.get(question.label).setValue(option.value)\n                                \" [placeholder]=\"option.text\" [formControl]=\"form.controls[question.label + '_OTRO']\" />\n                                            </nb-checkbox>\n\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'D'\">\n                                            <input nbInput status=\"danger\" placeholder=\"dd - MM - yyyy\" [nbDatepicker]=\"formcontrol\" [formControl]=\"form.controls[question.label]\" />\n                                            <nb-datepicker format=\"dd - MM - yyyy\" #formcontrol></nb-datepicker>\n                                        </div>\n                                        <div class=\"pt-2 d-flex flex-row justify-content-between align-items-center\" *ngSwitchCase=\"'E'\">\n                                            <div>\n                                                {{ question.start }}\n                                            </div>\n                                            <nb-radio-group class=\"d-flex flex-row justify-content-between\" [name]=\"question.label\" [formControl]=\"form.controls[question.label]\">\n                                                <nb-radio class=\"\" value=\"1\"> 1 </nb-radio>\n                                                <nb-radio class=\"\" value=\"2\"> 2 </nb-radio>\n                                                <nb-radio class=\"\" value=\"3\"> 3 </nb-radio>\n                                                <nb-radio class=\"\" value=\"4\"> 4 </nb-radio>\n                                                <nb-radio class=\"\" value=\"5\"> 5 </nb-radio>\n                                            </nb-radio-group>\n                                            <div>\n                                                {{ question.end }}\n                                            </div>\n                                        </div>\n                                        <div class=\"pt-2\" *ngSwitchCase=\"'SC'\">\n\n                                            <ngx-scale-card [question]=\"question\" [form]=\"form\" (onChange)=\"onSubmitUpdate(form)\" (isDone)=\"updateProgress(total_questions_answered+1)\"></ngx-scale-card>\n                                        </div>\n                                        <nb-card class=\"mt-3\" *ngSwitchCase=\"'INS'\" accent=\"primary\" status=\"info\">\n                                            <nb-card-header>\n                                                {{question.text}}\n                                            </nb-card-header>\n                                            <nb-card-body>\n                                                <div class=\"caption p-2\">\n                                                    <b> {{question.desc}}</b>\n                                                </div>\n                                            </nb-card-body>\n                                        </nb-card>\n                                    </div>\n                                    <div *ngIf=\"\n                                      form.get(question.label)?.invalid &&\n                                      (form.get(question.label)?.dirty ||\n                                        form.get(question.label)?.touched)\n                                    \" class=\"alert text-danger label\">\n                                        <span class=\"glyphicon glyphicon-remove form-control-feedback fix-error-icon\"></span>\n\n                                        <div class=\"error-msg\" *ngIf=\"form.get(question.label).errors.required\">\n                                            La Pregunta <b>{{ question.label }}</b> es obligatoria.\n                                        </div>\n                                        <div class=\"error-msg\" *ngIf=\"form.get(question.label).errors.email\">\n                                            Debe ingresar un Mail Valido\n                                        </div>\n                                    </div>\n                                    <br />\n                                </div>\n\n\n\n\n                            </ng-container>\n\n                            <div class=\"text-center\">\n                                <!-- <button nbButton (click)=\"scrollToTop()\" nbStepperPrevious>\n                                  Anterior\n                                </button>-->\n                                <button status=\"primary\" *ngIf=\"section_id != '2';else finish\" type=\"submit\" nbButton (click)=\"onSubmit(form, 1)\">\n                  Siguiente\n                </button>\n                                <ng-template #finish>\n                                    <div class=\"cta\">\n\n                                        <button size=\"large\" shape=\"round\" status=\"info\" type=\"submit\" nbButton (click)=\"onSubmit(form, 2)\">\n                    Finalizar\n                  </button>\n                                    </div>\n                                </ng-template>\n\n\n                            </div>\n                        </form>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n\n    </div>\n</div>\n\n\n\n\n<!--<nb-card (click)=\"onSubmitUpdate(form)\" id=\"fixedbutton\">\n\n    <nb-badge text=\"?\" status=\"danger\" position=\"top left\"></nb-badge>\n    <button nbTooltip=\"Si no has terminado y deseas guardar tu progreso, haz clic aquí\" nbTooltipStatus=\"primary\" nbButton>\n\n      <nb-icon icon=\"save-outline\">\n      </nb-icon>\n  </button>\n</nb-card>\n-->\n"],"names":[],"sourceRoot":"webpack:///"}